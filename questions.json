{
    "stack_question_id": "76086491",
    "question_title": "wbdata.get_data does not work with timeframe parameter",
    "question_content": "\r\n                So I tried to get economic data about countries with the wbdata API. But the get_data module does not work when i try to limit the time period.\nimport time\nimport wbdata as wb\n'''GDP ANTIGUA UND ...\r\n            ",
    "question_url": "/questions/76086491/wbdata-get-data-does-not-work-with-timeframe-parameter",
    "date_posted": "2023-04-23 18:10:42Z",
    "upvote": "0",
    "view": "3",
    "tags": [
        "python",
        "api",
        "data-analysis"
    ],
    "answers_count": "0",
    "answers": [],
    "user": {
        "stack_user_id": "21679704",
        "name": "khalifakush",
        "reputation_score": "1",
        "gold_badges": 0,
        "silver_badges": 0,
        "bronze_badges": 0
    },
    "question_comments": []
}
{
    "stack_question_id": "76086453",
    "question_title": "Compare IP in Python",
    "question_content": "\r\n                I'm new in Python and still learning.I wanna make an app to compare two IPs , and if not equal, send an Email to me. i wrote this code but I think I have a problem because i haven't received Email. ...\r\n            ",
    "question_url": "/questions/76086453/compare-ip-in-python",
    "date_posted": "2023-04-23 18:04:40Z",
    "upvote": "0",
    "view": "7",
    "tags": [
        "python",
        "ip"
    ],
    "answers_count": "0",
    "answers": [],
    "user": {
        "stack_user_id": "21708523",
        "name": "fermesk abbasi",
        "reputation_score": "1",
        "gold_badges": 0,
        "silver_badges": 0,
        "bronze_badges": 0
    },
    "question_comments": []
}
{
    "stack_question_id": "76086477",
    "question_title": "how to make a python program to predict the next outcome of a game (of picking a color out of two) , using AI and ML libraries in python",
    "question_content": "\r\n                I wanted to make a program in python using LSTM technique  that can predict the next outcome or say probability of a picking a color out of two , the program should use AI and ML libraries, to read ...\r\n            ",
    "question_url": "/questions/76086477/how-to-make-a-python-program-to-predict-the-next-outcome-of-a-game-of-picking-a",
    "date_posted": "2023-04-23 18:08:18Z",
    "upvote": "0",
    "view": "4",
    "tags": [
        "python",
        "numpy",
        "machine-learning",
        "artificial-intelligence",
        "lstm"
    ],
    "answers_count": "0",
    "answers": [],
    "user": {
        "stack_user_id": "20930371",
        "name": "Ashish",
        "reputation_score": "1",
        "gold_badges": 0,
        "silver_badges": 0,
        "bronze_badges": "2"
    },
    "question_comments": []
}
{
    "stack_question_id": "76086451",
    "question_title": "Adding watermark to multiple images",
    "question_content": "\r\n                Hello I hope you are doing well! I need to edit the following part of a code I am making to add a watermark. I need it to open more that one image and add the watermark to each chosen image.\nimport os\n...\r\n            ",
    "question_url": "/questions/76086451/adding-watermark-to-multiple-images",
    "date_posted": "2023-04-23 18:04:40Z",
    "upvote": "0",
    "view": "4",
    "tags": [
        "python",
        "image",
        "python-imaging-library",
        "watermark"
    ],
    "answers_count": "0",
    "answers": [],
    "user": {
        "stack_user_id": "5774952",
        "name": "Zac Anger",
        "reputation_score": "5,805",
        "gold_badges": "1",
        "silver_badges": "14",
        "bronze_badges": "40"
    },
    "question_comments": []
}
{
    "stack_question_id": "76086458",
    "question_title": "Increase output width Jupyter Lab",
    "question_content": "\r\n                I'm using Jupyter Lab with Anaconda and I want to increase the output width so that the data doesn't wrap the line as shown in the image.\nimage\nI need to know how to increase the output width in ...\r\n            ",
    "question_url": "/questions/76086458/increase-output-width-jupyter-lab",
    "date_posted": "2023-04-23 18:04:40Z",
    "upvote": "0",
    "view": "4",
    "tags": [
        "python",
        "jupyter-lab",
        "anaconda3"
    ],
    "answers_count": "0",
    "answers": [],
    "user": {
        "stack_user_id": "12063372",
        "name": "Berg A.",
        "reputation_score": "1",
        "gold_badges": 0,
        "silver_badges": 0,
        "bronze_badges": 0
    },
    "question_comments": []
}
{
    "stack_question_id": "76086373",
    "question_title": "How do I make a byte array for a PNG from two Numpy arrays",
    "question_content": "\r\n                I have two Numpy arrays (one has positional data, the other has color data), and I am trying to convert them into a byte array that could be represented as a PNG. The positional array has a shape of (...\r\n            ",
    "question_url": "/questions/76086373/how-do-i-make-a-byte-array-for-a-png-from-two-numpy-arrays",
    "date_posted": "2023-04-23 17:48:00Z",
    "upvote": "0",
    "view": "11",
    "tags": [
        "python",
        "arrays",
        "python-3.x",
        "numpy",
        "numpy-ndarray"
    ],
    "answers_count": "0",
    "answers": [],
    "user": {
        "stack_user_id": "21039813",
        "name": "tempaccountforissue",
        "reputation_score": "45",
        "gold_badges": 0,
        "silver_badges": 0,
        "bronze_badges": "5"
    },
    "question_comments": []
}
{
    "stack_question_id": "76086450",
    "question_title": "What permissions I need to get to wall post and group post?",
    "question_content": "\r\n                I want to be able to wall post in my profile and post messages to my own Facebook Group. What permissions I need to get and how? (application Graph API)\nimport facebook\n\n# Replace the access token ...\r\n            ",
    "question_url": "/questions/76086450/what-permissions-i-need-to-get-to-wall-post-and-group-post",
    "date_posted": "2023-04-23 18:04:40Z",
    "upvote": "0",
    "view": "3",
    "tags": [
        "python",
        "facebook-graph-api"
    ],
    "answers_count": "0",
    "answers": [],
    "user": {
        "stack_user_id": "4379085",
        "name": "werwer werwer",
        "reputation_score": "31",
        "gold_badges": 0,
        "silver_badges": 0,
        "bronze_badges": "4"
    },
    "question_comments": []
}
{
    "stack_question_id": "76086357",
    "question_title": "PyQt: TypeError: 'Wrong base class of toplevel widget'",
    "question_content": "\r\n                I have created to .ui files using QtDesigner and I load them into two seperate windows as show below\nimport math\nimport os\nimport sys\nimport cv2\nimport numpy as np\nimport qimage2ndarray\nimport Astar\n...\r\n            ",
    "question_url": "/questions/76086357/pyqt-typeerror-wrong-base-class-of-toplevel-widget",
    "date_posted": "2023-04-23 17:46:19Z",
    "upvote": "0",
    "view": "5",
    "tags": [
        "python",
        "qt",
        "pyqt"
    ],
    "answers_count": "0",
    "answers": [],
    "user": {
        "stack_user_id": "21715783",
        "name": "Lielph _",
        "reputation_score": "1",
        "gold_badges": 0,
        "silver_badges": 0,
        "bronze_badges": 0
    },
    "question_comments": []
}
{
    "stack_question_id": "76086317",
    "question_title": "Num.to_bytes - OverflowError: int too big to convert",
    "question_content": "\r\n                In order to convert -10947726235 into byte array I ran:\nNum = -10947726235\nByteArray = Num.to_bytes(4, byteorder='little', signed=True)\n\nI got:\nOverflowError: int too big to convert\n\nCan you please ...\r\n            ",
    "question_url": "/questions/76086317/num-to-bytes-overflowerror-int-too-big-to-convert",
    "date_posted": "2023-04-23 17:39:00Z",
    "upvote": "-1",
    "view": "15",
    "tags": [
        "python",
        "byte"
    ],
    "answers_count": "1",
    "answers": [
        {
            "stack_answer_id": "76086355",
            "answer_content": "\r\n Four bytes can only represent a negative number of -2 billion-ish or lower. \n >>> int.from_bytes(bytes([0,0,0,0x80]), 'little', signed=True)\n-2147483648\n \n You need five bytes or more to represent your number: \n >>> Num = -10947726235\n>>> Num.to_bytes(5, 'little', signed=True).hex(' ')\n'65 f4 76 73 fd'\n \n    ",
            "date_posted": "2023-04-23 17:46:08Z",
            "upvote": "\r\n            2\r\n        ",
            "accepted": "YES",
            "user": {
                "stack_user_id": "235698",
                "name": "Mark Tolonen",
                "reputation_score": "164k",
                "gold_badges": "25",
                "silver_badges": "169",
                "bronze_badges": "247"
            },
            "answer_comments": []
        }
    ],
    "user": {
        "stack_user_id": "4518341",
        "name": "wjandrea",
        "reputation_score": "26.7k",
        "gold_badges": "9",
        "silver_badges": "58",
        "bronze_badges": "79"
    },
    "question_comments": [
        {
            "stack_question_id": "76086317",
            "stack_question_comment_id": "134185364",
            "comment_content": "Sounds like it\u2019s too big.  Try a bigger number of bytes?  (The first arg, which you gave as only 4.)",
            "username": "Samwise"
        },
        {
            "stack_question_id": "76086317",
            "stack_question_comment_id": "134185370",
            "comment_content": "What do you need help with? That number doesn't fit in 4 bytes, just like the error says. For tips, check out ",
            "username": "wjandrea"
        }
    ]
}
{
    "stack_question_id": "76086311",
    "question_title": "Can't locate element in hybrid app after changing context to webview Python/Appium",
    "question_content": "\r\n                import time\n\nfrom appium import webdriver\nfrom selenium.webdriver.common.by import By\n\ndesired_caps=dict(\n\n    deviceName='Android',\n    platformName='Android',\n    appPackage= 'com.android.chrome',\n  ...\r\n            ",
    "question_url": "/questions/76086311/cant-locate-element-in-hybrid-app-after-changing-context-to-webview-python-appi",
    "date_posted": "2023-04-23 17:37:42Z",
    "upvote": "0",
    "view": "4",
    "tags": [
        "python",
        "appium",
        "hybrid-mobile-app"
    ],
    "answers_count": "0",
    "answers": [],
    "user": {
        "stack_user_id": "3853872",
        "name": "Bob Masinburg",
        "reputation_score": "11",
        "gold_badges": 0,
        "silver_badges": 0,
        "bronze_badges": "4"
    },
    "question_comments": []
}
{
    "stack_question_id": "76086344",
    "question_title": "Defining base size instead of the whole size from point to point of a figure",
    "question_content": "\r\n                So I've been using a plotting code to help me with some numbers but right now, the plotter what it does is that the variable \"base_size\" instead of defining the size of 1 of the sides of the ...\r\n            ",
    "question_url": "/questions/76086344/defining-base-size-instead-of-the-whole-size-from-point-to-point-of-a-figure",
    "date_posted": "2023-04-23 17:43:37Z",
    "upvote": "0",
    "view": "7",
    "tags": [
        "python",
        "matplotlib",
        "math"
    ],
    "answers_count": "0",
    "answers": [],
    "user": {
        "stack_user_id": "13918891",
        "name": "NooberPlays",
        "reputation_score": "41",
        "gold_badges": 0,
        "silver_badges": 0,
        "bronze_badges": "6"
    },
    "question_comments": []
}
{
    "stack_question_id": "76086283",
    "question_title": "PyQt5/ What is the correct way to send an end signal to a thread? Calling a member function or sending a signal?",
    "question_content": "\r\n                An object from class Worker(QObject) is moved to a QThread. The thread's start signal is connected to the start function of the worker object to start a loop there. In this loop, a tick signal is sent ...\r\n            ",
    "question_url": "/questions/76086283/pyqt5-what-is-the-correct-way-to-send-an-end-signal-to-a-thread-calling-a-memb",
    "date_posted": "2023-04-23 17:30:36Z",
    "upvote": "0",
    "view": "3",
    "tags": [
        "python",
        "thread-safety",
        "qthread",
        "qapplication"
    ],
    "answers_count": "0",
    "answers": [],
    "user": {
        "stack_user_id": "20268863",
        "name": "Holger",
        "reputation_score": "11",
        "gold_badges": 0,
        "silver_badges": 0,
        "bronze_badges": "3"
    },
    "question_comments": []
}
{
    "stack_question_id": "76086327",
    "question_title": "Missing optional dependency 'Jinja2' - df.style.background_gradient - However is installed",
    "question_content": "\r\n                I am working in a virtualenv where I've installed pandas and Jinja2.\nWhen I run df.style.background_gradient()   I get the following error:\njinja2 = import_optional_dependency(\"jinja2\", ...\r\n            ",
    "question_url": "/questions/76086327/missing-optional-dependency-jinja2-df-style-background-gradient-however-is",
    "date_posted": "2023-04-23 17:40:51Z",
    "upvote": "0",
    "view": "4",
    "tags": [
        "python",
        "pandas",
        "jinja2",
        "virtualenv"
    ],
    "answers_count": "0",
    "answers": [],
    "user": {
        "stack_user_id": "21582094",
        "name": "Drago_ir",
        "reputation_score": "1",
        "gold_badges": 0,
        "silver_badges": 0,
        "bronze_badges": "2"
    },
    "question_comments": []
}
{
    "stack_question_id": "76086307",
    "question_title": "How to connect Python to Cloud Firestore?",
    "question_content": "\r\n                I am connecting to Cloud Firestore with Python. But it is returning some error.\nimport firebase_admin\nfrom firebase_admin import credentials\nfrom firebase_admin import firestore\n\ncred = credentials....\r\n            ",
    "question_url": "/questions/76086307/how-to-connect-python-to-cloud-firestore",
    "date_posted": "2023-04-23 17:36:57Z",
    "upvote": "-1",
    "view": "11",
    "tags": [
        "python",
        "firebase",
        "google-cloud-firestore"
    ],
    "answers_count": "0",
    "answers": [],
    "user": {
        "stack_user_id": "209103",
        "name": "Frank van Puffelen",
        "reputation_score": "552k",
        "gold_badges": "78",
        "silver_badges": "811",
        "bronze_badges": "795"
    },
    "question_comments": [
        {
            "stack_question_id": "76086307",
            "stack_question_comment_id": "134185322",
            "comment_content": "Please read ",
            "username": "Chris"
        }
    ]
}
{
    "stack_question_id": "76086444",
    "question_title": "Weird list behaviour in python3.12 [duplicate]",
    "question_content": "\r\n                Why does this list program\nlist_thing = [[0]*3]*3\nlist_thing[0][0] = 1\nprint(list_thing)\nlist_thing = [[0,0,0],[0,0,0],[0,0,0]]\nlist_thing[0][0] = 1\nprint(list_thing)\r\noutput this?\n[[1, 0, 0], [1, 0, ...\r\n            ",
    "question_url": "/questions/76086444/weird-list-behaviour-in-python3-12",
    "date_posted": "2023-04-23 18:04:07Z",
    "upvote": "0",
    "view": "14",
    "tags": [
        "python",
        "list",
        "indexing"
    ],
    "answers_count": "0",
    "answers": [
        {
            "stack_answer_id": "240205",
            "answer_content": "\r\n When you write  [x]*3  you get, essentially, the list  [x, x, x] . That is, a list with 3 references to the same  x . When you then modify this single  x  it is visible via all three references to it: \n x = [1] * 4\nxs = [x] * 3\nprint(f\"id(x): {id(x)}\")\n# id(x): 140560897920048\nprint(\n    f\"id(xs[0]): {id(xs[0])}\\n\"\n    f\"id(xs[1]): {id(xs[1])}\\n\"\n    f\"id(xs[2]): {id(xs[2])}\"\n)\n# id(xs[0]): 140560897920048\n# id(xs[1]): 140560897920048\n# id(xs[2]): 140560897920048\n\nx[0] = 42\nprint(f\"x: {x}\")\n# x: [42, 1, 1, 1]\nprint(f\"xs: {xs}\")\n# xs: [[42, 1, 1, 1], [42, 1, 1, 1], [42, 1, 1, 1]]\n \n To fix it, you need to make sure that you create a new list at each position. One way to do it is \n [[1]*4 for _ in range(3)]\n \n which will reevaluate  [1]*4  each time instead of evaluating it once and making 3 references to 1 list. \n \n You might wonder why  *  can't make independent objects the way the list comprehension does. That's because the multiplication operator  *  operates on objects, without seeing expressions. When you use  *  to multiply  [[1] * 4]  by 3,  *  only sees the 1-element list  [[1] * 4]  evaluates to, not the  [[1] * 4  expression text.  *  has no idea how to make copies of that element, no idea how to reevaluate  [[1] * 4] , and no idea you even want copies, and in general, there might not even be a way to copy the element. \n The only option  *  has is to make new references to the existing sublist instead of trying to make new sublists. Anything else would be inconsistent or require major redesigning of fundamental language design decisions. \n In contrast, a list comprehension reevaluates the element expression on every iteration.  [[1] * 4 for n in range(3)]  reevaluates  [1] * 4  every time for the same reason  [x**2 for x in range(3)]  reevaluates  x**2  every time. Every evaluation of  [1] * 4  generates a new list, so the list comprehension does what you wanted. \n Incidentally,  [1] * 4  also doesn't copy the elements of  [1] , but that doesn't matter, since integers are immutable. You can't do something like  1.value = 2  and turn a 1 into a 2. \n    ",
            "date_posted": "2022-05-22 19:55:56Z",
            "upvote": "\r\n            782\r\n        ",
            "accepted": "NO",
            "user": {
                "stack_user_id": "365102",
                "name": "Mateen Ulhaq",
                "reputation_score": "23.6k",
                "gold_badges": "16",
                "silver_badges": "95",
                "bronze_badges": "132"
            },
            "answer_comments": [
                {
                    "stack_answer_id": "240205",
                    "stack_answer_comment_id": "48862076",
                    "comment_content": "I am surprised that no body points out  that, the answer here is misleading. ",
                    "username": "Allanqunzi"
                },
                {
                    "stack_answer_id": "240205",
                    "stack_answer_comment_id": "48871095",
                    "comment_content": "Technically, it's still correct. ",
                    "username": "CAdaker"
                },
                {
                    "stack_answer_id": "240205",
                    "stack_answer_comment_id": "60950287",
                    "comment_content": "@Allanqunzi you are wrong. Do ",
                    "username": "timgeb"
                },
                {
                    "stack_answer_id": "240205",
                    "stack_answer_comment_id": "126691081",
                    "comment_content": "can anyone find documents about the ",
                    "username": "Lei Yang"
                },
                {
                    "stack_answer_id": "240205",
                    "stack_answer_comment_id": "127789351",
                    "comment_content": "@LeiYang It's listed under ",
                    "username": "Jasmijn"
                }
            ]
        },
        {
            "stack_answer_id": "18454568",
            "answer_content": "\r\n size = 3\nmatrix_surprise = [[0] * size] * size\nmatrix = [[0]*size for _ in range(size)]\n \n Live visualization  using Python Tutor: \n \n    ",
            "date_posted": "2021-06-18 17:12:23Z",
            "upvote": "\r\n            178\r\n        ",
            "accepted": "YES",
            "user": {
                "stack_user_id": "3064538",
                "name": "Boris Verkhovskiy",
                "reputation_score": "13.9k",
                "gold_badges": "10",
                "silver_badges": "99",
                "bronze_badges": "100"
            },
            "answer_comments": [
                {
                    "stack_answer_id": "18454568",
                    "stack_answer_comment_id": "76707168",
                    "comment_content": "So, why if we write matrix= [[x] * 2] doesn't make 2 elemnts for the same object like the example you describe, it seems to be the same concept, what am i missing?",
                    "username": "Ahmed Mohamed"
                },
                {
                    "stack_answer_id": "18454568",
                    "stack_answer_comment_id": "76720889",
                    "comment_content": "@AhmedMohamed Indeed it does make a list with two elements of the exact same object that ",
                    "username": "nadrimajstor"
                },
                {
                    "stack_answer_id": "18454568",
                    "stack_answer_comment_id": "76721203",
                    "comment_content": "@nadrimajstor so why the change in matrix[0] doesn't affect matrix[1] like the example above with 2d matrix.",
                    "username": "Ahmed Mohamed"
                },
                {
                    "stack_answer_id": "18454568",
                    "stack_answer_comment_id": "76723575",
                    "comment_content": "@AhmedMohamed Surprise come when you make a \"copy\" of mutable sequence (in our example it is a ",
                    "username": "nadrimajstor"
                },
                {
                    "stack_answer_id": "18454568",
                    "stack_answer_comment_id": "76724009",
                    "comment_content": "@AhmedMohamed Take a look at ",
                    "username": "nadrimajstor"
                }
            ]
        },
        {
            "stack_answer_id": "240215",
            "answer_content": "\r\n Actually, this is exactly what you would expect. Let's decompose what is happening here: \n You write \n lst = [[1] * 4] * 3\n \n This is equivalent to: \n lst1 = [1]*4\nlst = [lst1]*3\n \n This means  lst  is a list with 3 elements all pointing to  lst1 . This means the two following lines are equivalent: \n lst[0][0] = 5\nlst1[0] = 5\n \n As  lst[0]  is nothing but  lst1 . \n To obtain the desired behavior, you can use a list comprehension: \n lst = [ [1]*4 for n in range(3) ]\n \n In this case, the expression is re-evaluated for each  n , leading to a different list. \n    ",
            "date_posted": "2021-06-18 16:49:18Z",
            "upvote": "\r\n            72\r\n        ",
            "accepted": "YES",
            "user": {
                "stack_user_id": "3064538",
                "name": "Boris Verkhovskiy",
                "reputation_score": "13.9k",
                "gold_badges": "10",
                "silver_badges": "99",
                "bronze_badges": "100"
            },
            "answer_comments": [
                {
                    "stack_answer_id": "240215",
                    "stack_answer_comment_id": "75062949",
                    "comment_content": "Just a small addition to the nice answer here: it's evident that you're dealing with same object if you do ",
                    "username": "Sergiy Kolodyazhnyy"
                },
                {
                    "stack_answer_id": "240215",
                    "stack_answer_comment_id": "128207126",
                    "comment_content": "Doesn't explain why modifying a 1d list causes a copy while a 2d list doesn't cause any copy",
                    "username": "JobHunter69"
                },
                {
                    "stack_answer_id": "240215",
                    "stack_answer_comment_id": "131210031",
                    "comment_content": "@JobHunter69 neither does copying; it's all an illusion.  With a 1d list of immutable objects such as numbers or strings, you can't change those list elements; you can only replace them with new values.  It looks like you have a copy even though you don't.  The 2d list is actually a list of lists, and you can easily change those inner lists.",
                    "username": "Mark Ransom"
                }
            ]
        },
        {
            "stack_answer_id": "240202",
            "answer_content": "\r\n [[1] * 4] * 3\n \n\n or even: \n\n [[1, 1, 1, 1]] * 3\n \n\n Creates a list that references the internal  [1,1,1,1]  3 times - not three copies of the inner list, so any time you modify the list (in any position), you'll see the change three times. \n\n It's the same as this example: \n\n >>> inner = [1,1,1,1]\n>>> outer = [inner]*3\n>>> outer\n[[1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1]]\n>>> inner[0] = 5\n>>> outer\n[[5, 1, 1, 1], [5, 1, 1, 1], [5, 1, 1, 1]]\n \n\n where it's probably a little less surprising. \n    ",
            "date_posted": "2017-01-14 07:54:00Z",
            "upvote": "\r\n            48\r\n        ",
            "accepted": "YES",
            "user": {
                "stack_user_id": "4952130",
                "name": "Dimitris Fasarakis Hilliard",
                "reputation_score": "148k",
                "gold_badges": "30",
                "silver_badges": "258",
                "bronze_badges": "245"
            },
            "answer_comments": [
                {
                    "stack_answer_id": "240202",
                    "stack_answer_comment_id": "103503",
                    "comment_content": "You can use the \"is\" operator to discover this. ls[0] is ls[1] returns True.",
                    "username": "mipadi"
                }
            ]
        },
        {
            "stack_answer_id": "43246520",
            "answer_content": "\r\n my_list = [[1]*4] * 3  creates one list object  [1,1,1,1]  in memory and copies its reference 3 times over. This is equivalent to  obj = [1,1,1,1]; my_list = [obj]*3 . Any modification to  obj  will be reflected at three places, wherever  obj  is referenced in the list.\nThe right statement would be: \n my_list = [[1]*4 for _ in range(3)]\n \n or \n my_list = [[1 for __ in range(4)] for _ in range(3)]\n \n Important thing to note here  is that the  *  operator is  mostly  used to create a  list of literals . Although  1  is immutable,  obj = [1]*4  will still create a list of  1  repeated 4 times over to form  [1,1,1,1] . But if any reference to an immutable object is made, the object is overwritten with a new one. \n This means if we do  obj[1] = 42 , then  obj  will become  [1,42,1,1]   not   [42,42,42,42]  as some may assume. This can also be verified: \n >>> my_list = [1]*4\n>>> my_list\n[1, 1, 1, 1]\n\n>>> id(my_list[0])\n4522139440\n>>> id(my_list[1])  # Same as my_list[0]\n4522139440\n \n \n >>> my_list[1] = 42  # Since my_list[1] is immutable, this operation overwrites my_list[1] with a new object changing its id.\n>>> my_list\n[1, 42, 1, 1]\n\n>>> id(my_list[0])\n4522139440\n>>> id(my_list[1])  # id changed\n4522140752\n>>> id(my_list[2])  # id still same as my_list[0], still referring to value `1`.\n4522139440\n \n    ",
            "date_posted": "2021-06-18 16:32:37Z",
            "upvote": "\r\n            13\r\n        ",
            "accepted": "YES",
            "user": {
                "stack_user_id": "3064538",
                "name": "Boris Verkhovskiy",
                "reputation_score": "13.9k",
                "gold_badges": "10",
                "silver_badges": "99",
                "bronze_badges": "100"
            },
            "answer_comments": [
                {
                    "stack_answer_id": "43246520",
                    "stack_answer_comment_id": "90015086",
                    "comment_content": "It's not about literals. ",
                    "username": "Martijn Pieters"
                }
            ]
        },
        {
            "stack_answer_id": "30898048",
            "answer_content": "\r\n Alongside the accepted answer that explained the problem correctly, instead of creating a list with duplicated elements using following code: \n [[1]*4 for _ in range(3)]\n \n Also, you can use  itertools.repeat()  to create an iterator object of repeated elements: \n >>> a = list(repeat(1,4))\n[1, 1, 1, 1]\n>>> a[0] = 5\n>>> a\n[5, 1, 1, 1]\n \n P.S. If you're using NumPy and you only want to create an array of ones or zeroes you can use  np.ones  and  np.zeros  and/or for other numbers use  np.repeat : \n >>> import numpy as np\n>>> np.ones(4)\narray([1., 1., 1., 1.])\n>>> np.ones((4, 2))\narray([[1., 1.],\n       [1., 1.],\n       [1., 1.],\n       [1., 1.]])\n>>> np.zeros((4, 2))\narray([[0., 0.],\n       [0., 0.],\n       [0., 0.],\n       [0., 0.]])\n>>> np.repeat([7], 10)\narray([7, 7, 7, 7, 7, 7, 7, 7, 7, 7])\n \n    ",
            "date_posted": "2021-06-18 17:26:13Z",
            "upvote": "\r\n            10\r\n        ",
            "accepted": "YES",
            "user": {
                "stack_user_id": "3064538",
                "name": "Boris Verkhovskiy",
                "reputation_score": "13.9k",
                "gold_badges": "10",
                "silver_badges": "99",
                "bronze_badges": "100"
            },
            "answer_comments": []
        },
        {
            "stack_answer_id": "36452923",
            "answer_content": "\r\n Python containers contain references to other objects. See this example: \n\n >>> a = []\n>>> b = [a]\n>>> b\n[[]]\n>>> a.append(1)\n>>> b\n[[1]]\n \n\n In this  b  is a list that contains one item that is a reference to list  a . The list  a  is mutable. \n\n The multiplication of a list by an integer is equivalent to adding the list to itself multiple times (see  common sequence operations ). So continuing with the example: \n\n >>> c = b + b\n>>> c\n[[1], [1]]\n>>>\n>>> a[0] = 2\n>>> c\n[[2], [2]]\n \n\n We can see that the list  c  now contains two references to list  a  which is equivalent to  c = b * 2 . \n\n Python FAQ also contains explanation of this behavior:  How do I create a multidimensional list? \n    ",
            "date_posted": "2016-04-06 13:40:43Z",
            "upvote": "\r\n            9\r\n        ",
            "accepted": "YES",
            "user": {
                "stack_user_id": "3185929",
                "name": "Zbyn\u011bk Winkler",
                "reputation_score": "1,163",
                "gold_badges": "1",
                "silver_badges": "11",
                "bronze_badges": "12"
            },
            "answer_comments": []
        },
        {
            "stack_answer_id": "62497944",
            "answer_content": "\r\n I am adding my answer to explain the same diagrammatically. \n The way you created the 2D, creates a shallow list \n arr = [[0]*cols]*row\n \n Instead, if you want to update the elements of the list, you should use \n rows, cols = (5, 5) \narr = [[0 for i in range(cols)] for j in range(rows)] \n \n Explanation : \n One can create a list using: \n arr = [0]*N \n \n or \n arr = [0 for i in range(N)] \n \n In the first case all the indices of the array point to the same integer object \n \n and when you assign a value to a particular index, a new int object is created, for example  arr[4] = 5  creates \n \n Now let us see what happens when we create a list of list, in this case, all the elements of our top list will point to the same list \n \n And if you update the value of any index a new int object will be created. But since all the top-level list indexes are pointing at the same list, all the rows will look the same. And you will get the feeling that updating an element is updating all the elements in that column. \n \n Credits:  Thanks to  Pranav Devarakonda  for the easy explanation  here \n    ",
            "date_posted": "2022-05-19 09:56:29Z",
            "upvote": "\r\n            6\r\n        ",
            "accepted": "YES",
            "user": {
                "stack_user_id": "4621513",
                "name": "mkrieger1",
                "reputation_score": "17.8k",
                "gold_badges": "4",
                "silver_badges": "56",
                "bronze_badges": "63"
            },
            "answer_comments": []
        },
        {
            "stack_answer_id": "37804636",
            "answer_content": "\r\n In simple words this is happening because in python everything works  by reference , so when you create a list of list that way you basically end up with such problems. \n\n To solve your issue you can do either one of them:\n1. Use numpy array  documentation for numpy.empty \n2. Append the list as you get to a list.\n3. You can also use dictionary if you want   \n    ",
            "date_posted": "2016-06-14 06:36:52Z",
            "upvote": "\r\n            5\r\n        ",
            "accepted": "YES",
            "user": {
                "stack_user_id": "5801215",
                "name": "Neeraj Komuravalli",
                "reputation_score": "196",
                "gold_badges": 0,
                "silver_badges": "1",
                "bronze_badges": "8"
            },
            "answer_comments": []
        },
        {
            "stack_answer_id": "30759580",
            "answer_content": "\r\n Let's rewrite your code in the following way: \n x = 1\ny = [x]\nz = y * 4\n\nmy_list = [z] * 3\n \n Then having this, run the following code to make everything more clear. What the code does is basically print the  id s of the obtained objects, which \n \n Return[s] the \u201cidentity\u201d of an object \n \n and will help us identify them and analyse what happens: \n print(\"my_list:\")\nfor i, sub_list in enumerate(my_list):\n    print(\"\\t[{}]: {}\".format(i, id(sub_list)))\n    for j, elem in enumerate(sub_list):\n        print(\"\\t\\t[{}]: {}\".format(j, id(elem)))\n \n And you will get the following output: \n x: 1\ny: [1]\nz: [1, 1, 1, 1]\nmy_list:\n    [0]: 4300763792\n        [0]: 4298171528\n        [1]: 4298171528\n        [2]: 4298171528\n        [3]: 4298171528\n    [1]: 4300763792\n        [0]: 4298171528\n        [1]: 4298171528\n        [2]: 4298171528\n        [3]: 4298171528\n    [2]: 4300763792\n        [0]: 4298171528\n        [1]: 4298171528\n        [2]: 4298171528\n        [3]: 4298171528\n \n \n So now let's go step-by-step. You have  x  which is  1 , and a single element list  y  containing  x . Your first step is  y * 4  which will get you a new list  z , which is basically  [x, x, x, x] , i.e. it creates a new list which will have 4 elements, which are references to the initial  x  object. The next step is pretty similar. You basically do  z * 3 , which is  [[x, x, x, x]] * 3  and returns  [[x, x, x, x], [x, x, x, x], [x, x, x, x]] , for the same reason as for the first step. \n    ",
            "date_posted": "2021-06-18 16:36:25Z",
            "upvote": "\r\n            5\r\n        ",
            "accepted": "YES",
            "user": {
                "stack_user_id": "3064538",
                "name": "Boris Verkhovskiy",
                "reputation_score": "13.9k",
                "gold_badges": "10",
                "silver_badges": "99",
                "bronze_badges": "100"
            },
            "answer_comments": []
        },
        {
            "stack_answer_id": "36823796",
            "answer_content": "\r\n Everyone is explaining what is happening. I'll suggest one way to solve it: \n my_list = [[1 for i in range(4)] for j in range(3)]\n\nmy_list[0][0] = 5\nprint(my_list)\n \n And then you get: \n [[5, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1]]\n \n    ",
            "date_posted": "2021-06-18 16:39:24Z",
            "upvote": "\r\n            4\r\n        ",
            "accepted": "YES",
            "user": {
                "stack_user_id": "3064538",
                "name": "Boris Verkhovskiy",
                "reputation_score": "13.9k",
                "gold_badges": "10",
                "silver_badges": "99",
                "bronze_badges": "100"
            },
            "answer_comments": []
        },
        {
            "stack_answer_id": "57426328",
            "answer_content": "\r\n @spelchekr from  Python list multiplication: [[...]]*3 makes 3 lists which mirror each other when modified  and I had the same question about\n\"Why does only the outer  *3  create more references while the inner one doesn't? Why isn't it all 1s?\" \n li = [0] * 3\nprint([id(v) for v in li])  # [140724141863728, 140724141863728, 140724141863728]\nli[0] = 1\nprint([id(v) for v in li])  # [140724141863760, 140724141863728, 140724141863728]\nprint(id(0))  # 140724141863728\nprint(id(1))  # 140724141863760\nprint(li)     # [1, 0, 0]\n\nma = [[0]*3] * 3  # mainly discuss inner & outer *3 here\nprint([id(li) for li in ma])  # [1987013355080, 1987013355080, 1987013355080]\nma[0][0] = 1\nprint([id(li) for li in ma])  # [1987013355080, 1987013355080, 1987013355080]\nprint(ma)  # [[1, 0, 0], [1, 0, 0], [1, 0, 0]]\n \n Here is my explanation after trying the code above: \n \n The inner  *3  also creates references, but its references are immutable, something like  [&0, &0, &0] , then when you change  li[0] , you can't change any underlying reference of const int  0 , so you can just change the reference address into the new one  &1 ; \n while  ma = [&li, &li, &li]  and  li  is mutable, so when you call  ma[0][0] = 1 ,  ma[0][0]  is equal to  &li[0] , so all the  &li  instances will change its 1st address into  &1 . \n \n    ",
            "date_posted": "2021-06-18 17:02:12Z",
            "upvote": "\r\n            4\r\n        ",
            "accepted": "YES",
            "user": {
                "stack_user_id": "3064538",
                "name": "Boris Verkhovskiy",
                "reputation_score": "13.9k",
                "gold_badges": "10",
                "silver_badges": "99",
                "bronze_badges": "100"
            },
            "answer_comments": []
        },
        {
            "stack_answer_id": "38866487",
            "answer_content": "\r\n Trying to explain it more descriptively, \n\n Operation 1: \n\n x = [[0, 0], [0, 0]]\nprint(type(x)) # <class 'list'>\nprint(x) # [[0, 0], [0, 0]]\n\nx[0][0] = 1\nprint(x) # [[1, 0], [0, 0]]\n \n\n Operation 2: \n\n y = [[0] * 2] * 2\nprint(type(y)) # <class 'list'>\nprint(y) # [[0, 0], [0, 0]]\n\ny[0][0] = 1\nprint(y) # [[1, 0], [1, 0]]\n \n\n Noticed why doesn't modifying the first element of the first list didn't modify the second element of each list? That's because  [0] * 2  really is a list of two numbers, and a reference to 0 cannot be modified. \n\n If you want to create clone copies, try Operation 3: \n\n import copy\ny = [0] * 2   \nprint(y)   # [0, 0]\n\ny = [y, copy.deepcopy(y)]  \nprint(y) # [[0, 0], [0, 0]]\n\ny[0][0] = 1\nprint(y) # [[1, 0], [0, 0]]\n \n\n another interesting way to create clone copies, Operation 4: \n\n import copy\ny = [0] * 2\nprint(y) # [0, 0]\n\ny = [copy.deepcopy(y) for num in range(1,5)]\nprint(y) # [[0, 0], [0, 0], [0, 0], [0, 0]]\n\ny[0][0] = 5\nprint(y) # [[5, 0], [0, 0], [0, 0], [0, 0]]\n \n    ",
            "date_posted": "2016-08-10 07:29:38Z",
            "upvote": "\r\n            3\r\n        ",
            "accepted": "YES",
            "user": {
                "stack_user_id": "2285848",
                "name": "Adil Abbasi",
                "reputation_score": "3,141",
                "gold_badges": "1",
                "silver_badges": "40",
                "bronze_badges": "35"
            },
            "answer_comments": []
        },
        {
            "stack_answer_id": "38397772",
            "answer_content": "\r\n By using the inbuilt list function you can do like this \n\n a\nout:[[1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1]]\n#Displaying the list\n\na.remove(a[0])\nout:[[1, 1, 1, 1], [1, 1, 1, 1]]\n# Removed the first element of the list in which you want altered number\n\na.append([5,1,1,1])\nout:[[1, 1, 1, 1], [1, 1, 1, 1], [5, 1, 1, 1]]\n# append the element in the list but the appended element as you can see is appended in last but you want that in starting\n\na.reverse()\nout:[[5, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1]]\n#So at last reverse the whole list to get the desired list\n \n    ",
            "date_posted": "2016-07-25 09:09:59Z",
            "upvote": "\r\n            2\r\n        ",
            "accepted": "YES",
            "user": {
                "stack_user_id": "5230702",
                "name": "Anand Tripathi",
                "reputation_score": "14.1k",
                "gold_badges": "1",
                "silver_badges": "43",
                "bronze_badges": "49"
            },
            "answer_comments": [
                {
                    "stack_answer_id": "38397772",
                    "stack_answer_comment_id": "92685565",
                    "comment_content": "Note, fourth step can be dropped if you make second step: ",
                    "username": "U13-Forward"
                }
            ]
        },
        {
            "stack_answer_id": "64489659",
            "answer_content": "\r\n I arrived here because I was looking to see how I could nest an arbitrary number of lists. There are a lot of explanations and specific examples above, but you can generalize N dimensional list of lists of lists of ... with the following recursive function: \n import copy\n\ndef list_ndim(dim, el=None, init=None):\n    if init is None:\n        init = el\n\n    if len(dim)> 1:\n        return list_ndim(dim[0:-1], None, [copy.copy(init) for x in range(dim[-1])])\n\n    return [copy.deepcopy(init) for x in range(dim[0])]\n \n You make your first call to the function like this: \n dim = (3,5,2)\nel = 1.0\nl = list_ndim(dim, el)\n \n where  (3,5,2)  is a tuple of the dimensions of the structure (similar to numpy  shape  argument), and  1.0  is the element you want the structure to be initialized with (works with None as well). Note that the  init  argument is only provided by the recursive call to carry forward the nested child lists \n output of above: \n [[[1.0, 1.0], [1.0, 1.0], [1.0, 1.0], [1.0, 1.0], [1.0, 1.0]],\n [[1.0, 1.0], [1.0, 1.0], [1.0, 1.0], [1.0, 1.0], [1.0, 1.0]],\n [[1.0, 1.0], [1.0, 1.0], [1.0, 1.0], [1.0, 1.0], [1.0, 1.0]]]\n \n set specific elements: \n l[1][3][1] = 56\nl[2][2][0] = 36.0+0.0j\nl[0][1][0] = 'abc'\n \n resulting output: \n [[[1.0, 1.0], ['abc', 1.0], [1.0, 1.0], [1.0, 1.0], [1.0, 1.0]],\n [[1.0, 1.0], [1.0, 1.0], [1.0, 1.0], [1.0, 56.0], [1.0, 1.0]],\n [[1.0, 1.0], [1.0, 1.0], [(36+0j), 1.0], [1.0, 1.0], [1.0, 1.0]]]\n \n the non-typed nature of lists is demonstrated above \n    ",
            "date_posted": "2020-10-22 19:57:45Z",
            "upvote": "\r\n            0\r\n        ",
            "accepted": "YES",
            "user": {
                "stack_user_id": "8126390",
                "name": "Brian",
                "reputation_score": "622",
                "gold_badges": 0,
                "silver_badges": "6",
                "bronze_badges": "18"
            },
            "answer_comments": []
        },
        {
            "stack_answer_id": "65616429",
            "answer_content": "\r\n While the original question constructed the  sublists  with the multiplication operator, I'll add an example that uses the  same  list for the sublists. Adding this answer for completeness as this question is often used as a canonical for the issue \n node_count = 4\ncolors = [0,1,2,3]\nsol_dict = {node:colors for node in range(0,node_count)}\n \n The list in each dictionary value is the same object, trying to change one of the dictionaries values will be seen in all. \n >>> sol_dict\n{0: [0, 1, 2, 3], 1: [0, 1, 2, 3], 2: [0, 1, 2, 3], 3: [0, 1, 2, 3]}\n>>> [v is colors for v in sol_dict.values()]\n[True, True, True, True]\n>>> sol_dict[0].remove(1)\n>>> sol_dict\n{0: [0, 2, 3], 1: [0, 2, 3], 2: [0, 2, 3], 3: [0, 2, 3]}\n \n The correct way to construct the dictionary would be to use a copy of the list for each value. \n >>> colors = [0,1,2,3]\n>>> sol_dict = {node:colors[:] for node in range(0,node_count)}\n>>> sol_dict\n{0: [0, 1, 2, 3], 1: [0, 1, 2, 3], 2: [0, 1, 2, 3], 3: [0, 1, 2, 3]}\n>>> sol_dict[0].remove(1)\n>>> sol_dict\n{0: [0, 2, 3], 1: [0, 1, 2, 3], 2: [0, 1, 2, 3], 3: [0, 1, 2, 3]}\n \n    ",
            "date_posted": "2021-01-07 16:39:52Z",
            "upvote": "\r\n            0\r\n        ",
            "accepted": "YES",
            "user": {
                "stack_user_id": "65616429",
                "name": "\r\n        wwii\r\n        ",
                "reputation_score": 0,
                "gold_badges": 0,
                "silver_badges": 0,
                "bronze_badges": 0
            },
            "answer_comments": []
        },
        {
            "stack_answer_id": "64958758",
            "answer_content": "\r\n Note that items in the sequence are not copied; they are referenced multiple times . This often haunts new Python programmers; consider: \n >>> lists = [[]] * 3\n>>> lists\n[[], [], []]\n>>> lists[0].append(3)\n>>> lists\n[[3], [3], [3]]\n \n What has happened is that  [[]]  is a one-element list containing an empty list, so all three elements of  [[]] * 3  are references to this single empty list. Modifying any of the elements of lists modifies this single list. \n Another example to explain this is using  multi-dimensional arrays . \n You probably tried to make a multidimensional array like this: \n >>> A = [[None] * 2] * 3\n \n This looks correct if you print it: \n >>> A\n[[None, None], [None, None], [None, None]]\n \n But when you assign a value, it shows up in multiple places: \n >>> A[0][0] = 5\n>>> A\n[[5, None], [5, None], [5, None]]\n \n The reason is that replicating a list with\u00a0 * \u00a0doesn\u2019t create copies, it only creates references to the existing objects. The\u00a03\u00a0creates a list containing 3 references to the same list of length two. Changes to one row will show in all rows, which is almost certainly not what you want. \n    ",
            "date_posted": "2021-03-20 14:25:08Z",
            "upvote": "\r\n            0\r\n        ",
            "accepted": "YES",
            "user": {
                "stack_user_id": "7841468",
                "name": "mishsx",
                "reputation_score": "1,381",
                "gold_badges": "6",
                "silver_badges": "21",
                "bronze_badges": "37"
            },
            "answer_comments": []
        }
    ],
    "user": {
        "stack_user_id": "4518341",
        "name": "wjandrea",
        "reputation_score": "26.7k",
        "gold_badges": "9",
        "silver_badges": "58",
        "bronze_badges": "79"
    },
    "question_comments": [
        {
            "stack_question_id": "76086444",
            "stack_question_comment_id": "124422290",
            "comment_content": "Note that the same logic applies to a list of dicts, because of the same fundamental problem of aliasing a mutable object. See ",
            "username": "Karl Knechtel"
        },
        {
            "stack_question_id": "76086444",
            "stack_question_comment_id": "127396210",
            "comment_content": "Are there more specific questions for when the list of lists is created in other ways (but has the same problem)? For example, by using ",
            "username": "Karl Knechtel"
        },
        {
            "stack_question_id": "76086444",
            "stack_question_comment_id": "128071922",
            "comment_content": "See also ",
            "username": "Karl Knechtel"
        },
        {
            "stack_question_id": "76086444",
            "stack_question_comment_id": "128430067",
            "comment_content": "Related: ",
            "username": "CrazyChucky"
        }
    ]
}
{
    "stack_question_id": "76086225",
    "question_title": "Is there a way to put spaces in a slash command discord.py?",
    "question_content": "\r\n                I am making a discord bot which can get the player count of a game on different platforms. I would like to be able to make it so that there is one command called /count steam and it will return the ...\r\n            ",
    "question_url": "/questions/76086225/is-there-a-way-to-put-spaces-in-a-slash-command-discord-py",
    "date_posted": "2023-04-23 17:16:33Z",
    "upvote": "0",
    "view": "21",
    "tags": [
        "python",
        "discord.py"
    ],
    "answers_count": "2",
    "answers": [
        {
            "stack_answer_id": "76086241",
            "answer_content": "\r\n You can use underscore (\"_\"), so you will take this: \n /count_steam \n    ",
            "date_posted": "2023-04-23 17:21:11Z",
            "upvote": "\r\n            0\r\n        ",
            "accepted": "YES",
            "user": {
                "stack_user_id": "20646993",
                "name": "LuisDFQ",
                "reputation_score": "16",
                "gold_badges": 0,
                "silver_badges": 0,
                "bronze_badges": "3"
            },
            "answer_comments": [
                {
                    "stack_answer_id": "76086241",
                    "stack_answer_comment_id": "134185201",
                    "comment_content": "But is there a way to do it without an underscore?",
                    "username": "Sensor"
                }
            ]
        },
        {
            "stack_answer_id": "76086390",
            "answer_content": "\r\n You should use a  Group  named  count , containing a  Command  named  steam . This way you would invoke the desired command with  /count steam . \n import discord\nfrom discord import app_commands\nfrom discord.ext import commands\n\ncount_group = app_commands.Group(name=\"count\", description=\"Count something.\")\n\n@count_group.command(name=\"steam\", description=\"Gorilla Tag's steam player count\")\nasync def count_steam(interaction: discord.Interaction):\n    await interaction.response.send_message(getSteamPlayers())\n\n# Add group in the bot's command tree\nbot.tree.add_command(count_group)\n \n    ",
            "date_posted": "2023-04-23 17:59:05Z",
            "upvote": "\r\n            0\r\n        ",
            "accepted": "YES",
            "user": {
                "stack_user_id": "10525903",
                "name": "TheOneMusic",
                "reputation_score": "1,623",
                "gold_badges": "1",
                "silver_badges": "15",
                "bronze_badges": "38"
            },
            "answer_comments": []
        }
    ],
    "user": {
        "stack_user_id": "15440299",
        "name": "Sensor",
        "reputation_score": "13",
        "gold_badges": 0,
        "silver_badges": 0,
        "bronze_badges": "5"
    },
    "question_comments": []
}
{
    "stack_question_id": "76086281",
    "question_title": "tic-tac-toe in python using minimax",
    "question_content": "\r\n                \"\"\"\n    Genereaza starea urmatoare pentru un jucator in functie de starea curenta a jocului.\n    :param stare: starea curenta a jocului, o lista de 9 elemente, reprezentand tabla de joc....\r\n            ",
    "question_url": "/questions/76086281/tic-tac-toe-in-python-using-minimax",
    "date_posted": "2023-04-23 17:30:12Z",
    "upvote": "-3",
    "view": "19",
    "tags": [
        "python"
    ],
    "answers_count": "0",
    "answers": [],
    "user": {
        "stack_user_id": "21590382",
        "name": "Student",
        "reputation_score": "1",
        "gold_badges": 0,
        "silver_badges": 0,
        "bronze_badges": "1"
    },
    "question_comments": [
        {
            "stack_question_id": "76086281",
            "stack_question_comment_id": "134185252",
            "comment_content": "Please trim your code to make it easier to find your problem. Follow these guidelines to create a ",
            "username": "Community"
        },
        {
            "stack_question_id": "76086281",
            "stack_question_comment_id": "134185312",
            "comment_content": " only has one dimension but you use it as if it had two. And english please.",
            "username": "luk2302"
        }
    ]
}
{
    "stack_question_id": "76086187",
    "question_title": "NameError when running 'assert request._method == request_method'",
    "question_content": "\r\n                I am trying to solve a question in an assignment where we are supposed to open a web page using urllib.request, then check the response code and HTTP verb, then read the Doctype declaration. For the ...\r\n            ",
    "question_url": "/questions/76086187/nameerror-when-running-assert-request-method-request-method",
    "date_posted": "2023-04-23 17:09:04Z",
    "upvote": "-1",
    "view": "13",
    "tags": [
        "python",
        "html",
        "http",
        "urllib",
        "hashlib"
    ],
    "answers_count": "0",
    "answers": [],
    "user": {
        "stack_user_id": "21167928",
        "name": "MDJ19",
        "reputation_score": "1",
        "gold_badges": 0,
        "silver_badges": 0,
        "bronze_badges": "1"
    },
    "question_comments": [
        {
            "stack_question_id": "76086187",
            "stack_question_comment_id": "134185163",
            "comment_content": "The line ",
            "username": "Michael Butscher"
        },
        {
            "stack_question_id": "76086187",
            "stack_question_comment_id": "134185231",
            "comment_content": "@Michael Butscher no it only tells us to open an HTTP page using the urllib.request module.",
            "username": "MDJ19"
        },
        {
            "stack_question_id": "76086187",
            "stack_question_comment_id": "134185238",
            "comment_content": "You might have meant ",
            "username": "Miguel Guthridge"
        },
        {
            "stack_question_id": "76086187",
            "stack_question_comment_id": "134185461",
            "comment_content": "@Miguel Guthridge that may be the case. Just tried it with that change and I get an assertion error now. But that could just be because response.getheader('allow') is incorrect. I can play around with that. Thanks for the suggestion.",
            "username": "MDJ19"
        }
    ]
}
{
    "stack_question_id": "76086179",
    "question_title": "Output video has blue skin tone despite the input video being normal",
    "question_content": "\r\n                I am using Python and OpenCV to add glasses to a person's face in a video. I am detecting the face and nose position using Haar cascades and then pasting a transparent PNG image of the glasses onto ...\r\n            ",
    "question_url": "/questions/76086179/output-video-has-blue-skin-tone-despite-the-input-video-being-normal",
    "date_posted": "2023-04-23 17:06:05Z",
    "upvote": "0",
    "view": "9",
    "tags": [
        "python",
        "opencv",
        "tkinter",
        "face-detection"
    ],
    "answers_count": "0",
    "answers": [],
    "user": {
        "stack_user_id": "20454775",
        "name": "Karsen Eubanks",
        "reputation_score": "1",
        "gold_badges": 0,
        "silver_badges": 0,
        "bronze_badges": 0
    },
    "question_comments": []
}
{
    "stack_question_id": "76086237",
    "question_title": "I use Google colab, And I'm going to try MySql, when I create database something goes wrong",
    "question_content": "\r\n                this colab link https://colab.research.google.com/drive/1gKpy88E52qhDqq4N_f_2cNr8cH98g5b6?usp=sharing\nthis is code\nimport mysql.connector\n\nmydb = mysql.connector.connect(\n  host=\"127.0.0.1\",\n...\r\n            ",
    "question_url": "/questions/76086237/i-use-google-colab-and-im-going-to-try-mysql-when-i-create-database-something",
    "date_posted": "2023-04-23 17:20:07Z",
    "upvote": "-1",
    "view": "8",
    "tags": [
        "python",
        "mysql",
        "google-colaboratory",
        "mysql-python"
    ],
    "answers_count": "0",
    "answers": [],
    "user": {
        "stack_user_id": "18196610",
        "name": "xoqon2003",
        "reputation_score": "1",
        "gold_badges": 0,
        "silver_badges": 0,
        "bronze_badges": "3"
    },
    "question_comments": [
        {
            "stack_question_id": "76086237",
            "stack_question_comment_id": "134185196",
            "comment_content": "Show code and other textual information as properly formatted text in the question, not as comment, image or external link.",
            "username": "Michael Butscher"
        },
        {
            "stack_question_id": "76086237",
            "stack_question_comment_id": "134185216",
            "comment_content": " ",
            "username": "xoqon2003"
        },
        {
            "stack_question_id": "76086237",
            "stack_question_comment_id": "134185217",
            "comment_content": "Please read ",
            "username": "Chris"
        },
        {
            "stack_question_id": "76086237",
            "stack_question_comment_id": "134185225",
            "comment_content": " ",
            "username": "xoqon2003"
        }
    ]
}
{
    "stack_question_id": "76086177",
    "question_title": "how do i run another file with python script inside of it?",
    "question_content": "\r\n                here's the python code I have:\n#python code for CONE programming language\na = open(\"commands\", \"x\")\nb = open(\"commands\", \"r+\")\n\ndef println(inp):\n    l = 0\n    ...\r\n            ",
    "question_url": "/questions/76086177/how-do-i-run-another-file-with-python-script-inside-of-it",
    "date_posted": "2023-04-23 17:05:14Z",
    "upvote": "-1",
    "view": "27",
    "tags": [
        "python"
    ],
    "answers_count": "0",
    "answers": [],
    "user": {
        "stack_user_id": "4518341",
        "name": "wjandrea",
        "reputation_score": "26.7k",
        "gold_badges": "9",
        "silver_badges": "58",
        "bronze_badges": "79"
    },
    "question_comments": [
        {
            "stack_question_id": "76086177",
            "stack_question_comment_id": "134185156",
            "comment_content": "Welcome to Stack Overflow! Please take the ",
            "username": "wjandrea"
        },
        {
            "stack_question_id": "76086177",
            "stack_question_comment_id": "134185184",
            "comment_content": "Possible duplicate: ",
            "username": "wjandrea"
        },
        {
            "stack_question_id": "76086177",
            "stack_question_comment_id": "134185221",
            "comment_content": "You could be looking for an ",
            "username": "Miguel Guthridge"
        }
    ]
}
{
    "stack_question_id": "76086222",
    "question_title": "(Django) How to change admin site filtering panel options?",
    "question_content": "\r\n                I'm trying to set a filter on the Seller model's admin page using the rate field, but there's a slight issue.\nthe rate field can have a range of: -1 + (0, 5]\nI want the filter panel to have 6 values, ...\r\n            ",
    "question_url": "/questions/76086222/django-how-to-change-admin-site-filtering-panel-options",
    "date_posted": "2023-04-23 17:16:09Z",
    "upvote": "0",
    "view": "10",
    "tags": [
        "python",
        "django",
        "django-models",
        "django-admin"
    ],
    "answers_count": "0",
    "answers": [],
    "user": {
        "stack_user_id": "14168917",
        "name": "X_ShaygaN_D",
        "reputation_score": "7",
        "gold_badges": 0,
        "silver_badges": 0,
        "bronze_badges": "4"
    },
    "question_comments": [
        {
            "stack_question_id": "76086222",
            "stack_question_comment_id": "134185376",
            "comment_content": "You need to create yor own filter like ",
            "username": "Waldemar Podsiad\u0142o"
        }
    ]
}
{
    "stack_question_id": "76086198",
    "question_title": "\"GET /static/admin/css/fonts.css HTTP/1.1\" 404 1816 [closed]",
    "question_content": "\r\n                my django said I've this error, how can I fix it?\n(I'm new to this)\nI search around the web browser can't find the answer\r\n            ",
    "question_url": "/questions/76086198/get-static-admin-css-fonts-css-http-1-1-404-1816",
    "date_posted": "2023-04-23 17:10:27Z",
    "upvote": "-2",
    "view": "9",
    "tags": [
        "python",
        "django",
        "web"
    ],
    "answers_count": "0",
    "answers": [],
    "user": {
        "stack_user_id": "21715529",
        "name": "Ken Vo",
        "reputation_score": "1",
        "gold_badges": 0,
        "silver_badges": 0,
        "bronze_badges": 0
    },
    "question_comments": [
        {
            "stack_question_id": "76086198",
            "stack_question_comment_id": "134185235",
            "comment_content": "Hello, adding more details to your post will help members of the community help you. I recommend reviewing ",
            "username": "Jordan"
        }
    ]
}
{
    "stack_question_id": "76086117",
    "question_title": "Input 0 of layer \"dense\" is incompatible with the layer: expected axis -1 of input shape to have value 784, but received input with shape (784, 1)",
    "question_content": "\r\n                I try to train a model on the mnist dataset. Here, features and targets are two pandas Dataframe extracted from a csv file.\nI initiate the dataset using tensorflow:\ndataset = tf.data.Dataset....\r\n            ",
    "question_url": "/questions/76086117/input-0-of-layer-dense-is-incompatible-with-the-layer-expected-axis-1-of-inp",
    "date_posted": "2023-04-23 16:51:32Z",
    "upvote": "0",
    "view": "6",
    "tags": [
        "python",
        "tensorflow",
        "mnist"
    ],
    "answers_count": "0",
    "answers": [],
    "user": {
        "stack_user_id": "4818645",
        "name": "Milow",
        "reputation_score": "49",
        "gold_badges": 0,
        "silver_badges": "1",
        "bronze_badges": "8"
    },
    "question_comments": []
}
{
    "stack_question_id": "76086148",
    "question_title": "Python ttkbootstrap.tableview : auto-refresh tableview generated from a database",
    "question_content": "\r\n                Is there a way to auto-refresh tableview from a database ? maybe with a button or auto ?\nI Created a Manual Refresh Visual Button to do the job \"click_Refresh()\"\ncan any one help ?\nCODE :\n...\r\n            ",
    "question_url": "/questions/76086148/python-ttkbootstrap-tableview-auto-refresh-tableview-generated-from-a-database",
    "date_posted": "2023-04-23 16:58:36Z",
    "upvote": "-1",
    "view": "6",
    "tags": [
        "python",
        "tableview",
        "ttkbootstrap"
    ],
    "answers_count": "0",
    "answers": [],
    "user": {
        "stack_user_id": "354577",
        "name": "Chris",
        "reputation_score": "125k",
        "gold_badges": "99",
        "silver_badges": "270",
        "bronze_badges": "248"
    },
    "question_comments": [
        {
            "stack_question_id": "76086148",
            "stack_question_comment_id": "134185014",
            "comment_content": "Please don't repeat yourself to get past our quality filters. If you are prompted to add more detail, ",
            "username": "Chris"
        }
    ]
}
{
    "stack_question_id": "76086144",
    "question_title": "ValueError: The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (18, 2) + inhomogeneous part",
    "question_content": "\r\n                i have 13 deer images and 5 non-deer images, i want to use HOG + SVM to detect deer in an image, i am trying the same using this code but getting an error i have understood why i get that error, but ...\r\n            ",
    "question_url": "/questions/76086144/valueerror-the-requested-array-has-an-inhomogeneous-shape-after-2-dimensions-t",
    "date_posted": "2023-04-23 16:57:51Z",
    "upvote": "0",
    "view": "7",
    "tags": [
        "python",
        "svm",
        "object-detection",
        "sliding-window",
        "histogram-of-oriented-gradients"
    ],
    "answers_count": "0",
    "answers": [],
    "user": {
        "stack_user_id": "5774952",
        "name": "Zac Anger",
        "reputation_score": "5,805",
        "gold_badges": "1",
        "silver_badges": "14",
        "bronze_badges": "40"
    },
    "question_comments": []
}
{
    "stack_question_id": "76086170",
    "question_title": "How can EclipseCollection export the proper sizes and spacing in an svg?",
    "question_content": "\r\n                I am trying to create an svg of a bunch of circles that I have diameters for, and then determine the coordinates based on some spacing offsets separately.\nI'd like to create a plot of all of these ...\r\n            ",
    "question_url": "/questions/76086170/how-can-eclipsecollection-export-the-proper-sizes-and-spacing-in-an-svg",
    "date_posted": "2023-04-23 17:03:07Z",
    "upvote": "0",
    "view": "5",
    "tags": [
        "python",
        "arrays",
        "python-3.x",
        "matplotlib",
        "inkscape"
    ],
    "answers_count": "0",
    "answers": [],
    "user": {
        "stack_user_id": "21715430",
        "name": "Jon",
        "reputation_score": "1",
        "gold_badges": 0,
        "silver_badges": 0,
        "bronze_badges": 0
    },
    "question_comments": []
}
{
    "stack_question_id": "76086159",
    "question_title": "Python read string of very very large number from file and convert it to int for use",
    "question_content": "\r\n                I have to read a cipher file that has paragraphs of digits that I need to decrypt using RSA's decryption formula: m = (c ^ d) % n.\nThis is my decrypt function:\ndef Decrypt(file, n, d):\n    with open(...\r\n            ",
    "question_url": "/questions/76086159/python-read-string-of-very-very-large-number-from-file-and-convert-it-to-int-for",
    "date_posted": "2023-04-23 17:01:21Z",
    "upvote": "0",
    "view": "24",
    "tags": [
        "python",
        "file",
        "encryption",
        "rsa",
        "readfile"
    ],
    "answers_count": "0",
    "answers": [],
    "user": {
        "stack_user_id": "235698",
        "name": "Mark Tolonen",
        "reputation_score": "164k",
        "gold_badges": "25",
        "silver_badges": "169",
        "bronze_badges": "247"
    },
    "question_comments": [
        {
            "stack_question_id": "76086159",
            "stack_question_comment_id": "134185152",
            "comment_content": " isn't limited by C int, e.g. this works ",
            "username": "Mark Tolonen"
        },
        {
            "stack_question_id": "76086159",
            "stack_question_comment_id": "134185168",
            "comment_content": "@MarkTolonen I imagine it's the call to ",
            "username": "flakes"
        },
        {
            "stack_question_id": "76086159",
            "stack_question_comment_id": "134185206",
            "comment_content": "@MarkTolonen to convert my encrypted integer to its original form, that is, character. I decrypt a number using pow then get the ascii character.",
            "username": "Lan"
        },
        {
            "stack_question_id": "76086159",
            "stack_question_comment_id": "134185207",
            "comment_content": "@flakes I imagine the OP should learn to make a ",
            "username": "Mark Tolonen"
        },
        {
            "stack_question_id": "76086159",
            "stack_question_comment_id": "134185304",
            "comment_content": "So you're saying that the \"original form\" of your data was a ",
            "username": "jasonharper"
        }
    ]
}
{
    "stack_question_id": "76086169",
    "question_title": "I have PermissionError: [Errno 13] Permission denied: '/data/.cache'? on android kivy application",
    "question_content": "\r\n                When I run my kivy app on android I get the error: \" PermissionError: [Errno 13] Permission denied: '/data/.cache'\"\nPython version: 3.6.9\nKivy: (2.0.0)\nKivy-Garden: (0.1.5)\nbuildozer: (1.5.1....\r\n            ",
    "question_url": "/questions/76086169/i-have-permissionerror-errno-13-permission-denied-data-cache-on-android",
    "date_posted": "2023-04-23 17:03:03Z",
    "upvote": "0",
    "view": "8",
    "tags": [
        "python",
        "android",
        "kivy",
        "buildozer"
    ],
    "answers_count": "0",
    "answers": [],
    "user": {
        "stack_user_id": "21710747",
        "name": "BroproGames Official",
        "reputation_score": "1",
        "gold_badges": 0,
        "silver_badges": 0,
        "bronze_badges": "1"
    },
    "question_comments": []
}
{
    "stack_question_id": "76086168",
    "question_title": "QuantLib Python: Valuation of Fixed Coupon Bond with 3 equal redemptions of capital",
    "question_content": "\r\n                I have a valuation of a fixed coupon bond below and I need help with the following;\n\nThe repayment of the capital shall be made in three equal amounts on the following dates: 30 April 2030, 30 April ...\r\n            ",
    "question_url": "/questions/76086168/quantlib-python-valuation-of-fixed-coupon-bond-with-3-equal-redemptions-of-capi",
    "date_posted": "2023-04-23 17:02:51Z",
    "upvote": "-1",
    "view": "7",
    "tags": [
        "python",
        "quantlib"
    ],
    "answers_count": "0",
    "answers": [],
    "user": {
        "stack_user_id": "6272006",
        "name": "N. Fungura",
        "reputation_score": "177",
        "gold_badges": 0,
        "silver_badges": "3",
        "bronze_badges": "12"
    },
    "question_comments": []
}
{
    "stack_question_id": "76086069",
    "question_title": "Selenium webdriver click on accept cookies button",
    "question_content": "\r\n                i have this code i wrote:\nimport time\nfrom selenium import webdriver\nfrom selenium.webdriver.common.by import By\nfrom selenium.webdriver.common.keys import Keys\nfrom selenium.webdriver.chrome.options ...\r\n            ",
    "question_url": "/questions/76086069/selenium-webdriver-click-on-accept-cookies-button",
    "date_posted": "2023-04-23 16:43:51Z",
    "upvote": "0",
    "view": "13",
    "tags": [
        "python",
        "selenium-webdriver",
        "cookies",
        "webdriver"
    ],
    "answers_count": "1",
    "answers": [
        {
            "stack_answer_id": "76086359",
            "answer_content": "\r\n The reason why the \"accept cookies\" button cannot be accessed directly in Selenium is because it is part of the shadow DOM. To interact with elements within the shadow DOM, you first need to obtain access to it and then search for the specific element you want to click. \n \n I have tested Below and it works fine,It utilizes Selenium version 4 which now has added support for ShadowDOM. Previously, in version 3, the code to access elements within the shadow DOM was through javascript executor added as commented code. \n shadow = driver.find_element(By.TAG_NAME, \"dock-privacy-settings\").shadow_root\n \n Then once we have the ShadowDOM element we search inside it for accept button and do click \n shadow.find_element(By.ID,\n                    \"save-all-modal-dialog\").click()\n \n Full Code \n    import time\nfrom selenium import webdriver\nfrom selenium.webdriver.common.by import By\nfrom selenium.webdriver.common.keys import Keys\nfrom selenium.webdriver.chrome.options import Options\nfrom selenium.webdriver.chrome.service import Service\nfrom webdriver_manager.chrome import ChromeDriverManager\n\n### Site options\noptions = Options()\noptions.add_argument(\"start-maximized\")\noptions.add_experimental_option(\"detach\", True)\ndriver = webdriver.Chrome(service=Service(ChromeDriverManager().install()), options=options)\ndriver.get(\"https://www.bosch-professional.com/bg/bg/\")\ntime.sleep(10)\n# For Version 3\n# shadow = driver.execute_script (\n#            \"return arguments[0].shadowRoot\", driver.find_element(By.TAG_NAME, \"dock-privacy-settings\"))\n\n# For Version 4\nshadow = driver.find_element(By.TAG_NAME, \"dock-privacy-settings\").shadow_root\n### Click Accept Cookies\nshadow.find_element(By.ID,\n                    \"save-all-modal-dialog\").click()\n \n ShadowDOM \n ShadowDOMintercaction \n    ",
            "date_posted": "2023-04-23 17:46:58Z",
            "upvote": "\r\n            0\r\n        ",
            "accepted": "YES",
            "user": {
                "stack_user_id": "7736228",
                "name": "Abhay Chaudhary",
                "reputation_score": "429",
                "gold_badges": 0,
                "silver_badges": "4",
                "bronze_badges": "9"
            },
            "answer_comments": []
        }
    ],
    "user": {
        "stack_user_id": "21715375",
        "name": "ToniMi86",
        "reputation_score": "1",
        "gold_badges": 0,
        "silver_badges": 0,
        "bronze_badges": "1"
    },
    "question_comments": []
}
{
    "stack_question_id": "76086080",
    "question_title": "Adjust the offset of two nearly same images with python",
    "question_content": "\r\n                i am trying to find the differences in two pictures from a newspaper riddle. I cut the contours with opencv and create two images which have nearly the same size. So to find the difference i would ...\r\n            ",
    "question_url": "/questions/76086080/adjust-the-offset-of-two-nearly-same-images-with-python",
    "date_posted": "2023-04-23 16:45:04Z",
    "upvote": "0",
    "view": "11",
    "tags": [
        "python",
        "opencv",
        "imagemagick"
    ],
    "answers_count": "0",
    "answers": [],
    "user": {
        "stack_user_id": "21565938",
        "name": "kami",
        "reputation_score": "1",
        "gold_badges": 0,
        "silver_badges": 0,
        "bronze_badges": "1"
    },
    "question_comments": [
        {
            "stack_question_id": "76086080",
            "stack_question_comment_id": "134185032",
            "comment_content": "Please edit the question to limit it to a specific problem with enough detail to identify an adequate answer.",
            "username": "Community"
        }
    ]
}
{
    "stack_question_id": "76086053",
    "question_title": "how can I handle both coroutines and regular functions in aws lambda",
    "question_content": "\r\n                I'm writing an application inside an AWS lambda function behind an api gateway\nsome functions can be asynchronous (co-routines) and other are regular functions\nhow can I handle this in the \"main ...\r\n            ",
    "question_url": "/questions/76086053/how-can-i-handle-both-coroutines-and-regular-functions-in-aws-lambda",
    "date_posted": "2023-04-23 16:38:34Z",
    "upvote": "0",
    "view": "28",
    "tags": [
        "python",
        "python-3.x",
        "amazon-web-services",
        "aws-lambda",
        "python-asyncio"
    ],
    "answers_count": "1",
    "answers": [
        {
            "stack_answer_id": "76086076",
            "answer_content": "\r\n Here's an example of how you can handle both coroutines and regular functions in AWS Lambda using Python: \n import asyncio\n\ndef regular_function(event, context):\n    # Perform some synchronous operation\n    return \"Regular function completed successfully.\"\n\nasync def coroutine_function(event, context):\n    # Perform some asynchronous operation\n    await asyncio.sleep(5)\n    return \"Coroutine function completed successfully.\"\n\ndef lambda_handler(event, context):\n    # Check if the event payload contains an \"async\" key\n    if event.get(\"async\"):\n        # If the \"async\" key is present, invoke the coroutine function asynchronously\n        loop = asyncio.get_event_loop()\n        return loop.run_until_complete(coroutine_function(event, context))\n    else:\n        # If the \"async\" key is not present, invoke the regular function synchronously\n        return regular_function(event, context)\n \n In this example, the  lambda_handler  function checks if the event payload contains an \"async\" key. If the key is present, it invokes the  coroutine_function  asynchronously using the  asyncio  library. Otherwise, it invokes the  regular_function  synchronously. This allows you to handle both types of functions in a single Lambda function. \n Update (Response to your comment): \n You are correct that not all resources will receive a request body in a REST API, and that the frontend should not be responsible for specifying whether the backend code should be asynchronous or not. This decision should be made by the backend developer based on the specific use case. \n In the case of a lambda function behind an API Gateway, the lambda function can be designed to handle both synchronous and asynchronous invocations. The API Gateway can be configured to invoke the lambda function synchronously for HTTP methods that require a response, such as GET, and asynchronously for HTTP methods that do not require a response, such as POST. \n You can use the  InvocationType  parameter when invoking the lambda function. For synchronous invocation, set the  InvocationType  parameter to  \"RequestResponse\" . For asynchronous invocation, set the  InvocationType  parameter to  \"Event\" . \n The frontend can specify the desired  InvocationType  parameter in the API request, but this should be a decision based on the specific use case. \n Here's an example of how you can handle synchronous and asynchronous invocations in a lambda function: \n import boto3\n\ndef lambda_handler(event, context):\n    # If the InvocationType is RequestResponse, return a response\n    if event['InvocationType'] == 'RequestResponse':\n        response = process_request(event['body'])\n        return {\n            'statusCode': 200,\n            'body': response\n        }\n    # If the InvocationType is Event, process the request asynchronously\n    elif event['InvocationType'] == 'Event':\n        process_request_async(event['body'])\n        return {\n            'statusCode': 200\n        }\n\ndef process_request(request_body):\n    # Process the request synchronously and return a response\n    ...\n\ndef process_request_async(request_body):\n    # Process the request asynchronously\n    ...\n \n In this example, the lambda function checks the  InvocationType  parameter to determine whether the request should be processed synchronously or asynchronously. The  process_request  function handles synchronous requests and returns a response, while the  process_request_async  function handles asynchronous requests without returning a response. \n    ",
            "date_posted": "2023-04-23 17:21:32Z",
            "upvote": "\r\n            0\r\n        ",
            "accepted": "YES",
            "user": {
                "stack_user_id": "20392223",
                "name": "Mariah Rucker",
                "reputation_score": "1",
                "gold_badges": 0,
                "silver_badges": 0,
                "bronze_badges": "1"
            },
            "answer_comments": [
                {
                    "stack_answer_id": "76086076",
                    "stack_answer_comment_id": "134184950",
                    "comment_content": "Hi Mariah, thanks for the answer,   so the lambda is behind an api gateway in the process of creating regular REST api, so not all resources will receive body as there are some \"GET\" methods, however even in POST resources I don't think the frontend should specify if my backend code should be async or not, to send me said event ..",
                    "username": "brightstar2100"
                }
            ]
        }
    ],
    "user": {
        "stack_user_id": "16564739",
        "name": "brightstar2100",
        "reputation_score": "97",
        "gold_badges": 0,
        "silver_badges": "1",
        "bronze_badges": "7"
    },
    "question_comments": []
}
{
    "stack_question_id": "76086101",
    "question_title": "PySimpleGUI - Update table with new values after search, and be able to select new values/print in multiline",
    "question_content": "\r\n                Title says it all - I'm trying to be able to update my table with searched values and be able to select those NEW table updated values, and then print info in MultiLine. However, no matter what I do, ...\r\n            ",
    "question_url": "/questions/76086101/pysimplegui-update-table-with-new-values-after-search-and-be-able-to-select-n",
    "date_posted": "2023-04-23 16:48:06Z",
    "upvote": "0",
    "view": "5",
    "tags": [
        "python",
        "pysimplegui"
    ],
    "answers_count": "0",
    "answers": [],
    "user": {
        "stack_user_id": "21293900",
        "name": "Darius Irani",
        "reputation_score": "1",
        "gold_badges": 0,
        "silver_badges": 0,
        "bronze_badges": "1"
    },
    "question_comments": []
}
{
    "stack_question_id": "76086046",
    "question_title": "Using QThread for countdown",
    "question_content": "\r\n                I am writing a trivia game using PyQt5, and I want to add a countdown for answering. I tried to use a loop and a thread, but they caused the screen to freeze. I understood that QThread could be ...\r\n            ",
    "question_url": "/questions/76086046/using-qthread-for-countdown",
    "date_posted": "2023-04-23 16:36:55Z",
    "upvote": "0",
    "view": "7",
    "tags": [
        "python",
        "pyqt5"
    ],
    "answers_count": "0",
    "answers": [],
    "user": {
        "stack_user_id": "15452045",
        "name": "eitan piamenta",
        "reputation_score": "21",
        "gold_badges": 0,
        "silver_badges": 0,
        "bronze_badges": "2"
    },
    "question_comments": [
        {
            "stack_question_id": "76086046",
            "stack_question_comment_id": "134184935",
            "comment_content": "Using a thread for this is pointless. Use ",
            "username": "musicamante"
        },
        {
            "stack_question_id": "76086046",
            "stack_question_comment_id": "134185361",
            "comment_content": "@musicamante will I be able to type during the run?",
            "username": "eitan piamenta"
        }
    ]
}
{
    "stack_question_id": "76086072",
    "question_title": "Custom trained YOLOv7 detect object frame by frame in a video",
    "question_content": "\r\n                I want to process a video frame by frame and for each frame to detect if a certain object has appeared using an already custom trained YOLOv7 model. I saw that this is pretty simple for a image or a ...\r\n            ",
    "question_url": "/questions/76086072/custom-trained-yolov7-detect-object-frame-by-frame-in-a-video",
    "date_posted": "2023-04-23 16:44:25Z",
    "upvote": "0",
    "view": "5",
    "tags": [
        "python",
        "opencv",
        "computer-vision",
        "torch",
        "yolov7"
    ],
    "answers_count": "0",
    "answers": [],
    "user": {
        "stack_user_id": "12019612",
        "name": "Andrei",
        "reputation_score": "23",
        "gold_badges": 0,
        "silver_badges": 0,
        "bronze_badges": "7"
    },
    "question_comments": []
}
{
    "stack_question_id": "76086067",
    "question_title": "Hello i have this error when trying to run a python file in the cmd.exe",
    "question_content": "\r\n                WARNING: Failed to write executable - trying to use .deleteme logic\nERROR: Could not install packages due to an OSError: [WinError 2] The system cannot find the file specified: 'C:\\\\Python311\\\\Scripts\\...\r\n            ",
    "question_url": "/questions/76086067/hello-i-have-this-error-when-trying-to-run-a-python-file-in-the-cmd-exe",
    "date_posted": "2023-04-23 16:43:19Z",
    "upvote": "-2",
    "view": "19",
    "tags": [
        "python",
        "windows",
        "cmd",
        "oserror",
        "autogpt"
    ],
    "answers_count": "0",
    "answers": [],
    "user": {
        "stack_user_id": "6335363",
        "name": "Miguel Guthridge",
        "reputation_score": "1,130",
        "gold_badges": 0,
        "silver_badges": "8",
        "bronze_badges": "23"
    },
    "question_comments": [
        {
            "stack_question_id": "76086067",
            "stack_question_comment_id": "134185011",
            "comment_content": "Please read ",
            "username": "Chris"
        },
        {
            "stack_question_id": "76086067",
            "stack_question_comment_id": "134185021",
            "comment_content": "Show error messages and other textual information as properly formatted text in the question, not as comment, image or external link.",
            "username": "Michael Butscher"
        }
    ]
}
{
    "stack_question_id": "76086023",
    "question_title": "Hoare Quicksort Comparison and Swap Count",
    "question_content": "\r\n                I'm trying to write add some features to an implementation of Hoare's paritioning scheme for quicksort. I have what I believe should be a working function but I'm getting a runtime error:\nTypeError: ...\r\n            ",
    "question_url": "/questions/76086023/hoare-quicksort-comparison-and-swap-count",
    "date_posted": "2023-04-23 16:33:02Z",
    "upvote": "0",
    "view": "13",
    "tags": [
        "python",
        "quicksort"
    ],
    "answers_count": "0",
    "answers": [],
    "user": {
        "stack_user_id": "17412753",
        "name": "William Moore",
        "reputation_score": "1",
        "gold_badges": 0,
        "silver_badges": 0,
        "bronze_badges": 0
    },
    "question_comments": [
        {
            "stack_question_id": "76086023",
            "stack_question_comment_id": "134184833",
            "comment_content": "partition needs to return a three-tuple to match that assignment. Right now it sometimes returns None and sometimes returns an int. See ",
            "username": "Kenny Ostrom"
        }
    ]
}
{
    "stack_question_id": "76086025",
    "question_title": "How to store sensitive tokens",
    "question_content": "\r\n                I have a Python application that needs to store a token to make it possibile to access a service.\nI was thinking on what it could be the best way in terms of security of storing sensitive information ...\r\n            ",
    "question_url": "/questions/76086025/how-to-store-sensitive-tokens",
    "date_posted": "2023-04-23 16:33:18Z",
    "upvote": "0",
    "view": "10",
    "tags": [
        "python",
        "amazon-web-services",
        "security",
        "hashicorp-vault",
        "secrets"
    ],
    "answers_count": "0",
    "answers": [],
    "user": {
        "stack_user_id": "17787230",
        "name": "sctx",
        "reputation_score": "99",
        "gold_badges": 0,
        "silver_badges": "2",
        "bronze_badges": "9"
    },
    "question_comments": [
        {
            "stack_question_id": "76086025",
            "stack_question_comment_id": "134184842",
            "comment_content": "Is your Python app hosted on AWS?",
            "username": "stdunbar"
        },
        {
            "stack_question_id": "76086025",
            "stack_question_comment_id": "134184875",
            "comment_content": "No it is on a private cloud built on openstack",
            "username": "sctx"
        }
    ]
}
{
    "stack_question_id": "76086006",
    "question_title": "Let discord bot interact with other bots",
    "question_content": "\r\n                I have a Python script for a Discord bot and I want it to send a message to another Bot and select the prompt option and then type in a message but I can't get the interaction done.\nIt just sends the ...\r\n            ",
    "question_url": "/questions/76086006/let-discord-bot-interact-with-other-bots",
    "date_posted": "2023-04-23 16:29:27Z",
    "upvote": "-1",
    "view": "13",
    "tags": [
        "python",
        "automation",
        "discord",
        "discord.py"
    ],
    "answers_count": "1",
    "answers": [
        {
            "stack_answer_id": "76086341",
            "answer_content": "\r\n Bots cannot execute other bots' slash commands.  They can only listen to and react when human users invoke their own slash commands. \n    ",
            "date_posted": "2023-04-23 17:43:18Z",
            "upvote": "\r\n            0\r\n        ",
            "accepted": "YES",
            "user": {
                "stack_user_id": "10525903",
                "name": "TheOneMusic",
                "reputation_score": "1,623",
                "gold_badges": "1",
                "silver_badges": "15",
                "bronze_badges": "38"
            },
            "answer_comments": [
                {
                    "stack_answer_id": "76086341",
                    "stack_answer_comment_id": "134185399",
                    "comment_content": "Is there a possible workaround?",
                    "username": "codexxblack"
                },
                {
                    "stack_answer_id": "76086341",
                    "stack_answer_comment_id": "134185465",
                    "comment_content": "No, slash commands are only designed for human interaction. And multiple bots may have an ",
                    "username": "TheOneMusic"
                }
            ]
        }
    ],
    "user": {
        "stack_user_id": "19978616",
        "name": "codexxblack",
        "reputation_score": "11",
        "gold_badges": 0,
        "silver_badges": 0,
        "bronze_badges": "4"
    },
    "question_comments": []
}
{
    "stack_question_id": "76085994",
    "question_title": "How can I config the name of my pages in a dash app?",
    "question_content": "\r\n                I have a dash webapp with multiple pages defined as *.py-files in the subfolder pages. Currently the names in the dropdown are based on the *.py-file in the pages-folder. How can I change the name of ...\r\n            ",
    "question_url": "/questions/76085994/how-can-i-config-the-name-of-my-pages-in-a-dash-app",
    "date_posted": "2023-04-23 16:26:18Z",
    "upvote": "0",
    "view": "10",
    "tags": [
        "python",
        "plotly-dash"
    ],
    "answers_count": "0",
    "answers": [],
    "user": {
        "stack_user_id": "20250026",
        "name": "olli",
        "reputation_score": "45",
        "gold_badges": 0,
        "silver_badges": 0,
        "bronze_badges": "3"
    },
    "question_comments": []
}
{
    "stack_question_id": "76085980",
    "question_title": "How to stop integrating an ODE which is time dependent, but the upper limit of the time span is dependent on another variable",
    "question_content": "\r\n                I am solving some time dependent equations that deal with change in concentration of ions while charging and discharging. (concentrations of c2 ,c3,c4, c5 ions)\nex: dc2dt = ((I/96485.0) - (k2*c2*S) - (...\r\n            ",
    "question_url": "/questions/76085980/how-to-stop-integrating-an-ode-which-is-time-dependent-but-the-upper-limit-of-t",
    "date_posted": "2023-04-23 16:23:03Z",
    "upvote": "0",
    "view": "9",
    "tags": [
        "python",
        "scipy",
        "modeling",
        "ode",
        "odeint"
    ],
    "answers_count": "0",
    "answers": [],
    "user": {
        "stack_user_id": "3088138",
        "name": "Lutz Lehmann",
        "reputation_score": "24.9k",
        "gold_badges": "2",
        "silver_badges": "22",
        "bronze_badges": "51"
    },
    "question_comments": [
        {
            "stack_question_id": "76085980",
            "stack_question_comment_id": "134185230",
            "comment_content": "Usually you would use terminal events to stop the integration if such a condition is violated. You can have multiple such event functions in one integration",
            "username": "Lutz Lehmann"
        }
    ]
}
{
    "stack_question_id": "76085991",
    "question_title": "Python: KeyError When Searching by a Value in One Column in Another Column That Has The Values Contained Between # Signs",
    "question_content": "\r\n                I am trying to find if values in one column (Column_A) are contained in another column (Column_B) that have values that are separated by # signs. Then I would like to return the matching value in a ...\r\n            ",
    "question_url": "/questions/76085991/python-keyerror-when-searching-by-a-value-in-one-column-in-another-column-that",
    "date_posted": "2023-04-23 16:25:29Z",
    "upvote": "0",
    "view": "14",
    "tags": [
        "python",
        "split",
        "keyerror"
    ],
    "answers_count": "1",
    "answers": [
        {
            "stack_answer_id": "76086130",
            "answer_content": "\r\n There is no need to use  apply  here, you can slighty ajudst your  listcomp  : \n my_df1[\"Column_C\"] = [a if any([b == str(a) for b in lst]) else None\n                      for a, lst in zip(my_df1[\"Column_A\"],\n                                        my_df1[\"Column_B\"].str.split(\"#\"))]  \n \n Output : \n print(my_df1)\n\u200b\n   Column_A                                                                                Column_B Column_C\n0     16.99  #16.990000#16.990000#16.990000#28.990000#28.990000#16.99#16.99#16.99#21.99#21.99#21.99    16.99\n1     11.99                                                    #13.49#13.49#13.99#11.99#11.99#12.49    11.99\n2     12.49                #13.49#13.39#14.49#16.99#16.99#17.49#12.49#12.49#12.99#15.99#15.99#15.99    12.49\n \n    ",
            "date_posted": "2023-04-23 17:13:34Z",
            "upvote": "\r\n            0\r\n        ",
            "accepted": "YES",
            "user": {
                "stack_user_id": "16120011",
                "name": "Timeless",
                "reputation_score": "14.9k",
                "gold_badges": "3",
                "silver_badges": "8",
                "bronze_badges": "25"
            },
            "answer_comments": []
        }
    ],
    "user": {
        "stack_user_id": "11136504",
        "name": "Brandon",
        "reputation_score": "87",
        "gold_badges": 0,
        "silver_badges": "2",
        "bronze_badges": "9"
    },
    "question_comments": [
        {
            "stack_question_id": "76085991",
            "stack_question_comment_id": "134184924",
            "comment_content": "Can you show your expected output ? Does the column ",
            "username": "Timeless"
        },
        {
            "stack_question_id": "76085991",
            "stack_question_comment_id": "134184968",
            "comment_content": "The expected output would just be a single value for each row in Column C: 16.99 11.99 12.49",
            "username": "Brandon"
        },
        {
            "stack_question_id": "76085991",
            "stack_question_comment_id": "134184980",
            "comment_content": "But then, ",
            "username": "Timeless"
        },
        {
            "stack_question_id": "76085991",
            "stack_question_comment_id": "134185004",
            "comment_content": "In the example it would but may not be the case for subsequent rows.",
            "username": "Brandon"
        },
        {
            "stack_question_id": "76085991",
            "stack_question_comment_id": "134185037",
            "comment_content": "All right, I posted an answer below that may address your question.",
            "username": "Timeless"
        }
    ]
}
{
    "stack_question_id": "76086002",
    "question_title": "What is the difference between jupyter notebook and visual studio code, what can each do?",
    "question_content": "\r\n                What is the difference between jupyter notebook and visual studio code, what can each do?\nI used jupyter notebook for pandas, and used visual studio code for writing some code and installing some ...\r\n            ",
    "question_url": "/questions/76086002/what-is-the-difference-between-jupyter-notebook-and-visual-studio-code-what-can",
    "date_posted": "2023-04-23 16:28:09Z",
    "upvote": "-3",
    "view": "17",
    "tags": [
        "python",
        "python-3.x",
        "jupyter-notebook"
    ],
    "answers_count": "0",
    "answers": [],
    "user": {
        "stack_user_id": "21715072",
        "name": "Max Y",
        "reputation_score": "1",
        "gold_badges": 0,
        "silver_badges": 0,
        "bronze_badges": 0
    },
    "question_comments": [
        {
            "stack_question_id": "76086002",
            "stack_question_comment_id": "134184888",
            "comment_content": "This type of questions if frowned upon by StackOverflow. You should read ",
            "username": "Wayne"
        },
        {
            "stack_question_id": "76086002",
            "stack_question_comment_id": "134184942",
            "comment_content": "<continued> development environment. That being said, there can be a lot of overlap if you set up VS Code in a certain way to focus on Python/IPython/Jupyter. JupyterLab is primarily meant for working with ",
            "username": "Wayne"
        }
    ]
}
{
    "stack_question_id": "76085977",
    "question_title": "Why the efficiency of numpy is decreasing fastly?",
    "question_content": "\r\n                I have a question about efficiency in numpy when increasing the number of elements in a matrix/vector operation.\nIf you look at the example below, for a number of elements in the array of 10_000 the ...\r\n            ",
    "question_url": "/questions/76085977/why-the-efficiency-of-numpy-is-decreasing-fastly",
    "date_posted": "2023-04-23 16:22:45Z",
    "upvote": "0",
    "view": "26",
    "tags": [
        "python",
        "numpy"
    ],
    "answers_count": "1",
    "answers": [
        {
            "stack_answer_id": "76086226",
            "answer_content": "\r\n This is likely a side effect of the fact that you're using a 2-dimensional array. \n When you create a 2D array using  m - m.reshape(len(m), 1) , it will have  len(m) ** 2  elements. This means that when there are 10000 elements in  m , it will have  10_000 ** 2 = 100_000_000  elements. \n Compare this with when  len(m) == 20_000 . In this case, our 2D array will have  400_000_000  elements (4x the number of our array with 10000). \n From the benchmarks you've done above, this seems to check out. The  reshape  operation takes about 3.75x as long for the 2D array. \n For your later operations, things likely start slowing down due to memory speeds. Particularly, if your system is constrained on resources, this will cause problems. \n For the last operation, Python is likely using memory to store  matrix ,  matrix - shift  and  np.abs(matrix - shift) , and I'd say that the memory required for this is leading to performance issues. \n    ",
            "date_posted": "2023-04-23 17:16:42Z",
            "upvote": "\r\n            0\r\n        ",
            "accepted": "YES",
            "user": {
                "stack_user_id": "6335363",
                "name": "Miguel Guthridge",
                "reputation_score": "1,130",
                "gold_badges": 0,
                "silver_badges": "8",
                "bronze_badges": "23"
            },
            "answer_comments": []
        }
    ],
    "user": {
        "stack_user_id": "1421907",
        "name": "Ger",
        "reputation_score": "8,947",
        "gold_badges": "10",
        "silver_badges": "36",
        "bronze_badges": "48"
    },
    "question_comments": [
        {
            "stack_question_id": "76085977",
            "stack_question_comment_id": "134184865",
            "comment_content": "I wonder if there's something internal to Python that makes allocation a 20_000 element array take longer than allocating a 10_000 array.  Your last example has to allocate two arrays per execution, and has the worst time of all.",
            "username": "Frank Yellin"
        },
        {
            "stack_question_id": "76085977",
            "stack_question_comment_id": "134185154",
            "comment_content": "Note also that standard deviation is also way bigger proportonally. When one would expect (it that was just the timing of millions of similar operation), that the bigger the compuation, the smaller the std in proportion (to be more precise: one should expect that stddev increases proportionally to the square root of average time, and, therefore, that ratio between std dev and average should decrease proportionally to the same square root. That time, in your case should be O(n\u00b2), since broadcasting create a n\u00d7n matrix, on which you have only linear operations)",
            "username": "chrslg"
        },
        {
            "stack_question_id": "76085977",
            "stack_question_comment_id": "134185162",
            "comment_content": "All that to say: yes, swapping is a possible hypothesis. With swapping, cost does not increase only as O(n\u00b2), obviously, and also timing are a little bit more random.",
            "username": "chrslg"
        },
        {
            "stack_question_id": "76085977",
            "stack_question_comment_id": "134185173",
            "comment_content": "Even if it is a little bit hasardous to say anythng about a std dev computed on 7 experiments (usually I say that timeit std dev should be just ignored. But in your case, at least if there were more than 7 experiments, they are indication that some external random things impacts more the computation time than the computation itself. For example, swapping)",
            "username": "chrslg"
        }
    ]
}
{
    "stack_question_id": "76085972",
    "question_title": "Python Class Call Method Self Argument - Why self? [duplicate]",
    "question_content": "\r\n                I'm still quite new at python, and I've looked in a book I got and searched here and on the web.\nBut I'm not getting an answer that is down to the level I apparently can grasp atm.\nI got 2 different ...\r\n            ",
    "question_url": "/questions/76085972/python-class-call-method-self-argument-why-self",
    "date_posted": "2023-04-23 16:21:28Z",
    "upvote": "0",
    "view": "19",
    "tags": [
        "python",
        "class",
        "methods",
        "self"
    ],
    "answers_count": "1",
    "answers": [
        {
            "stack_answer_id": "76086039",
            "answer_content": "\r\n Python Classes can have different types of functions, what you are describing are  class  and  static  methods. \n A class method requieres a class instance with a self variable: \n class MyClass:\n    def __init__(self, value):\n        self.value = value\n \n    def get_value(self):\n        return self.value\n\n# Create an instance of MyClass\nobj = MyClass(10)\n \n# Call the get_value method on the instance\nprint(obj.get_value())  # Output: 10\n \n But theres also a static method that does not require the class instance and you create it by decorading it with a  @staticmethod  decorator: \n class MyClass:\n    def __init__(self, value):\n        self.value = value\n\n    @staticmethod\n    def get_max_value(x, y):\n        return max(x, y)\n\n# Create an instance of MyClass\nobj = MyClass(10)\n\nprint(MyClass.get_max_value(20, 30)) # Output: 30\n\nprint(obj.get_max_value(20, 30)) # Output: 30\n \n    ",
            "date_posted": "2023-04-23 16:35:18Z",
            "upvote": "\r\n            0\r\n        ",
            "accepted": "YES",
            "user": {
                "stack_user_id": "12540725",
                "name": "Andrey Kiselev",
                "reputation_score": "68",
                "gold_badges": 0,
                "silver_badges": "1",
                "bronze_badges": "9"
            },
            "answer_comments": []
        }
    ],
    "user": {
        "stack_user_id": "4050939",
        "name": "Morten Paaske",
        "reputation_score": "35",
        "gold_badges": "1",
        "silver_badges": "1",
        "bronze_badges": "5"
    },
    "question_comments": [
        {
            "stack_question_id": "76085972",
            "stack_question_comment_id": "134184758",
            "comment_content": "Why do you think that one does not require the self argument and the other does?",
            "username": "mkrieger1"
        },
        {
            "stack_question_id": "76085972",
            "stack_question_comment_id": "134184767",
            "comment_content": "If you call a method on an instance of a class, that instance is automatically provided as the first parameter to the call (traditionally called ",
            "username": "jasonharper"
        },
        {
            "stack_question_id": "76085972",
            "stack_question_comment_id": "134185081",
            "comment_content": "@mkrieger1 what I've come up with so fare is that ",
            "username": "Morten Paaske"
        },
        {
            "stack_question_id": "76085972",
            "stack_question_comment_id": "134185101",
            "comment_content": "TL;DR: If you're calling the function ",
            "username": "deceze"
        },
        {
            "stack_question_id": "76085972",
            "stack_question_comment_id": "134185495",
            "comment_content": "@deceze Am I getting this right, using ",
            "username": "Morten Paaske"
        }
    ]
}
{
    "stack_question_id": "76085947",
    "question_title": "i cant train an encoder rnn for seq2seq model",
    "question_content": "\r\n                when i want to train an EncoderRNN i get this error\nExpected hidden size (2, 1, 300), got [1, 1, 300]\nmy code :\nenter image description here\nenter image description here\nwhen i set hidden = zeros(2,1,...\r\n            ",
    "question_url": "/questions/76085947/i-cant-train-an-encoder-rnn-for-seq2seq-model",
    "date_posted": "2023-04-23 16:16:24Z",
    "upvote": "0",
    "view": "6",
    "tags": [
        "python",
        "pytorch",
        "neural-network",
        "recurrent-neural-network",
        "seq2seq"
    ],
    "answers_count": "0",
    "answers": [],
    "user": {
        "stack_user_id": "14973800",
        "name": "mahdi",
        "reputation_score": "1",
        "gold_badges": 0,
        "silver_badges": 0,
        "bronze_badges": 0
    },
    "question_comments": [
        {
            "stack_question_id": "76085947",
            "stack_question_comment_id": "134184754",
            "comment_content": "Please read ",
            "username": "Chris"
        }
    ]
}
{
    "stack_question_id": "76086045",
    "question_title": "Python3: Conditional if statement executes when clearly it shouldn't? Suspecting how Python deals with IndexError but this is weird [duplicate]",
    "question_content": "\r\n                def spiralOrder(self, matrix: List[List[int]]) -> List[int]:\n        result = []\n        move = [[0, 1], [1, 0], [0, -1], [-1, 0]]\n        direction = 0\n        cx, cy = 0, 0\n        nx, ny = 0, 0\n ...\r\n            ",
    "question_url": "/questions/76086045/python3-conditional-if-statement-executes-when-clearly-it-shouldnt-suspecting",
    "date_posted": "2023-04-23 16:36:51Z",
    "upvote": "-1",
    "view": "18",
    "tags": [
        "python",
        "python-3.x",
        "algorithm",
        "if-statement",
        "spiral"
    ],
    "answers_count": "0",
    "answers": [
        {
            "stack_answer_id": "509295",
            "answer_content": "\r\n The syntax is: \n a[start:stop]  # items start through stop-1\na[start:]      # items start through the rest of the array\na[:stop]       # items from the beginning through stop-1\na[:]           # a copy of the whole array\n \n There is also the  step  value, which can be used with any of the above: \n a[start:stop:step] # start through not past stop, by step\n \n The key point to remember is that the  :stop  value represents the first value that is  not  in the selected slice. So, the difference between  stop  and  start  is the number of elements selected (if  step  is 1, the default). \n The other feature is that  start  or  stop  may be a  negative  number, which means it counts from the end of the array instead of the beginning. So: \n a[-1]    # last item in the array\na[-2:]   # last two items in the array\na[:-2]   # everything except the last two items\n \n Similarly,  step  may be a negative number: \n a[::-1]    # all items in the array, reversed\na[1::-1]   # the first two items, reversed\na[:-3:-1]  # the last two items, reversed\na[-3::-1]  # everything except the last two items, reversed\n \n Python is kind to the programmer if there are fewer items than you ask for. For example, if you ask for  a[:-2]  and  a  only contains one element, you get an empty list instead of an error. Sometimes you would prefer the error, so you have to be aware that this may happen. \n Relationship with the  slice  object \n A  slice  object  can represent a slicing operation, i.e.: \n a[start:stop:step]\n \n is equivalent to: \n a[slice(start, stop, step)]\n \n Slice objects also behave slightly differently depending on the number of arguments, similarly to  range() , i.e. both  slice(stop)  and  slice(start, stop[, step])  are supported.\nTo skip specifying a given argument, one might use  None , so that e.g.  a[start:]  is equivalent to  a[slice(start, None)]  or  a[::-1]  is equivalent to  a[slice(None, None, -1)] . \n While the  : -based notation is very helpful for simple slicing, the explicit use of  slice()  objects simplifies the programmatic generation of slicing. \n    ",
            "date_posted": "2022-05-22 19:33:18Z",
            "upvote": "\r\n            6345\r\n        ",
            "accepted": "NO",
            "user": {
                "stack_user_id": "365102",
                "name": "Mateen Ulhaq",
                "reputation_score": "23.6k",
                "gold_badges": "16",
                "silver_badges": "95",
                "bronze_badges": "132"
            },
            "answer_comments": [
                {
                    "stack_answer_id": "509295",
                    "stack_answer_comment_id": "27984940",
                    "comment_content": "Slicing builtin types returns a copy but that's not universal.  Notably, ",
                    "username": "Beni Cherniavsky-Paskin"
                },
                {
                    "stack_answer_id": "509295",
                    "stack_answer_comment_id": "95272803",
                    "comment_content": "This is a beautiful answer with the votes to prove it, but it misses one thing: you can substitute ",
                    "username": "Mark Ransom"
                },
                {
                    "stack_answer_id": "509295",
                    "stack_answer_comment_id": "99325528",
                    "comment_content": "Note that contrary to usual Python slices (see above), in Pandas Dataframes both the start and the stop are included when present in the index. For further info see the ",
                    "username": "vreyespue"
                },
                {
                    "stack_answer_id": "509295",
                    "stack_answer_comment_id": "100203161",
                    "comment_content": "What really annoys me is that python says that when you don't set the start and the end, they default to 0 and the length of sequence. So, in theory, when you use \"abcdef\"[::-1] it should be transformed to \"abcdef\"[0:6:-1], but these two expressions does not get the same output. I feel that something is missing in python documentation since the creation of the language.",
                    "username": "axell-brendow"
                },
                {
                    "stack_answer_id": "509295",
                    "stack_answer_comment_id": "100203434",
                    "comment_content": "And I know that \"abcdef\"[::-1] is transformed to \"abcdef\"[6:-7:-1], so, the best way to explain would be: let ",
                    "username": "axell-brendow"
                }
            ]
        },
        {
            "stack_answer_id": "509297",
            "answer_content": "\r\n The  Python tutorial  talks about it (scroll down a bit until you get to the part about slicing). \n\n The ASCII art diagram is helpful too for remembering how slices work: \n\n  +---+---+---+---+---+---+\n | P | y | t | h | o | n |\n +---+---+---+---+---+---+\n 0   1   2   3   4   5   6\n-6  -5  -4  -3  -2  -1\n \n\n \n   One way to remember how slices work is to think of the indices as pointing  between  characters, with the left edge of the first character numbered 0. Then the right edge of the last character of a string of  n  characters has index  n . \n \n    ",
            "date_posted": "2017-09-18 11:02:56Z",
            "upvote": "\r\n            680\r\n        ",
            "accepted": "YES",
            "user": {
                "stack_user_id": "55075",
                "name": "kenorb",
                "reputation_score": "152k",
                "gold_badges": "85",
                "silver_badges": "671",
                "bronze_badges": "733"
            },
            "answer_comments": [
                {
                    "stack_answer_id": "509297",
                    "stack_answer_comment_id": "99270489",
                    "comment_content": "This suggestion works for positive stride, but does not for a negative stride. From the diagram, I expect ",
                    "username": "aguadopd"
                },
                {
                    "stack_answer_id": "509297",
                    "stack_answer_comment_id": "100377224",
                    "comment_content": "But there's no way to collapse to an empty set starting from the end (like ",
                    "username": "endolith"
                },
                {
                    "stack_answer_id": "509297",
                    "stack_answer_comment_id": "118360396",
                    "comment_content": "@aguadopd You are absolutely right. The solution is to have the indices shifted to the right, centered just below the characters, and notice that the stop is always excluded. See another response just below.",
                    "username": "Javier Ruiz"
                },
                {
                    "stack_answer_id": "509297",
                    "stack_answer_comment_id": "118606940",
                    "comment_content": "Addendum to my comment: see my answer with diagrams below: ",
                    "username": "aguadopd"
                }
            ]
        },
        {
            "stack_answer_id": "509377",
            "answer_content": "\r\n Enumerating the possibilities allowed by the grammar for the sequence  x : \n >>> x[:]                # [x[0],   x[1],          ..., x[-1]    ]\n>>> x[low:]             # [x[low], x[low+1],      ..., x[-1]    ]\n>>> x[:high]            # [x[0],   x[1],          ..., x[high-1]]\n>>> x[low:high]         # [x[low], x[low+1],      ..., x[high-1]]\n>>> x[::stride]         # [x[0],   x[stride],     ..., x[-1]    ]\n>>> x[low::stride]      # [x[low], x[low+stride], ..., x[-1]    ]\n>>> x[:high:stride]     # [x[0],   x[stride],     ..., x[high-1]]\n>>> x[low:high:stride]  # [x[low], x[low+stride], ..., x[high-1]]\n \n Of course, if  (high-low)%stride != 0 , then the end point will be a little lower than  high-1 . \n If  stride  is negative, the ordering is changed a bit since we're counting down: \n >>> x[::-stride]        # [x[-1],   x[-1-stride],   ..., x[0]    ]\n>>> x[high::-stride]    # [x[high], x[high-stride], ..., x[0]    ]\n>>> x[:low:-stride]     # [x[-1],   x[-1-stride],   ..., x[low+1]]\n>>> x[high:low:-stride] # [x[high], x[high-stride], ..., x[low+1]]\n \n Extended slicing (with commas and ellipses) are mostly used only by special data structures (like NumPy); the basic sequences don't support them. \n >>> class slicee:\n...     def __getitem__(self, item):\n...         return repr(item)\n...\n>>> slicee()[0, 1:2, ::5, ...]\n'(0, slice(1, 2, None), slice(None, None, 5), Ellipsis)'\n \n    ",
            "date_posted": "2022-10-02 22:06:40Z",
            "upvote": "\r\n            527\r\n        ",
            "accepted": "YES",
            "user": {
                "stack_user_id": "365102",
                "name": "Mateen Ulhaq",
                "reputation_score": "23.6k",
                "gold_badges": "16",
                "silver_badges": "95",
                "bronze_badges": "132"
            },
            "answer_comments": [
                {
                    "stack_answer_id": "509377",
                    "stack_answer_comment_id": "83074550",
                    "comment_content": "Actually there is still something left out e.g. if I type 'apple'[4:-4:-1] I get 'elp', python is translating the -4 to a 1 maybe?",
                    "username": "liyuan"
                },
                {
                    "stack_answer_id": "509377",
                    "stack_answer_comment_id": "95581586",
                    "comment_content": "note that backticks are deprecated in favour of ",
                    "username": "wjandrea"
                },
                {
                    "stack_answer_id": "509377",
                    "stack_answer_comment_id": "102170688",
                    "comment_content": "@liyuan The type implementing ",
                    "username": "chepner"
                },
                {
                    "stack_answer_id": "509377",
                    "stack_answer_comment_id": "124476274",
                    "comment_content": "The first two tables are pure gold.",
                    "username": "Bananeen"
                }
            ]
        },
        {
            "stack_answer_id": "4729334",
            "answer_content": "\r\n The answers above don't discuss slice assignment. To understand slice assignment, it's helpful to add another concept to the ASCII art: \n\n                 +---+---+---+---+---+---+\n                | P | y | t | h | o | n |\n                +---+---+---+---+---+---+\nSlice position: 0   1   2   3   4   5   6\nIndex position:   0   1   2   3   4   5\n\n>>> p = ['P','y','t','h','o','n']\n# Why the two sets of numbers:\n# indexing gives items, not lists\n>>> p[0]\n 'P'\n>>> p[5]\n 'n'\n\n# Slicing gives lists\n>>> p[0:1]\n ['P']\n>>> p[0:2]\n ['P','y']\n \n\n One heuristic is, for a slice from zero to n, think: \"zero is the beginning, start at the beginning and take n items in a list\". \n\n >>> p[5] # the last of six items, indexed from zero\n 'n'\n>>> p[0:5] # does NOT include the last item!\n ['P','y','t','h','o']\n>>> p[0:6] # not p[0:5]!!!\n ['P','y','t','h','o','n']\n \n\n Another heuristic is, \"for any slice, replace the start by zero, apply the previous heuristic to get the end of the list, then count the first number back up to chop items off the beginning\" \n\n >>> p[0:4] # Start at the beginning and count out 4 items\n ['P','y','t','h']\n>>> p[1:4] # Take one item off the front\n ['y','t','h']\n>>> p[2:4] # Take two items off the front\n ['t','h']\n# etc.\n \n\n The first rule of slice assignment is that since slicing  returns  a list, slice assignment  requires  a list (or other iterable): \n\n >>> p[2:3]\n ['t']\n>>> p[2:3] = ['T']\n>>> p\n ['P','y','T','h','o','n']\n>>> p[2:3] = 't'\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nTypeError: can only assign an iterable\n \n\n The second rule of slice assignment, which you can also see above, is that whatever portion of the list is returned by slice indexing, that's the same portion that is changed by slice assignment: \n\n >>> p[2:4]\n ['T','h']\n>>> p[2:4] = ['t','r']\n>>> p\n ['P','y','t','r','o','n']\n \n\n The third rule of slice assignment is, the assigned list (iterable) doesn't have to have the same length; the indexed slice is simply sliced out and replaced en masse by whatever is being assigned: \n\n >>> p = ['P','y','t','h','o','n'] # Start over\n>>> p[2:4] = ['s','p','a','m']\n>>> p\n ['P','y','s','p','a','m','o','n']\n \n\n The trickiest part to get used to is assignment to empty slices. Using heuristic 1 and 2 it's easy to get your head around  indexing  an empty slice: \n\n >>> p = ['P','y','t','h','o','n']\n>>> p[0:4]\n ['P','y','t','h']\n>>> p[1:4]\n ['y','t','h']\n>>> p[2:4]\n ['t','h']\n>>> p[3:4]\n ['h']\n>>> p[4:4]\n []\n \n\n And then once you've seen that, slice assignment to the empty slice makes sense too: \n\n >>> p = ['P','y','t','h','o','n']\n>>> p[2:4] = ['x','y'] # Assigned list is same length as slice\n>>> p\n ['P','y','x','y','o','n'] # Result is same length\n>>> p = ['P','y','t','h','o','n']\n>>> p[3:4] = ['x','y'] # Assigned list is longer than slice\n>>> p\n ['P','y','t','x','y','o','n'] # The result is longer\n>>> p = ['P','y','t','h','o','n']\n>>> p[4:4] = ['x','y']\n>>> p\n ['P','y','t','h','x','y','o','n'] # The result is longer still\n \n\n Note that, since we are not changing the second number of the slice (4), the inserted items always stack right up against the 'o', even when we're assigning to the empty slice. So the position for the empty slice assignment is the logical extension of the positions for the non-empty slice assignments. \n\n Backing up a little bit, what happens when you keep going with our procession of counting up the slice beginning? \n\n >>> p = ['P','y','t','h','o','n']\n>>> p[0:4]\n ['P','y','t','h']\n>>> p[1:4]\n ['y','t','h']\n>>> p[2:4]\n ['t','h']\n>>> p[3:4]\n ['h']\n>>> p[4:4]\n []\n>>> p[5:4]\n []\n>>> p[6:4]\n []\n \n\n With slicing, once you're done, you're done; it doesn't start slicing backwards. In Python you don't get negative strides unless you explicitly ask for them by using a negative number. \n\n >>> p[5:3:-1]\n ['n','o']\n \n\n There are some weird consequences to the \"once you're done, you're done\" rule: \n\n >>> p[4:4]\n []\n>>> p[5:4]\n []\n>>> p[6:4]\n []\n>>> p[6]\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nIndexError: list index out of range\n \n\n In fact, compared to indexing, Python slicing is bizarrely error-proof: \n\n >>> p[100:200]\n []\n>>> p[int(2e99):int(1e99)]\n []\n \n\n This can come in handy sometimes, but it can also lead to somewhat strange behavior: \n\n >>> p\n ['P', 'y', 't', 'h', 'o', 'n']\n>>> p[int(2e99):int(1e99)] = ['p','o','w','e','r']\n>>> p\n ['P', 'y', 't', 'h', 'o', 'n', 'p', 'o', 'w', 'e', 'r']\n \n\n Depending on your application, that might... or might not... be what you were hoping for there! \n\n \n\n Below is the text of my original answer. It has been useful to many people, so I didn't want to delete it. \n\n >>> r=[1,2,3,4]\n>>> r[1:1]\n[]\n>>> r[1:1]=[9,8]\n>>> r\n[1, 9, 8, 2, 3, 4]\n>>> r[1:1]=['blah']\n>>> r\n[1, 'blah', 9, 8, 2, 3, 4]\n \n\n This may also clarify the difference between slicing and indexing. \n    ",
            "date_posted": "2019-01-02 16:44:22Z",
            "upvote": "\r\n            435\r\n        ",
            "accepted": "YES",
            "user": {
                "stack_user_id": "63550",
                "name": "Peter Mortensen",
                "reputation_score": "31k",
                "gold_badges": "21",
                "silver_badges": "105",
                "bronze_badges": "126"
            },
            "answer_comments": [
                {
                    "stack_answer_id": "4729334",
                    "stack_answer_comment_id": "129107053",
                    "comment_content": "If I wanted to remove the 1st x elements of a list, what will be better: ",
                    "username": "Alex O"
                },
                {
                    "stack_answer_id": "4729334",
                    "stack_answer_comment_id": "129131819",
                    "comment_content": "The first way works for a list or a string; the second way only works for a list, because slice assignment isn't allowed for strings. Other than that I think the only difference is speed: it looks like it's a little faster the first way. Try it yourself with timeit.timeit() or preferably  timeit.repeat(). They are ",
                    "username": "David M. Perlman"
                },
                {
                    "stack_answer_id": "4729334",
                    "stack_answer_comment_id": "129923223",
                    "comment_content": "Curious about what's the time complexity of doing ",
                    "username": "Edamame"
                },
                {
                    "stack_answer_id": "4729334",
                    "stack_answer_comment_id": "133957364",
                    "comment_content": "p[2:3] = 't' works fine ! there should be no TypeError !",
                    "username": "Simo"
                }
            ]
        },
        {
            "stack_answer_id": "24713353",
            "answer_content": "\r\n \n Explain Python's slice notation \n \n In short, the colons ( : ) in subscript notation ( subscriptable[subscriptarg] ) make slice notation, which has the optional arguments  start ,  stop , and  step : \n sliceable[start:stop:step]\n \n Python slicing is a computationally fast way to methodically access parts of your data. In my opinion, to be even an intermediate Python programmer, it's one aspect of the language that it is necessary to be familiar with. \n Important Definitions \n To begin with, let's define a few terms: \n \n start :  the beginning index of the slice, it will include the element at this index unless it is the same as  stop , defaults to 0, i.e. the first index. If it's negative, it means to start  n  items from the end. \n stop :  the ending index of the slice, it does  not  include the element at this index, defaults to length of the sequence being sliced, that is, up to and including the end. \n step :  the amount by which the index increases, defaults to 1. If it's negative, you're slicing over the iterable in reverse. \n \n How Indexing Works \n You can make any of these positive or negative numbers. The meaning of the positive numbers is straightforward, but for negative numbers, just like indexes in Python, you count backwards from the end for the  start  and  stop , and for the  step , you simply decrement your index. This example is  from the documentation's tutorial , but I've modified it slightly to indicate which item in a sequence each index references: \n  +---+---+---+---+---+---+\n | P | y | t | h | o | n |\n +---+---+---+---+---+---+\n   0   1   2   3   4   5 \n  -6  -5  -4  -3  -2  -1\n \n How Slicing Works \n To use slice notation with a sequence that supports it, you must include at least one colon in the square brackets that follow the sequence (which actually  implement the  __getitem__  method of the sequence, according to the Python data model .) \n Slice notation works like this: \n sequence[start:stop:step]\n \n And recall that there are defaults for  start ,  stop , and  step , so to access the defaults, simply leave out the argument. \n Slice notation to get the last nine elements from a list (or any other sequence that supports it, like a string) would look like this: \n my_list[-9:]\n \n When I see this, I read the part in the brackets as \"9th from the end, to the end.\" (Actually, I abbreviate it mentally as \"-9, on\") \n Explanation: \n The full notation is \n my_list[-9:None:None]\n \n and to substitute the defaults (actually when  step  is negative,  stop 's default is  -len(my_list) - 1 , so  None  for stop really just means it goes to whichever end step takes it to): \n my_list[-9:len(my_list):1]\n \n The  colon ,  : ,  is what tells Python you're giving it a slice and not a regular index. That's why the idiomatic way of making a shallow copy of lists in Python 2 is \n list_copy = sequence[:]\n \n And clearing them is with: \n del my_list[:]\n \n (Python 3 gets a  list.copy  and  list.clear  method.) \n When  step  is negative, the defaults for  start  and  stop  change \n By default, when the  step  argument is empty (or  None ), it is assigned to  +1 . \n But you can pass in a negative integer, and the list (or most other standard sliceables) will be sliced from the end to the beginning. \n Thus a negative slice will change the defaults for  start  and  stop ! \n Confirming this in the source \n I like to encourage users to read the source as well as the documentation. The  source code for slice objects and this logic is found here . First we determine if  step  is negative: \n \n step_is_negative = step_sign < 0;\n \n \n If so, the lower bound is  -1   meaning we slice all the way up to and including the beginning, and the upper bound is the length minus 1, meaning we start at the end. (Note that the semantics of this  -1  is  different  from a  -1  that users may pass indexes in Python indicating the last item.) \n \n if (step_is_negative) {\n    lower = PyLong_FromLong(-1L);\n    if (lower == NULL)\n        goto error;\n\n    upper = PyNumber_Add(length, lower);\n    if (upper == NULL)\n        goto error;\n}\n \n \n Otherwise  step  is positive, and the lower bound will be zero and the upper bound (which we go up to but not including) the length of the sliced list. \n \n else {\n    lower = _PyLong_Zero;\n    Py_INCREF(lower);\n    upper = length;\n    Py_INCREF(upper);\n}\n \n \n Then, we may need to apply the defaults for  start  and  stop \u2014the default then for  start  is calculated as the upper bound when  step  is negative: \n \n if (self->start == Py_None) {\n    start = step_is_negative ? upper : lower;\n    Py_INCREF(start);\n}\n \n \n and  stop , the lower bound: \n \n if (self->stop == Py_None) {\n    stop = step_is_negative ? lower : upper;\n    Py_INCREF(stop);\n}\n \n \n Give your slices a descriptive name! \n You may find it useful to separate forming the slice from passing it to the  list.__getitem__  method ( that's what the square brackets do ). Even if you're not new to it, it keeps your code more readable so that others that may have to read your code can more readily understand what you're doing. \n However, you can't just assign some integers separated by colons to a variable. You need to use the slice object: \n last_nine_slice = slice(-9, None)\n \n The second argument,  None , is required, so that the first argument is interpreted as the  start  argument  otherwise it would be the  stop  argument . \n You can then pass the slice object to your sequence: \n >>> list(range(100))[last_nine_slice]\n[91, 92, 93, 94, 95, 96, 97, 98, 99]\n \n It's interesting that ranges also take slices: \n >>> range(100)[last_nine_slice]\nrange(91, 100)\n \n Memory Considerations: \n Since slices of Python lists create new objects in memory, another important function to be aware of is  itertools.islice . Typically you'll want to iterate over a slice, not just have it created statically in memory.  islice  is perfect for this. A caveat, it doesn't support negative arguments to  start ,  stop , or  step , so if that's an issue you may need to calculate indices or reverse the iterable in advance. \n length = 100\nlast_nine_iter = itertools.islice(list(range(length)), length-9, None, 1)\nlist_last_nine = list(last_nine_iter)\n \n and now: \n >>> list_last_nine\n[91, 92, 93, 94, 95, 96, 97, 98, 99]\n \n The fact that list slices make a copy is a feature of lists themselves. If you're slicing advanced objects like a Pandas DataFrame, it may return a view on the original, and not a copy. \n    ",
            "date_posted": "2022-04-30 17:20:06Z",
            "upvote": "\r\n            288\r\n        ",
            "accepted": "YES",
            "user": {
                "stack_user_id": "241211",
                "name": "Michael",
                "reputation_score": "8,191",
                "gold_badges": "6",
                "silver_badges": "62",
                "bronze_badges": "88"
            },
            "answer_comments": [
                {
                    "stack_answer_id": "24713353",
                    "stack_answer_comment_id": "113403311",
                    "comment_content": "@WinEunuuchs2Unix that's great feedback - this is a standard Python behavior, but it could be made clearer in that sort of way, so I'll consider updating my material to include this semantic.",
                    "username": "Russia Must Remove Putin"
                },
                {
                    "stack_answer_id": "24713353",
                    "stack_answer_comment_id": "131714276",
                    "comment_content": "Your answer is the only one (?) that touches the tip of what would be interesting here, when you write \"slicable\" - the rest is triviality. I wanted to know how the slicing is done, using the ",
                    "username": "Max"
                }
            ]
        },
        {
            "stack_answer_id": "509415",
            "answer_content": "\r\n And a couple of things that weren't immediately obvious to me when I first saw the slicing syntax: \n\n >>> x = [1,2,3,4,5,6]\n>>> x[::-1]\n[6,5,4,3,2,1]\n \n\n Easy way to reverse sequences! \n\n And if you wanted, for some reason, every second item in the reversed sequence: \n\n >>> x = [1,2,3,4,5,6]\n>>> x[::-2]\n[6,4,2]\n \n    ",
            "date_posted": "2009-02-03 23:15:02Z",
            "upvote": "\r\n            158\r\n        ",
            "accepted": "YES",
            "user": {
                "stack_user_id": "7856",
                "name": "Dana",
                "reputation_score": "31.8k",
                "gold_badges": "17",
                "silver_badges": "62",
                "bronze_badges": "73"
            },
            "answer_comments": []
        },
        {
            "stack_answer_id": "13005464",
            "answer_content": "\r\n In Python 2.7 \n\n Slicing in Python \n\n [a:b:c]\n\nlen = length of string, tuple or list\n\nc -- default is +1. The sign of c indicates forward or backward, absolute value of c indicates steps. Default is forward with step size 1. Positive means forward, negative means backward.\n\na --  When c is positive or blank, default is 0. When c is negative, default is -1.\n\nb --  When c is positive or blank, default is len. When c is negative, default is -(len+1).\n \n\n Understanding index assignment is very important. \n\n In forward direction, starts at 0 and ends at len-1\n\nIn backward direction, starts at -1 and ends at -len\n \n\n When you say [a:b:c], you are saying depending on the sign of c (forward or backward), start at a and end at b (excluding element at bth index). Use the indexing rule above and remember you will only find elements in this range: \n\n -len, -len+1, -len+2, ..., 0, 1, 2,3,4 , len -1\n \n\n But this range continues in both directions infinitely: \n\n ...,-len -2 ,-len-1,-len, -len+1, -len+2, ..., 0, 1, 2,3,4 , len -1, len, len +1, len+2 , ....\n \n\n For example: \n\n              0    1    2   3    4   5   6   7   8   9   10   11\n             a    s    t   r    i   n   g\n    -9  -8  -7   -6   -5  -4   -3  -2  -1\n \n\n If your choice of a, b, and c allows overlap with the range above as you traverse using rules for a,b,c above you will either get a list with elements (touched during traversal) or you will get an empty list. \n\n One last thing: if a and b are equal, then also you get an empty list: \n\n >>> l1\n[2, 3, 4]\n\n>>> l1[:]\n[2, 3, 4]\n\n>>> l1[::-1] # a default is -1 , b default is -(len+1)\n[4, 3, 2]\n\n>>> l1[:-4:-1] # a default is -1\n[4, 3, 2]\n\n>>> l1[:-3:-1] # a default is -1\n[4, 3]\n\n>>> l1[::] # c default is +1, so a default is 0, b default is len\n[2, 3, 4]\n\n>>> l1[::-1] # c is -1 , so a default is -1 and b default is -(len+1)\n[4, 3, 2]\n\n\n>>> l1[-100:-200:-1] # Interesting\n[]\n\n>>> l1[-1:-200:-1] # Interesting\n[4, 3, 2]\n\n\n>>> l1[-1:-1:1]\n[]\n\n\n>>> l1[-1:5:1] # Interesting\n[4]\n\n\n>>> l1[1:-7:1]\n[]\n\n>>> l1[1:-7:-1] # Interesting\n[3, 2]\n\n>>> l1[:-2:-2] # a default is -1, stop(b) at -2 , step(c) by 2 in reverse direction\n[4]\n \n    ",
            "date_posted": "2017-07-10 16:59:26Z",
            "upvote": "\r\n            111\r\n        ",
            "accepted": "YES",
            "user": {
                "stack_user_id": "494074",
                "name": "Ankur Agarwal",
                "reputation_score": "23.3k",
                "gold_badges": "40",
                "silver_badges": "134",
                "bronze_badges": "205"
            },
            "answer_comments": [
                {
                    "stack_answer_id": "13005464",
                    "stack_answer_comment_id": "77001814",
                    "comment_content": "another one interesting example: ",
                    "username": "Deviacium"
                }
            ]
        },
        {
            "stack_answer_id": "7315935",
            "answer_content": "\r\n Found this great table at  http://wiki.python.org/moin/MovingToPythonFromOtherLanguages \n\n Python indexes and slices for a six-element list.\nIndexes enumerate the elements, slices enumerate the spaces between the elements.\n\nIndex from rear:    -6  -5  -4  -3  -2  -1      a=[0,1,2,3,4,5]    a[1:]==[1,2,3,4,5]\nIndex from front:    0   1   2   3   4   5      len(a)==6          a[:5]==[0,1,2,3,4]\n                   +---+---+---+---+---+---+    a[0]==0            a[:-2]==[0,1,2,3]\n                   | a | b | c | d | e | f |    a[5]==5            a[1:2]==[1]\n                   +---+---+---+---+---+---+    a[-1]==5           a[1:-1]==[1,2,3,4]\nSlice from front:  :   1   2   3   4   5   :    a[-2]==4\nSlice from rear:   :  -5  -4  -3  -2  -1   :\n                                                b=a[:]\n                                                b==[0,1,2,3,4,5] (shallow copy of a) \n    ",
            "date_posted": "2011-09-06 06:50:08Z",
            "upvote": "\r\n            101\r\n        ",
            "accepted": "YES",
            "user": {
                "stack_user_id": "43769",
                "name": "AdrianoFerrari",
                "reputation_score": "2,120",
                "gold_badges": "1",
                "silver_badges": "18",
                "bronze_badges": "14"
            },
            "answer_comments": []
        },
        {
            "stack_answer_id": "567094",
            "answer_content": "\r\n After using it a bit I realise that the simplest description is that it is exactly the same as the arguments in a  for  loop... \n\n (from:to:step)\n \n\n Any of them are optional: \n\n (:to:step)\n(from::step)\n(from:to)\n \n\n Then the negative indexing just needs you to add the length of the string to the negative indices to understand it. \n\n This works for me anyway... \n    ",
            "date_posted": "2019-01-02 16:40:20Z",
            "upvote": "\r\n            70\r\n        ",
            "accepted": "YES",
            "user": {
                "stack_user_id": "63550",
                "name": "Peter Mortensen",
                "reputation_score": "31k",
                "gold_badges": "21",
                "silver_badges": "105",
                "bronze_badges": "126"
            },
            "answer_comments": []
        },
        {
            "stack_answer_id": "9923354",
            "answer_content": "\r\n I find it easier to remember how it works, and then I can figure out any specific start/stop/step combination. \n\n It's instructive to understand  range()  first: \n\n def range(start=0, stop, step=1):  # Illegal syntax, but that's the effect\n    i = start\n    while (i < stop if step > 0 else i > stop):\n        yield i\n        i += step\n \n\n Begin from  start , increment by  step , do not reach  stop .  Very simple. \n\n The thing to remember about negative step is that  stop  is always the excluded end, whether it's higher or lower. If you want same slice in opposite order, it's much cleaner to do the reversal separately: e.g.  'abcde'[1:-2][::-1]  slices off one char from left, two from right, then reverses. (See also  reversed() .) \n\n Sequence slicing is same, except it first normalizes negative indexes, and it can never go outside the sequence: \n\n TODO : The code below had a bug with \"never go outside the sequence\" when abs(step)>1; I  think  I patched it to be correct, but it's hard to understand. \n\n def this_is_how_slicing_works(seq, start=None, stop=None, step=1):\n    if start is None:\n        start = (0 if step > 0 else len(seq)-1)\n    elif start < 0:\n        start += len(seq)\n    if not 0 <= start < len(seq):  # clip if still outside bounds\n        start = (0 if step > 0 else len(seq)-1)\n    if stop is None:\n        stop = (len(seq) if step > 0 else -1)  # really -1, not last element\n    elif stop < 0:\n        stop += len(seq)\n    for i in range(start, stop, step):\n        if 0 <= i < len(seq):\n            yield seq[i]\n \n\n Don't worry about the  is None  details - just remember that omitting  start  and/or  stop  always does the right thing to give you the whole sequence. \n\n Normalizing negative indexes first allows start and/or stop to be counted from the end independently:  'abcde'[1:-2] == 'abcde'[1:3] == 'bc'  despite  range(1,-2) == [] .\nThe normalization is sometimes thought of as \"modulo the length\", but note it adds the length just once: e.g.  'abcde'[-53:42]  is just the whole string. \n    ",
            "date_posted": "2019-01-02 16:46:18Z",
            "upvote": "\r\n            54\r\n        ",
            "accepted": "YES",
            "user": {
                "stack_user_id": "63550",
                "name": "Peter Mortensen",
                "reputation_score": "31k",
                "gold_badges": "21",
                "silver_badges": "105",
                "bronze_badges": "126"
            },
            "answer_comments": [
                {
                    "stack_answer_id": "9923354",
                    "stack_answer_comment_id": "67894582",
                    "comment_content": "The ",
                    "username": "Eastsun"
                },
                {
                    "stack_answer_id": "9923354",
                    "stack_answer_comment_id": "67913261",
                    "comment_content": "@Eastsun Oops, you're right!  A clearer case: ",
                    "username": "Beni Cherniavsky-Paskin"
                }
            ]
        },
        {
            "stack_answer_id": "522212",
            "answer_content": "\r\n I use the \"an index points between elements\" method of thinking about it myself, but one way of describing it which sometimes helps others get it is this: \n\n mylist[X:Y]\n \n\n X is the index of the first element you want. \nY is the index of the first element you  don't  want. \n    ",
            "date_posted": "2009-02-06 21:16:28Z",
            "upvote": "\r\n            44\r\n        ",
            "accepted": "YES",
            "user": {
                "stack_user_id": "13498",
                "name": "Steve Losh",
                "reputation_score": "19.6k",
                "gold_badges": "2",
                "silver_badges": "51",
                "bronze_badges": "44"
            },
            "answer_comments": [
                {
                    "stack_answer_id": "522212",
                    "stack_answer_comment_id": "132868897",
                    "comment_content": "This is helpful; I had pondered why the ending index (in this case, Y of [X:Y]) was not included. i.e. Why [0:0] would not include the first index.",
                    "username": "contactmatt"
                }
            ]
        },
        {
            "stack_answer_id": "14682039",
            "answer_content": "\r\n Index:\n      ------------>\n  0   1   2   3   4\n+---+---+---+---+---+\n| a | b | c | d | e |\n+---+---+---+---+---+\n  0  -4  -3  -2  -1\n      <------------\n\nSlice:\n    <---------------|\n|--------------->\n:   1   2   3   4   :\n+---+---+---+---+---+\n| a | b | c | d | e |\n+---+---+---+---+---+\n:  -4  -3  -2  -1   :\n|--------------->\n    <---------------|\n \n\n I hope this will help you to model the list in Python. \n\n Reference:  http://wiki.python.org/moin/MovingToPythonFromOtherLanguages \n    ",
            "date_posted": "2017-02-11 19:56:15Z",
            "upvote": "\r\n            43\r\n        ",
            "accepted": "YES",
            "user": {
                "stack_user_id": "63550",
                "name": "Peter Mortensen",
                "reputation_score": "31k",
                "gold_badges": "21",
                "silver_badges": "105",
                "bronze_badges": "126"
            },
            "answer_comments": []
        },
        {
            "stack_answer_id": "29237560",
            "answer_content": "\r\n This is how I teach slices to newbies: \n\n Understanding the difference between indexing and slicing: \n\n Wiki Python has this amazing picture which clearly distinguishes indexing and slicing. \n\n \n\n It is a list with six elements in it. To understand slicing better, consider that list as a set of six boxes placed together. Each box has an alphabet in it. \n\n Indexing is like dealing with the contents of box. You can check contents of any box. But you can't check the contents of multiple boxes at once. You can even replace the contents of the box. But you can't place two balls in one box or replace two balls at a time. \n\n In [122]: alpha = ['a', 'b', 'c', 'd', 'e', 'f']\n\nIn [123]: alpha\nOut[123]: ['a', 'b', 'c', 'd', 'e', 'f']\n\nIn [124]: alpha[0]\nOut[124]: 'a'\n\nIn [127]: alpha[0] = 'A'\n\nIn [128]: alpha\nOut[128]: ['A', 'b', 'c', 'd', 'e', 'f']\n\nIn [129]: alpha[0,1]\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n<ipython-input-129-c7eb16585371> in <module>()\n----> 1 alpha[0,1]\n\nTypeError: list indices must be integers, not tuple\n \n\n Slicing is like dealing with boxes themselves. You can pick up the first box and place it on another table. To pick up the box, all you need to know is the position of beginning and ending of the box. \n\n You can even pick up the first three boxes or the last two boxes or all boxes between 1 and 4. So, you can pick any set of boxes if you know the beginning and ending. These positions are called start and stop positions. \n\n The interesting thing is that you can replace multiple boxes at once. Also you can place multiple boxes wherever you like. \n\n In [130]: alpha[0:1]\nOut[130]: ['A']\n\nIn [131]: alpha[0:1] = 'a'\n\nIn [132]: alpha\nOut[132]: ['a', 'b', 'c', 'd', 'e', 'f']\n\nIn [133]: alpha[0:2] = ['A', 'B']\n\nIn [134]: alpha\nOut[134]: ['A', 'B', 'c', 'd', 'e', 'f']\n\nIn [135]: alpha[2:2] = ['x', 'xx']\n\nIn [136]: alpha\nOut[136]: ['A', 'B', 'x', 'xx', 'c', 'd', 'e', 'f']\n \n\n Slicing With Step: \n\n Till now you have picked boxes continuously. But sometimes you need to pick up discretely. For example, you can pick up every second box. You can even pick up every third box from the end. This value is called step size. This represents the gap between your successive pickups. The step size should be positive if You are picking boxes from the beginning to end and vice versa. \n\n In [137]: alpha = ['a', 'b', 'c', 'd', 'e', 'f']\n\nIn [142]: alpha[1:5:2]\nOut[142]: ['b', 'd']\n\nIn [143]: alpha[-1:-5:-2]\nOut[143]: ['f', 'd']\n\nIn [144]: alpha[1:5:-2]\nOut[144]: []\n\nIn [145]: alpha[-1:-5:2]\nOut[145]: []\n \n\n How Python Figures Out Missing Parameters: \n\n When slicing, if you leave out any parameter, Python tries to figure it out automatically. \n\n If you check the source code of  CPython , you will find a function called PySlice_GetIndicesEx() which figures out indices to a slice for any given parameters. Here is the logical equivalent code in Python. \n\n This function takes a Python object and optional parameters for slicing and returns the start, stop, step, and slice length for the requested slice. \n\n def py_slice_get_indices_ex(obj, start=None, stop=None, step=None):\n\n    length = len(obj)\n\n    if step is None:\n        step = 1\n    if step == 0:\n        raise Exception(\"Step cannot be zero.\")\n\n    if start is None:\n        start = 0 if step > 0 else length - 1\n    else:\n        if start < 0:\n            start += length\n        if start < 0:\n            start = 0 if step > 0 else -1\n        if start >= length:\n            start = length if step > 0 else length - 1\n\n    if stop is None:\n        stop = length if step > 0 else -1\n    else:\n        if stop < 0:\n            stop += length\n        if stop < 0:\n            stop = 0 if step > 0 else -1\n        if stop >= length:\n            stop = length if step > 0 else length - 1\n\n    if (step < 0 and stop >= start) or (step > 0 and start >= stop):\n        slice_length = 0\n    elif step < 0:\n        slice_length = (stop - start + 1)/(step) + 1\n    else:\n        slice_length = (stop - start - 1)/(step) + 1\n\n    return (start, stop, step, slice_length)\n \n\n This is the intelligence that is present behind slices. Since Python has an built-in function called slice, you can pass some parameters and check how smartly it calculates missing parameters. \n\n In [21]: alpha = ['a', 'b', 'c', 'd', 'e', 'f']\n\nIn [22]: s = slice(None, None, None)\n\nIn [23]: s\nOut[23]: slice(None, None, None)\n\nIn [24]: s.indices(len(alpha))\nOut[24]: (0, 6, 1)\n\nIn [25]: range(*s.indices(len(alpha)))\nOut[25]: [0, 1, 2, 3, 4, 5]\n\nIn [26]: s = slice(None, None, -1)\n\nIn [27]: range(*s.indices(len(alpha)))\nOut[27]: [5, 4, 3, 2, 1, 0]\n\nIn [28]: s = slice(None, 3, -1)\n\nIn [29]: range(*s.indices(len(alpha)))\nOut[29]: [5, 4]\n \n\n Note:  This post was originally written in my blog,  The Intelligence Behind Python Slices . \n    ",
            "date_posted": "2019-09-26 07:58:01Z",
            "upvote": "\r\n            39\r\n        ",
            "accepted": "YES",
            "user": {
                "stack_user_id": "63550",
                "name": "Peter Mortensen",
                "reputation_score": "31k",
                "gold_badges": "21",
                "silver_badges": "105",
                "bronze_badges": "126"
            },
            "answer_comments": [
                {
                    "stack_answer_id": "29237560",
                    "stack_answer_comment_id": "125358697",
                    "comment_content": "At last, I found here some explanation on why the slicing parameters ",
                    "username": "Olivier"
                }
            ]
        },
        {
            "stack_answer_id": "16267103",
            "answer_content": "\r\n Python slicing notation: \n\n a[start:end:step]\n \n\n \n For  start  and  end , negative values are interpreted as being relative to the end of the sequence. \n Positive indices for  end  indicate the position  after  the last element to be included. \n Blank values are defaulted as follows:  [+0:-0:1] . \n Using a negative step reverses the interpretation of  start  and  end \n \n\n The notation extends to (numpy) matrices and multidimensional arrays.  For example, to slice entire columns you can use: \n\n m[::,0:2:] ## slice the first two columns\n \n\n Slices hold references, not copies, of the array elements.  If you want to make a separate copy an array, you can use  deepcopy() . \n    ",
            "date_posted": "2017-05-23 12:34:44Z",
            "upvote": "\r\n            38\r\n        ",
            "accepted": "YES",
            "user": {
                "stack_user_id": "-1",
                "name": "Community",
                "reputation_score": "1",
                "gold_badges": "17",
                "silver_badges": "1",
                "bronze_badges": "169"
            },
            "answer_comments": []
        },
        {
            "stack_answer_id": "15824717",
            "answer_content": "\r\n You can also use slice assignment to remove one or more elements from a list: \n\n r = [1, 'blah', 9, 8, 2, 3, 4]\n>>> r[1:4] = []\n>>> r\n[1, 2, 3, 4]\n \n    ",
            "date_posted": "2013-04-19 16:28:16Z",
            "upvote": "\r\n            34\r\n        ",
            "accepted": "YES",
            "user": {
                "stack_user_id": "1355221",
                "name": "dansalmo",
                "reputation_score": "11.4k",
                "gold_badges": "5",
                "silver_badges": "57",
                "bronze_badges": "52"
            },
            "answer_comments": []
        },
        {
            "stack_answer_id": "9827284",
            "answer_content": "\r\n This is just for some extra info...\nConsider the list below  \n\n >>> l=[12,23,345,456,67,7,945,467]\n \n\n Few other tricks for reversing the list: \n\n >>> l[len(l):-len(l)-1:-1]\n[467, 945, 7, 67, 456, 345, 23, 12]\n\n>>> l[:-len(l)-1:-1]\n[467, 945, 7, 67, 456, 345, 23, 12]\n\n>>> l[len(l)::-1]\n[467, 945, 7, 67, 456, 345, 23, 12]\n\n>>> l[::-1]\n[467, 945, 7, 67, 456, 345, 23, 12]\n\n>>> l[-1:-len(l)-1:-1]\n[467, 945, 7, 67, 456, 345, 23, 12]\n \n    ",
            "date_posted": "2019-05-08 08:35:55Z",
            "upvote": "\r\n            33\r\n        ",
            "accepted": "YES",
            "user": {
                "stack_user_id": "7851470",
                "name": "Georgy",
                "reputation_score": "12k",
                "gold_badges": "7",
                "silver_badges": "68",
                "bronze_badges": "72"
            },
            "answer_comments": []
        },
        {
            "stack_answer_id": "41548529",
            "answer_content": "\r\n 1. Slice Notation \n\n To make it simple, remember  slice has only one form\uff1a \n\n s[start:end:step]\n \n\n and here is how it works: \n\n \n s : an object that can be sliced \n start : first index to start iteration \n end : last index,  NOTE that  end  index will not be included in the resulted slice \n step : pick element every  step  index \n \n\n Another import thing:  all  start , end ,  step  can be omitted!  And if they are omitted, their default value will be used:  0 , len(s) , 1  accordingly. \n\n So possible variations are: \n\n # Mostly used variations\ns[start:end]\ns[start:]\ns[:end]\n\n# Step-related variations\ns[:end:step]\ns[start::step]\ns[::step]\n\n# Make a copy\ns[:]\n \n\n NOTE: If  start >= end  (considering only when  step>0 ), Python will return a empty slice  [] . \n\n 2. Pitfalls \n\n The above part explains the core features on how slice works, and it will work on most occasions. However, there can be pitfalls you should watch out, and this part explains them. \n\n Negative indexes \n\n The very first thing that confuses Python learners is that  an index can be negative! \nDon't panic:  a negative index means count backwards. \n\n For example: \n\n s[-5:]    # Start at the 5th index from the end of array,\n          # thus returning the last 5 elements.\ns[:-5]    # Start at index 0, and end until the 5th index from end of array,\n          # thus returning s[0:len(s)-5].\n \n\n Negative step \n\n Making things more confusing is that  step  can be negative too! \n\n A negative step means iterate the array backwards: from the end to start, with the end index included, and the start index excluded from the result. \n\n NOTE : when step is negative, the default value for  start  is  len(s)  (while  end  does not equal to  0 , because  s[::-1]  contains  s[0] ). For example: \n\n s[::-1]            # Reversed slice\ns[len(s)::-1]      # The same as above, reversed slice\ns[0:len(s):-1]     # Empty list\n \n\n Out of range error? \n\n Be surprised:  slice does not raise an IndexError when the index is out of range! \n\n If the index is out of range, Python will try its best to set the index to  0  or  len(s)  according to the situation. For example: \n\n s[:len(s)+5]      # The same as s[:len(s)]\ns[-len(s)-5::]    # The same as s[0:]\ns[len(s)+5::-1]   # The same as s[len(s)::-1], and the same as s[::-1]\n \n\n 3. Examples \n\n Let's finish this answer with examples, explaining everything we have discussed: \n\n # Create our array for demonstration\nIn [1]: s = [i for i in range(10)]\n\nIn [2]: s\nOut[2]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n\nIn [3]: s[2:]   # From index 2 to last index\nOut[3]: [2, 3, 4, 5, 6, 7, 8, 9]\n\nIn [4]: s[:8]   # From index 0 up to index 8\nOut[4]: [0, 1, 2, 3, 4, 5, 6, 7]\n\nIn [5]: s[4:7]  # From index 4 (included) up to index 7(excluded)\nOut[5]: [4, 5, 6]\n\nIn [6]: s[:-2]  # Up to second last index (negative index)\nOut[6]: [0, 1, 2, 3, 4, 5, 6, 7]\n\nIn [7]: s[-2:]  # From second last index (negative index)\nOut[7]: [8, 9]\n\nIn [8]: s[::-1] # From last to first in reverse order (negative step)\nOut[8]: [9, 8, 7, 6, 5, 4, 3, 2, 1, 0]\n\nIn [9]: s[::-2] # All odd numbers in reversed order\nOut[9]: [9, 7, 5, 3, 1]\n\nIn [11]: s[-2::-2] # All even numbers in reversed order\nOut[11]: [8, 6, 4, 2, 0]\n\nIn [12]: s[3:15]   # End is out of range, and Python will set it to len(s).\nOut[12]: [3, 4, 5, 6, 7, 8, 9]\n\nIn [14]: s[5:1]    # Start > end; return empty list\nOut[14]: []\n\nIn [15]: s[11]     # Access index 11 (greater than len(s)) will raise an IndexError\n---------------------------------------------------------------------------\nIndexError                                Traceback (most recent call last)\n<ipython-input-15-79ffc22473a3> in <module>()\n----> 1 s[11]\n\nIndexError: list index out of range\n \n    ",
            "date_posted": "2019-09-26 08:04:23Z",
            "upvote": "\r\n            31\r\n        ",
            "accepted": "YES",
            "user": {
                "stack_user_id": "63550",
                "name": "Peter Mortensen",
                "reputation_score": "31k",
                "gold_badges": "21",
                "silver_badges": "105",
                "bronze_badges": "126"
            },
            "answer_comments": []
        },
        {
            "stack_answer_id": "20443928",
            "answer_content": "\r\n As a general rule, writing code with a lot of hardcoded index values leads to a readability\nand maintenance mess. For example, if you come back to the code a year later, you\u2019ll\nlook at it and wonder what you were thinking when you wrote it. The solution shown\nis simply a way of more clearly stating what your code is actually doing.\nIn general, the built-in slice() creates a slice object that can be used anywhere a slice\nis allowed. For example: \n\n >>> items = [0, 1, 2, 3, 4, 5, 6]\n>>> a = slice(2, 4)\n>>> items[2:4]\n[2, 3]\n>>> items[a]\n[2, 3]\n>>> items[a] = [10,11]\n>>> items\n[0, 1, 10, 11, 4, 5, 6]\n>>> del items[a]\n>>> items\n[0, 1, 4, 5, 6]\n \n\n If you have a slice instance s, you can get more information about it by looking at its\ns.start, s.stop, and s.step attributes, respectively. For example: \n\n \n >>> a = slice(10, 50, 2)\n>>> a.start\n10\n>>> a.stop\n50\n>>> a.step\n2\n>>>\n \n \n    ",
            "date_posted": "2013-12-07 16:52:45Z",
            "upvote": "\r\n            29\r\n        ",
            "accepted": "YES",
            "user": {
                "stack_user_id": "3048166",
                "name": "Python_Dude",
                "reputation_score": "507",
                "gold_badges": 0,
                "silver_badges": "6",
                "bronze_badges": "12"
            },
            "answer_comments": []
        },
        {
            "stack_answer_id": "42522149",
            "answer_content": "\r\n The previous answers don't discuss multi-dimensional array slicing which is possible using the famous  NumPy  package: \n\n Slicing can also be applied to multi-dimensional arrays. \n\n # Here, a is a NumPy array\n\n>>> a\narray([[ 1,  2,  3,  4],\n       [ 5,  6,  7,  8],\n       [ 9, 10, 11, 12]])\n>>> a[:2, 0:3:2]\narray([[1, 3],\n       [5, 7]])\n \n\n The \" :2 \" before the comma operates on the first dimension and the \" 0:3:2 \" after the comma operates on the second dimension. \n    ",
            "date_posted": "2019-09-26 08:08:54Z",
            "upvote": "\r\n            29\r\n        ",
            "accepted": "YES",
            "user": {
                "stack_user_id": "63550",
                "name": "Peter Mortensen",
                "reputation_score": "31k",
                "gold_badges": "21",
                "silver_badges": "105",
                "bronze_badges": "126"
            },
            "answer_comments": [
                {
                    "stack_answer_id": "42522149",
                    "stack_answer_comment_id": "100958827",
                    "comment_content": "Just a friendly reminder that you cannot do this on Python ",
                    "username": "Mars Lee"
                }
            ]
        },
        {
            "stack_answer_id": "63047385",
            "answer_content": "\r\n The rules of slicing are as follows: \n [lower bound : upper bound : step size]\n \n I-  Convert  upper bound   and  lower bound  into common signs. \n II-  Then check if the  step size  is a  positive  or a  negative  value. \n (i)  If the  step size  is a  positive value ,  upper bound  should be  greater than   lower bound , otherwise  empty string  is printed.  For example : \n s=\"Welcome\"\ns1=s[0:3:1]\nprint(s1)\n \n The output: \n Wel\n \n However if we run the following code: \n s=\"Welcome\"\ns1=s[3:0:1]\nprint(s1)\n \n It will return an  empty string . \n (ii)  If the  step size  if a  negative value ,  upper bound  should be  lesser than   lower bound , otherwise  empty string  will be printed. For example: \n s=\"Welcome\"\ns1=s[3:0:-1]\nprint(s1)\n \n The output: \n cle\n \n But if we run the following code: \n s=\"Welcome\"\ns1=s[0:5:-1]\nprint(s1)\n \n The output will be an  empty string . \n Thus in the code: \n str = 'abcd'\nl = len(str)\nstr2 = str[l-1:0:-1]    #str[3:0:-1] \nprint(str2)\nstr2 = str[l-1:-1:-1]    #str[3:-1:-1]\nprint(str2)\n \n In the first  str2=str[l-1:0:-1] , the  upper bound  is  lesser than  the  lower bound , thus  dcb  is printed. \n However in  str2=str[l-1:-1:-1] , the  upper bound  is  not less than  the  lower bound  (upon converting  lower bound  into  negative value  which is  -1 : since  index  of last element is -1 as well as 3). \n    ",
            "date_posted": "2020-07-23 05:22:23Z",
            "upvote": "\r\n            20\r\n        ",
            "accepted": "YES",
            "user": {
                "stack_user_id": "13737990",
                "name": "Anshika Singh",
                "reputation_score": "974",
                "gold_badges": 0,
                "silver_badges": "11",
                "bronze_badges": "20"
            },
            "answer_comments": []
        },
        {
            "stack_answer_id": "47765245",
            "answer_content": "\r\n In my opinion, you will understand and memorize better the Python string slicing notation if you look at it the following way (read on). \n\n Let's work with the following string ... \n\n azString = \"abcdefghijklmnopqrstuvwxyz\"\n \n\n For those who don't know, you can create any substring from  azString  using the notation  azString[x:y] \n\n Coming from other programming languages, that's when the common sense gets compromised. What are x and y? \n\n I had to sit down and run several scenarios in my quest for a memorization technique that will help me remember what x and y are and help me slice strings properly at the first attempt. \n\n My conclusion is that x and y should be seen as the boundary indexes that are surrounding the strings that we want to extra. So we should see the expression as  azString[index1, index2]  or even more clearer as  azString[index_of_first_character, index_after_the_last_character] . \n\n Here is an example visualization of that ... \n\n Letters   a b c d e f g h i j ...\n         \u2191 \u2191 \u2191 \u2191 \u2191 \u2191 \u2191 \u2191 \u2191 \u2191\n             \u250a           \u250a\nIndexes  0 1 2 3 4 5 6 7 8 9 ...\n             \u250a           \u250a\ncdefgh    index1       index2\n \n\n So all you have to do is setting index1 and index2 to the values that will surround the desired substring. For instance, to get the substring \"cdefgh\", you can use  azString[2:8] , because the index on the left side of \"c\" is 2 and the one on the right size of \"h\" is 8. \n\n Remember that we are setting the boundaries. And those boundaries are the positions where you could place some brackets that will be wrapped around the substring like this ... \n\n a b  [  c d e f g h  ]  i j \n\n That trick works all the time and is easy to memorize. \n    ",
            "date_posted": "2020-01-08 16:12:41Z",
            "upvote": "\r\n            18\r\n        ",
            "accepted": "YES",
            "user": {
                "stack_user_id": "609862",
                "name": "asiby",
                "reputation_score": "1",
                "gold_badges": 0,
                "silver_badges": 0,
                "bronze_badges": 0
            },
            "answer_comments": []
        },
        {
            "stack_answer_id": "57628026",
            "answer_content": "\r\n I personally think about it like a  for  loop: \n\n a[start:end:step]\n# for(i = start; i < end; i += step)\n \n\n Also, note that negative values for  start  and  end  are relative to the end of the list and computed in the example above by  given_index + a.shape[0] . \n    ",
            "date_posted": "2020-01-15 12:29:43Z",
            "upvote": "\r\n            18\r\n        ",
            "accepted": "YES",
            "user": {
                "stack_user_id": "806202",
                "name": "Arsen Khachaturyan",
                "reputation_score": "7,734",
                "gold_badges": "4",
                "silver_badges": "40",
                "bronze_badges": "42"
            },
            "answer_comments": []
        },
        {
            "stack_answer_id": "26442691",
            "answer_content": "\r\n #!/usr/bin/env python\n\ndef slicegraphical(s, lista):\n\n    if len(s) > 9:\n        print \"\"\"Enter a string of maximum 9 characters,\n    so the printig would looki nice\"\"\"\n        return 0;\n    # print \" \",\n    print '  '+'+---' * len(s) +'+'\n    print ' ',\n    for letter in s:\n        print '| {}'.format(letter),\n    print '|'\n    print \" \",; print '+---' * len(s) +'+'\n\n    print \" \",\n    for letter in range(len(s) +1):\n        print '{}  '.format(letter),\n    print \"\"\n    for letter in range(-1*(len(s)), 0):\n        print ' {}'.format(letter),\n    print ''\n    print ''\n\n\n    for triada in lista:\n        if len(triada) == 3:\n            if triada[0]==None and triada[1] == None and triada[2] == None:\n                # 000\n                print s+'[   :   :   ]' +' = ', s[triada[0]:triada[1]:triada[2]]\n            elif triada[0] == None and triada[1] == None and triada[2] != None:\n                # 001\n                print s+'[   :   :{0:2d} ]'.format(triada[2], '','') +' = ', s[triada[0]:triada[1]:triada[2]]\n            elif triada[0] == None and triada[1] != None and triada[2] == None:\n                # 010\n                print s+'[   :{0:2d} :   ]'.format(triada[1]) +' = ', s[triada[0]:triada[1]:triada[2]]\n            elif triada[0] == None and triada[1] != None and triada[2] != None:\n                # 011\n                print s+'[   :{0:2d} :{1:2d} ]'.format(triada[1], triada[2]) +' = ', s[triada[0]:triada[1]:triada[2]]\n            elif triada[0] != None and triada[1] == None and triada[2] == None:\n                # 100\n                print s+'[{0:2d} :   :   ]'.format(triada[0]) +' = ', s[triada[0]:triada[1]:triada[2]]\n            elif triada[0] != None and triada[1] == None and triada[2] != None:\n                # 101\n                print s+'[{0:2d} :   :{1:2d} ]'.format(triada[0], triada[2]) +' = ', s[triada[0]:triada[1]:triada[2]]\n            elif triada[0] != None and triada[1] != None and triada[2] == None:\n                # 110\n                print s+'[{0:2d} :{1:2d} :   ]'.format(triada[0], triada[1]) +' = ', s[triada[0]:triada[1]:triada[2]]\n            elif triada[0] != None and triada[1] != None and triada[2] != None:\n                # 111\n                print s+'[{0:2d} :{1:2d} :{2:2d} ]'.format(triada[0], triada[1], triada[2]) +' = ', s[triada[0]:triada[1]:triada[2]]\n\n        elif len(triada) == 2:\n            if triada[0] == None and triada[1] == None:\n                # 00\n                print s+'[   :   ]    ' + ' = ', s[triada[0]:triada[1]]\n            elif triada[0] == None and triada[1] != None:\n                # 01\n                print s+'[   :{0:2d} ]    '.format(triada[1]) + ' = ', s[triada[0]:triada[1]]\n            elif triada[0] != None and triada[1] == None:\n                # 10\n                print s+'[{0:2d} :   ]    '.format(triada[0]) + ' = ', s[triada[0]:triada[1]]\n            elif triada[0] != None and triada[1] != None:\n                # 11\n                print s+'[{0:2d} :{1:2d} ]    '.format(triada[0],triada[1]) + ' = ', s[triada[0]:triada[1]]\n\n        elif len(triada) == 1:\n            print s+'[{0:2d} ]        '.format(triada[0]) + ' = ', s[triada[0]]\n\n\nif __name__ == '__main__':\n    # Change \"s\" to what ever string you like, make it 9 characters for\n    # better representation.\n    s = 'COMPUTERS'\n\n    # add to this list different lists to experement with indexes\n    # to represent ex. s[::], use s[None, None,None], otherwise you get an error\n    # for s[2:] use s[2:None]\n\n    lista = [[4,7],[2,5,2],[-5,1,-1],[4],[-4,-6,-1], [2,-3,1],[2,-3,-1], [None,None,-1],[-5,None],[-5,0,-1],[-5,None,-1],[-1,1,-2]]\n\n    slicegraphical(s, lista)\n \n\n You can run this script and experiment with it, below is some samples that I got from the script. \n\n   +---+---+---+---+---+---+---+---+---+\n  | C | O | M | P | U | T | E | R | S |\n  +---+---+---+---+---+---+---+---+---+\n  0   1   2   3   4   5   6   7   8   9   \n -9  -8  -7  -6  -5  -4  -3  -2  -1 \n\nCOMPUTERS[ 4 : 7 ]     =  UTE\nCOMPUTERS[ 2 : 5 : 2 ] =  MU\nCOMPUTERS[-5 : 1 :-1 ] =  UPM\nCOMPUTERS[ 4 ]         =  U\nCOMPUTERS[-4 :-6 :-1 ] =  TU\nCOMPUTERS[ 2 :-3 : 1 ] =  MPUT\nCOMPUTERS[ 2 :-3 :-1 ] =  \nCOMPUTERS[   :   :-1 ] =  SRETUPMOC\nCOMPUTERS[-5 :   ]     =  UTERS\nCOMPUTERS[-5 : 0 :-1 ] =  UPMO\nCOMPUTERS[-5 :   :-1 ] =  UPMOC\nCOMPUTERS[-1 : 1 :-2 ] =  SEUM\n[Finished in 0.9s]\n \n\n When using a negative step, notice that the answer is shifted to the right by 1. \n    ",
            "date_posted": "2014-10-18 17:40:45Z",
            "upvote": "\r\n            17\r\n        ",
            "accepted": "YES",
            "user": {
                "stack_user_id": "1471004",
                "name": "mahmoh",
                "reputation_score": "792",
                "gold_badges": "1",
                "silver_badges": "8",
                "bronze_badges": "15"
            },
            "answer_comments": []
        },
        {
            "stack_answer_id": "37455246",
            "answer_content": "\r\n My brain seems happy to accept that  lst[start:end]  contains the  start -th item. I might even say that it is a 'natural assumption'. \n\n But occasionally a doubt creeps in and my brain asks for reassurance that it does not contain the  end -th element. \n\n In these moments I rely on this simple theorem: \n\n for any n,    lst = lst[:n] + lst[n:]\n \n\n This pretty property tells me that  lst[start:end]  does not contain the  end -th item because it is in  lst[end:] . \n\n Note that this theorem is true for any  n  at all. For example, you can check that \n\n lst = range(10)\nlst[:-42] + lst[-42:] == lst\n \n\n returns  True . \n    ",
            "date_posted": "2016-05-26 08:16:54Z",
            "upvote": "\r\n            14\r\n        ",
            "accepted": "YES",
            "user": {
                "stack_user_id": "1243435",
                "name": "Robert",
                "reputation_score": "1,476",
                "gold_badges": 0,
                "silver_badges": "16",
                "bronze_badges": "24"
            },
            "answer_comments": []
        },
        {
            "stack_answer_id": "46040689",
            "answer_content": "\r\n In Python, the most basic form for slicing is the following: \n\n l[start:end]\n \n\n where  l  is some collection,  start  is an inclusive index, and  end  is an exclusive index. \n\n In [1]: l = list(range(10))\n\nIn [2]: l[:5] # First five elements\nOut[2]: [0, 1, 2, 3, 4]\n\nIn [3]: l[-5:] # Last five elements\nOut[3]: [5, 6, 7, 8, 9]\n \n\n When slicing from the start, you can omit the zero index, and when slicing to the end, you can omit the final index since it is redundant, so do not be verbose: \n\n In [5]: l[:3] == l[0:3]\nOut[5]: True\n\nIn [6]: l[7:] == l[7:len(l)]\nOut[6]: True\n \n\n Negative integers are useful when doing offsets relative to the end of a collection: \n\n In [7]: l[:-1] # Include all elements but the last one\nOut[7]: [0, 1, 2, 3, 4, 5, 6, 7, 8]\n\nIn [8]: l[-3:] # Take the last three elements\nOut[8]: [7, 8, 9]\n \n\n It is possible to provide indices that are out of bounds when slicing such as: \n\n In [9]: l[:20] # 20 is out of index bounds, and l[20] will raise an IndexError exception\nOut[9]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n\nIn [11]: l[-20:] # -20 is out of index bounds, and l[-20] will raise an IndexError exception\nOut[11]: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n \n\n Keep in mind that the result of slicing a collection is a whole new collection. In addition, when using slice notation in assignments, the length of the slice assignments do not need to be the same. The values before and after the assigned slice will be kept, and the collection will shrink or grow to contain the new values: \n\n In [16]: l[2:6] = list('abc') # Assigning fewer elements than the ones contained in the sliced collection l[2:6]\n\nIn [17]: l\nOut[17]: [0, 1, 'a', 'b', 'c', 6, 7, 8, 9]\n\nIn [18]: l[2:5] = list('hello') # Assigning more elements than the ones contained in the sliced collection l [2:5]\n\nIn [19]: l\nOut[19]: [0, 1, 'h', 'e', 'l', 'l', 'o', 6, 7, 8, 9]\n \n\n If you omit the start and end index, you will make a copy of the collection: \n\n In [14]: l_copy = l[:]\n\nIn [15]: l == l_copy and l is not l_copy\nOut[15]: True\n \n\n If the start and end indexes are omitted when performing an assignment operation, the entire content of the collection will be replaced with a copy of what is referenced: \n\n In [20]: l[:] = list('hello...')\n\nIn [21]: l\nOut[21]: ['h', 'e', 'l', 'l', 'o', '.', '.', '.']\n \n\n Besides basic slicing, it is also possible to apply the following notation: \n\n l[start:end:step]\n \n\n where  l  is a collection,  start  is an inclusive index,  end  is an exclusive index, and  step  is a stride that can be used to take every  nth  item in  l . \n\n In [22]: l = list(range(10))\n\nIn [23]: l[::2] # Take the elements which indexes are even\nOut[23]: [0, 2, 4, 6, 8]\n\nIn [24]: l[1::2] # Take the elements which indexes are odd\nOut[24]: [1, 3, 5, 7, 9]\n \n\n Using  step  provides a useful trick to reverse a collection in Python: \n\n In [25]: l[::-1]\nOut[25]: [9, 8, 7, 6, 5, 4, 3, 2, 1, 0]\n \n\n It is also possible to use negative integers for  step  as the following example: \n\n In[28]:  l[::-2]\nOut[28]: [9, 7, 5, 3, 1]\n \n\n However, using a negative value for  step  could become very confusing. Moreover, in order to be  Pythonic , you should avoid using  start ,  end , and  step  in a single slice. In case this is required, consider doing this in two assignments (one to slice, and the other to stride). \n\n In [29]: l = l[::2] # This step is for striding\n\nIn [30]: l\nOut[30]: [0, 2, 4, 6, 8]\n\nIn [31]: l = l[1:-1] # This step is for slicing\n\nIn [32]: l\nOut[32]: [2, 4, 6]\n \n    ",
            "date_posted": "2019-09-26 08:16:53Z",
            "upvote": "\r\n            13\r\n        ",
            "accepted": "YES",
            "user": {
                "stack_user_id": "63550",
                "name": "Peter Mortensen",
                "reputation_score": "31k",
                "gold_badges": "21",
                "silver_badges": "105",
                "bronze_badges": "126"
            },
            "answer_comments": []
        },
        {
            "stack_answer_id": "49647978",
            "answer_content": "\r\n I want to add one  Hello, World!  example that explains the basics of slices for the very beginners. It helped me a lot. \n\n Let's have a list with six values  ['P', 'Y', 'T', 'H', 'O', 'N'] : \n\n +---+---+---+---+---+---+\n| P | Y | T | H | O | N |\n+---+---+---+---+---+---+\n  0   1   2   3   4   5\n \n\n Now the simplest slices of that list are its sublists. The notation is  [<index>:<index>]  and the key is to read it like this: \n\n [ start cutting before this index : end cutting before this index ]\n \n\n Now if you make a slice  [2:5]  of the list above, this will happen: \n\n         |           |\n+---+---|---+---+---|---+\n| P | Y | T | H | O | N |\n+---+---|---+---+---|---+\n  0   1 | 2   3   4 | 5\n \n\n You made a cut  before  the element with index  2  and another cut  before  the element with index  5 . So the result will be a slice between those two cuts, a list  ['T', 'H', 'O'] . \n    ",
            "date_posted": "2019-09-26 08:23:54Z",
            "upvote": "\r\n            12\r\n        ",
            "accepted": "YES",
            "user": {
                "stack_user_id": "63550",
                "name": "Peter Mortensen",
                "reputation_score": "31k",
                "gold_badges": "21",
                "silver_badges": "105",
                "bronze_badges": "126"
            },
            "answer_comments": []
        },
        {
            "stack_answer_id": "46614773",
            "answer_content": "\r\n Most of the previous answers clears up questions about slice notation. \n\n The extended indexing syntax used for slicing is  aList[start:stop:step] , and basic examples are: \n\n : \n\n More slicing examples:  15 Extended Slices \n    ",
            "date_posted": "2019-09-26 08:19:02Z",
            "upvote": "\r\n            11\r\n        ",
            "accepted": "YES",
            "user": {
                "stack_user_id": "63550",
                "name": "Peter Mortensen",
                "reputation_score": "31k",
                "gold_badges": "21",
                "silver_badges": "105",
                "bronze_badges": "126"
            },
            "answer_comments": []
        },
        {
            "stack_answer_id": "45370737",
            "answer_content": "\r\n The below is the example of an index of a string: \n\n  +---+---+---+---+---+\n | H | e | l | p | A |\n +---+---+---+---+---+\n 0   1   2   3   4   5\n-5  -4  -3  -2  -1\n\nstr=\"Name string\"\n \n\n Slicing example: [start:end:step] \n\n str[start:end] # Items start through end-1\nstr[start:]    # Items start through the rest of the array\nstr[:end]      # Items from the beginning through end-1\nstr[:]         # A copy of the whole array\n \n\n Below is the example usage: \n\n print str[0] = N\nprint str[0:2] = Na\nprint str[0:7] = Name st\nprint str[0:7:2] = Nm t\nprint str[0:-1:2] = Nm ti\n \n    ",
            "date_posted": "2019-09-26 08:10:54Z",
            "upvote": "\r\n            9\r\n        ",
            "accepted": "YES",
            "user": {
                "stack_user_id": "63550",
                "name": "Peter Mortensen",
                "reputation_score": "31k",
                "gold_badges": "21",
                "silver_badges": "105",
                "bronze_badges": "126"
            },
            "answer_comments": []
        },
        {
            "stack_answer_id": "47880987",
            "answer_content": "\r\n If you feel negative indices in slicing is confusing, here's a very easy way to think about it: just replace the negative index with  len - index . So for example, replace -3 with  len(list) - 3 . \n\n The best way to illustrate what slicing does internally is just show it in code that implements this operation: \n\n def slice(list, start = None, end = None, step = 1):\n  # Take care of missing start/end parameters\n  start = 0 if start is None else start\n  end = len(list) if end is None else end\n\n  # Take care of negative start/end parameters\n  start = len(list) + start if start < 0 else start\n  end = len(list) + end if end < 0 else end\n\n  # Now just execute a for-loop with start, end and step\n  return [list[i] for i in range(start, end, step)]\n \n    ",
            "date_posted": "2019-09-26 08:22:50Z",
            "upvote": "\r\n            8\r\n        ",
            "accepted": "YES",
            "user": {
                "stack_user_id": "63550",
                "name": "Peter Mortensen",
                "reputation_score": "31k",
                "gold_badges": "21",
                "silver_badges": "105",
                "bronze_badges": "126"
            },
            "answer_comments": []
        },
        {
            "stack_answer_id": "56332104",
            "answer_content": "\r\n I don't think that the  Python tutorial  diagram (cited in various other answers) is good as this suggestion works for positive stride, but does not for a negative stride. \n\n This is the diagram: \n\n  +---+---+---+---+---+---+\n | P | y | t | h | o | n |\n +---+---+---+---+---+---+\n 0   1   2   3   4   5   6\n-6  -5  -4  -3  -2  -1\n\n \n\n From the diagram, I expect  a[-4,-6,-1]  to be  yP  but it is  ty . \n\n >>> a = \"Python\"\n>>> a[2:4:1] # as expected\n'th'\n>>> a[-4:-6:-1] # off by 1\n'ty'\n \n\n What always work is to think in characters or slots and use indexing as a half-open interval -- right-open if positive stride, left-open if negative stride. \n\n This way, I can think of  a[-4:-6:-1]  as  a(-6,-4]  in interval terminology. \n\n  +---+---+---+---+---+---+\n | P | y | t | h | o | n |\n +---+---+---+---+---+---+\n   0   1   2   3   4   5  \n  -6  -5  -4  -3  -2  -1\n\n +---+---+---+---+---+---+---+---+---+---+---+---+\n | P | y | t | h | o | n | P | y | t | h | o | n |\n +---+---+---+---+---+---+---+---+---+---+---+---+\n  -6  -5  -4  -3  -2  -1   0   1   2   3   4   5  \n \n    ",
            "date_posted": "2019-05-27 20:25:41Z",
            "upvote": "\r\n            7\r\n        ",
            "accepted": "YES",
            "user": {
                "stack_user_id": "2343869",
                "name": "aguadopd",
                "reputation_score": "543",
                "gold_badges": 0,
                "silver_badges": "8",
                "bronze_badges": "16"
            },
            "answer_comments": [
                {
                    "stack_answer_id": "56332104",
                    "stack_answer_comment_id": "120967561",
                    "comment_content": "Used today 2021/07/19 by myself, qu\u00e9 capo aguadopd del pasado",
                    "username": "aguadopd"
                },
                {
                    "stack_answer_id": "56332104",
                    "stack_answer_comment_id": "124872981",
                    "comment_content": "As a newbie, this is an interesting way of thinking about it.  However, the last example, counting from -6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5 is a bit misleading because the string is NOT doubled like that.  Furthermore, one can refer to the positive and negate positions like the following: a[-4:-6:-1] is the same as a[-4:0:-1] since the 0th position is the same as the -6th position.  So I would just delete/ignore that example.",
                    "username": "CoolHandLouis"
                }
            ]
        }
    ],
    "user": {
        "stack_user_id": "523612",
        "name": "Karl Knechtel",
        "reputation_score": "61k",
        "gold_badges": "11",
        "silver_badges": "97",
        "bronze_badges": "144"
    },
    "question_comments": []
}
{
    "stack_question_id": "76085836",
    "question_title": "Spyder very slow in debug mode",
    "question_content": "\r\n                Python 3.10.6, Spyder 5.4.3\nthe slow-down is about 20x.  this is a new, clean stand-alone install; details below.  I can't find anything online reporting this issue, any insights would be appreciated.\n...\r\n            ",
    "question_url": "/questions/76085836/spyder-very-slow-in-debug-mode",
    "date_posted": "2023-04-23 15:52:41Z",
    "upvote": "0",
    "view": "11",
    "tags": [
        "python",
        "spyder"
    ],
    "answers_count": "1",
    "answers": [
        {
            "stack_answer_id": "76086238",
            "answer_content": "\r\n These kinds of performance hits are expected when using a debugger. You'll find that this is the case regardless of your text editor, programming language, or debugging tool. The slower performance happens because the debugger needs to monitor the behaviour of the running program so that it can be paused and inspected as required, which requires additional checks between operations, and also means that the compiler cannot perform as many code optimisations (since they would break the debugger). \n    ",
            "date_posted": "2023-04-23 17:20:45Z",
            "upvote": "\r\n            0\r\n        ",
            "accepted": "YES",
            "user": {
                "stack_user_id": "6335363",
                "name": "Miguel Guthridge",
                "reputation_score": "1,130",
                "gold_badges": 0,
                "silver_badges": "8",
                "bronze_badges": "23"
            },
            "answer_comments": [
                {
                    "stack_answer_id": "76086238",
                    "stack_answer_comment_id": "134185475",
                    "comment_content": "thank you for responding, but that is not correct in this case (or in general; some slowdown sure, but nothing dramatic).  Earlier versions performed with no noticeable slow down.  There is something specific here.",
                    "username": "Henry"
                }
            ]
        }
    ],
    "user": {
        "stack_user_id": "11499548",
        "name": "Henry",
        "reputation_score": "180",
        "gold_badges": 0,
        "silver_badges": 0,
        "bronze_badges": "8"
    },
    "question_comments": []
}
{
    "stack_question_id": "76085938",
    "question_title": "How to actively take data being written to a csv file and show it in google sheets?",
    "question_content": "\r\n                I have all the code to take data from my sense hat and write it to a file. I want that data to be collected by the sense hat, and in the simplest way be able to view that CSV file on my phone.\nI'm ...\r\n            ",
    "question_url": "/questions/76085938/how-to-actively-take-data-being-written-to-a-csv-file-and-show-it-in-google-shee",
    "date_posted": "2023-04-23 16:15:35Z",
    "upvote": "0",
    "view": "16",
    "tags": [
        "python",
        "csv",
        "google-sheets",
        "raspberry-pi"
    ],
    "answers_count": "0",
    "answers": [],
    "user": {
        "stack_user_id": "17350974",
        "name": "speedee_doge",
        "reputation_score": "25",
        "gold_badges": 0,
        "silver_badges": 0,
        "bronze_badges": "5"
    },
    "question_comments": [
        {
            "stack_question_id": "76085938",
            "stack_question_comment_id": "134184796",
            "comment_content": "The code is so poorly formatted it is difficult to see what it is doing. I could make some guesses about what it should look like, but I would rather not. Clean up the formatting to get something understandable. Suggestion use the ",
            "username": "Adrian Klaver"
        },
        {
            "stack_question_id": "76085938",
            "stack_question_comment_id": "134185039",
            "comment_content": "Did I fix it? Or no?",
            "username": "speedee_doge"
        },
        {
            "stack_question_id": "76085938",
            "stack_question_comment_id": "134185307",
            "comment_content": "Yes that is better. Does this code produce the CSV you want?",
            "username": "Adrian Klaver"
        }
    ]
}
{
    "stack_question_id": "76085934",
    "question_title": "How to get rid of ssl.SSLCertVerificationError in Python 3.11.3",
    "question_content": "\r\n                I am currently working through the Python for Data Sciences course on IBM's Cognitive Class, and just started the lesson on APIs. The lesson wants me to use the RandomUser API, but whenever I try and ...\r\n            ",
    "question_url": "/questions/76085934/how-to-get-rid-of-ssl-sslcertverificationerror-in-python-3-11-3",
    "date_posted": "2023-04-23 16:14:42Z",
    "upvote": "0",
    "view": "6",
    "tags": [
        "python",
        "python-3.x",
        "openssl",
        "ibm-watson",
        "libressl"
    ],
    "answers_count": "0",
    "answers": [],
    "user": {
        "stack_user_id": "21715146",
        "name": "Alex H",
        "reputation_score": "1",
        "gold_badges": 0,
        "silver_badges": 0,
        "bronze_badges": "1"
    },
    "question_comments": []
}
{
    "stack_question_id": "76085946",
    "question_title": "Problem training a TensorFlow model for captchas with LSTM",
    "question_content": "\r\n                I have a problem with this TensorFlow model and I don't know what to do to make it accept the data correctly and start working.\nThis is a model intended to respond to captchas, but it is not working ...\r\n            ",
    "question_url": "/questions/76085946/problem-training-a-tensorflow-model-for-captchas-with-lstm",
    "date_posted": "2023-04-23 16:16:15Z",
    "upvote": "0",
    "view": "10",
    "tags": [
        "python",
        "tensorflow"
    ],
    "answers_count": "0",
    "answers": [],
    "user": {
        "stack_user_id": "19762692",
        "name": "antoniobueno",
        "reputation_score": "1",
        "gold_badges": 0,
        "silver_badges": 0,
        "bronze_badges": "1"
    },
    "question_comments": [
        {
            "stack_question_id": "76085946",
            "stack_question_comment_id": "134185347",
            "comment_content": "Please rewrite your question and provide the error message you're getting.",
            "username": "Laassairi Abdellah"
        },
        {
            "stack_question_id": "76085946",
            "stack_question_comment_id": "134185400",
            "comment_content": "Thank you very much already, I didn't realize that I had set up the question display incorrectly on the page",
            "username": "antoniobueno"
        }
    ]
}
{
    "stack_question_id": "76085813",
    "question_title": "ValueError: Failed to convert a NumPy array to a Tensor (Unsupported object type NoneType)",
    "question_content": "\r\n                I am working on my project of Sign Language Recognition after completely training my model I just need to run real time detection but there comes an error.\nI'm taking the help from the TUTORIAL :-\n\n...\r\n            ",
    "question_url": "/questions/76085813/valueerror-failed-to-convert-a-numpy-array-to-a-tensor-unsupported-object-type",
    "date_posted": "2023-04-23 15:47:09Z",
    "upvote": "0",
    "view": "6",
    "tags": [
        "python",
        "object-detection",
        "numpy-ndarray",
        "tensor",
        "mediapipe"
    ],
    "answers_count": "0",
    "answers": [],
    "user": {
        "stack_user_id": "17064460",
        "name": "ABHISHEK SINGH",
        "reputation_score": "1",
        "gold_badges": 0,
        "silver_badges": 0,
        "bronze_badges": 0
    },
    "question_comments": []
}
{
    "stack_question_id": "76085749",
    "question_title": "How to replace values between to dataframes using for loops and date range",
    "question_content": "\r\n                **I'm new to python language and need help replacing/filling values in df2 based on df1 dataframe inputs:\nBelow is a description for the both Dataframes**:\n<df1>\nThe table contains employee code ...\r\n            ",
    "question_url": "/questions/76085749/how-to-replace-values-between-to-dataframes-using-for-loops-and-date-range",
    "date_posted": "2023-04-23 15:34:08Z",
    "upvote": "2",
    "view": "26",
    "tags": [
        "python",
        "pandas"
    ],
    "answers_count": "2",
    "answers": [
        {
            "stack_answer_id": "76085845",
            "answer_content": "\r\n IIUC, you can use  pivot_table  : \n df2 = (df1.assign(date_rng= df1.apply(lambda x: \n             pd.date_range(start=x[\"Start\"], end=x[\"End\"]).tolist(), axis=1))\n          .explode(\"date_rng\").reset_index().pivot_table(\n             index=\"code\", columns=\"date_rng\", values=\"entry_type\", aggfunc=\"first\")\n          .rename_axis(index=None)\n)\n \n \u200b\nOutput : \n print(df2)\n\ndate_rng 2022-12-12 2022-12-13 2022-12-14  ... 2023-03-15 2023-03-16 2023-03-19\n11111             M          M          M  ...          V          V          T\n11112           NaN        NaN        NaN  ...        NaN        NaN        NaN\n11113           NaN        NaN        NaN  ...        NaN        NaN        NaN\n11114           NaN        NaN        NaN  ...        NaN        NaN        NaN\n\n[4 rows x 85 columns]\n \n Input used ( df1)  : \n df1 = pd.DataFrame(\n    {'Start': {11111: '2023-03-19',\n      11114: '2023-03-10',\n      11113: '2023-02-15',\n      11112: '2023-02-26'},\n      'End': {11111: '2023-03-19',\n      11114: '2023-03-10',\n      11113: '2023-02-15',\n      11112: '2023-02-26'},\n     'entry_type': {11111: 'T', 11114: 'T', 11113: 'S', 11112: 'V'}}\n)\n \n    ",
            "date_posted": "2023-04-23 16:13:51Z",
            "upvote": "\r\n            1\r\n        ",
            "accepted": "YES",
            "user": {
                "stack_user_id": "16120011",
                "name": "Timeless",
                "reputation_score": "14.9k",
                "gold_badges": "3",
                "silver_badges": "8",
                "bronze_badges": "25"
            },
            "answer_comments": [
                {
                    "stack_answer_id": "76085845",
                    "stack_answer_comment_id": "134184550",
                    "comment_content": "Thank you very much for the fast reply. the code works but how can fill all the days in between with the same entry value. for example employee code 11111 has an entry of 'M' that starts on 2022-12-12 and ends on 2023-02-20.",
                    "username": "Sami"
                },
                {
                    "stack_answer_id": "76085845",
                    "stack_answer_comment_id": "134184648",
                    "comment_content": "I updated my answer, can you check it out ?",
                    "username": "Timeless"
                },
                {
                    "stack_answer_id": "76085845",
                    "stack_answer_comment_id": "134184691",
                    "comment_content": "Many Thanks Timeless for your help, it's reflecting all days now that is in between.",
                    "username": "Sami"
                },
                {
                    "stack_answer_id": "76085845",
                    "stack_answer_comment_id": "134184711",
                    "comment_content": "If you need all the dates (",
                    "username": "Timeless"
                },
                {
                    "stack_answer_id": "76085845",
                    "stack_answer_comment_id": "134184795",
                    "comment_content": "Thanks Timeless for the last adjustment both codes are very helpful in solving the problem.",
                    "username": "Sami"
                }
            ]
        },
        {
            "stack_answer_id": "76085949",
            "answer_content": "\r\n One option using  repeat  with the number of days between start and end to efficiently create all the dates, and  pivot_table  to reshape: \n df1['Start'] = pd.to_datetime(df1['Start'])\ndf1['End'] = pd.to_datetime(df1['End'])\n\ntmp = df1.reset_index()\n\nout = (\n tmp.loc[tmp.index.repeat(df1['End'].sub(df1['Start']).dt.days.add(1))]\n    .assign(date=lambda d: d['Start'].add(pd.to_timedelta(d.groupby(level=0).cumcount(), unit='D')))\n    .pivot_table(index='Code', columns='date', values='entry_type', aggfunc='first')\n    .reindex(columns=pd.date_range(start=df1['Start'].min(), end=df1['End'].max(), freq='D'))\n)\n \n Output: \n       2022-12-12 2022-12-13 2022-12-14 2022-12-15 2022-12-16 2022-12-17  \\\nCode                                                                      \n11111          M          M          M          M          M          M   \n11112        NaN        NaN        NaN        NaN        NaN        NaN   \n11113        NaN        NaN        NaN        NaN        NaN        NaN   \n11114        NaN        NaN        NaN        NaN        NaN        NaN   \n\n      2022-12-18 2022-12-19 2022-12-20 2022-12-21  ... 2023-03-10 2023-03-11  \\\nCode                                               ...                         \n11111          M          M          M          M  ...          V          V   \n11112        NaN        NaN        NaN        NaN  ...        NaN        NaN   \n11113        NaN        NaN        NaN        NaN  ...        NaN        NaN   \n11114        NaN        NaN        NaN        NaN  ...          T          T   \n\n      2023-03-12 2023-03-13 2023-03-14 2023-03-15 2023-03-16 2023-03-17  \\\nCode                                                                      \n11111          V          V          V          V          V        NaN   \n11112        NaN        NaN        NaN        NaN        NaN        NaN   \n11113        NaN        NaN        NaN        NaN        NaN        NaN   \n11114          T        NaN        NaN        NaN        NaN        NaN   \n\n      2023-03-18 2023-03-19  \nCode                         \n11111        NaN          T  \n11112        NaN        NaN  \n11113        NaN        NaN  \n11114        NaN        NaN  \n\n[4 rows x 98 columns]\n \n    ",
            "date_posted": "2023-04-23 16:16:41Z",
            "upvote": "\r\n            0\r\n        ",
            "accepted": "YES",
            "user": {
                "stack_user_id": "16343464",
                "name": "mozway",
                "reputation_score": "171k",
                "gold_badges": "12",
                "silver_badges": "31",
                "bronze_badges": "72"
            },
            "answer_comments": [
                {
                    "stack_answer_id": "76085949",
                    "stack_answer_comment_id": "134184744",
                    "comment_content": "Thanks mozway, this code covers the requirement as well reflecting the missing days which has no entries. this is bonus point for me. appreciate your help.",
                    "username": "Sami"
                }
            ]
        }
    ],
    "user": {
        "stack_user_id": "19089105",
        "name": "Sami",
        "reputation_score": "21",
        "gold_badges": 0,
        "silver_badges": 0,
        "bronze_badges": "2"
    },
    "question_comments": [
        {
            "stack_question_id": "76085749",
            "stack_question_comment_id": "134184345",
            "comment_content": "Is this homework?",
            "username": "nicomp"
        },
        {
            "stack_question_id": "76085749",
            "stack_question_comment_id": "134184391",
            "comment_content": "No I'm trying to automate a task, and i'm new to coding,  my back ground mostly excel..",
            "username": "Sami"
        },
        {
            "stack_question_id": "76085749",
            "stack_question_comment_id": "134184698",
            "comment_content": "for 11114/2023-03-10 you have twice the entry_type ",
            "username": "mozway"
        }
    ]
}
{
    "stack_question_id": "76085966",
    "question_title": "Texture mapping for cylinder in OpenGL [duplicate]",
    "question_content": "\r\n                I have drawn a cylinder and want to add texture to it. This is what I have done so far. \ncylinder.py:\n# draw_cylinder(r: radius, h: height, n: num_slices)\ndef draw_cylinder(r, h, n):\n    global ...\r\n            ",
    "question_url": "/questions/76085966/texture-mapping-for-cylinder-in-opengl",
    "date_posted": "2023-04-23 16:20:54Z",
    "upvote": "-2",
    "view": "10",
    "tags": [
        "python",
        "math",
        "opengl",
        "texture-mapping",
        "coordinate-transformation"
    ],
    "answers_count": "0",
    "answers": [],
    "user": {
        "stack_user_id": "277176",
        "name": "Yakov Galka",
        "reputation_score": "69.9k",
        "gold_badges": "16",
        "silver_badges": "137",
        "bronze_badges": "220"
    },
    "question_comments": [
        {
            "stack_question_id": "76085966",
            "stack_question_comment_id": "134181482",
            "comment_content": "You can convert [-1,1] coordinates to [0,1] coordinates by adding 1 and then dividing by 2.",
            "username": "Simon Goater"
        },
        {
            "stack_question_id": "76085966",
            "stack_question_comment_id": "134184586",
            "comment_content": "@SimonGoater Thanks man, I appreciate your help.",
            "username": "GiangHoGoVap"
        }
    ]
}
{
    "stack_question_id": "76085762",
    "question_title": "Generate right stereoscopic image from depth map",
    "question_content": "\r\n                I have an image and a depth map in grey. I would like to generate the right view in python to create a stereoscopic image. I'm using cv2.remap, but it gives me an error.\ncv2.error: OpenCV(4.7.0) D:\\a\\...\r\n            ",
    "question_url": "/questions/76085762/generate-right-stereoscopic-image-from-depth-map",
    "date_posted": "2023-04-23 15:36:06Z",
    "upvote": "-1",
    "view": "9",
    "tags": [
        "python"
    ],
    "answers_count": "0",
    "answers": [],
    "user": {
        "stack_user_id": "4869434",
        "name": "Cedvano",
        "reputation_score": "1",
        "gold_badges": 0,
        "silver_badges": 0,
        "bronze_badges": "1"
    },
    "question_comments": []
}
{
    "stack_question_id": "76085829",
    "question_title": "Good afternoon. I am writing the simplest bot for Telegrams. Can you tell me what the problem is?",
    "question_content": "\r\n                Good afternoon, I'm writing the simplest bot for Telegram, an error occurs at the moment of launching the bot, tell me where I'm wrong or maybe the code is outdated?\nError:\nupdater = Updater(token=...\r\n            ",
    "question_url": "/questions/76085829/good-afternoon-i-am-writing-the-simplest-bot-for-telegrams-can-you-tell-me-wha",
    "date_posted": "2023-04-23 15:51:38Z",
    "upvote": "0",
    "view": "13",
    "tags": [
        "python"
    ],
    "answers_count": "0",
    "answers": [],
    "user": {
        "stack_user_id": "21714694",
        "name": "YURII S",
        "reputation_score": "1",
        "gold_badges": 0,
        "silver_badges": 0,
        "bronze_badges": 0
    },
    "question_comments": [
        {
            "stack_question_id": "76085829",
            "stack_question_comment_id": "134184500",
            "comment_content": "What version of the library are you using? Check out : ",
            "username": "JonSG"
        },
        {
            "stack_question_id": "76085829",
            "stack_question_comment_id": "134184546",
            "comment_content": "ver. python-telegram-bot 20.2",
            "username": "YURII S"
        },
        {
            "stack_question_id": "76085829",
            "stack_question_comment_id": "134185264",
            "comment_content": "The error is telling you that Updater doesn\u2019t expect a token argument.",
            "username": "Samwise"
        }
    ]
}
{
    "stack_question_id": "76085808",
    "question_title": "How do I embed a python program into a HTML file",
    "question_content": "\r\n                So I looked at another question and tried my best to copy it, but it didn't work when I ran the code. I expected it to print Hello World But it didn't. Please help Here is the code. The code works on ...\r\n            ",
    "question_url": "/questions/76085808/how-do-i-embed-a-python-program-into-a-html-file",
    "date_posted": "2023-04-23 15:45:59Z",
    "upvote": "0",
    "view": "19",
    "tags": [
        "python",
        "html"
    ],
    "answers_count": "0",
    "answers": [],
    "user": {
        "stack_user_id": "18851688",
        "name": "SK4K4S",
        "reputation_score": "11",
        "gold_badges": 0,
        "silver_badges": 0,
        "bronze_badges": "4"
    },
    "question_comments": [
        {
            "stack_question_id": "76085808",
            "stack_question_comment_id": "134184430",
            "comment_content": "Do you get an error?",
            "username": "JonSG"
        },
        {
            "stack_question_id": "76085808",
            "stack_question_comment_id": "134184441",
            "comment_content": "No it just doesn't work",
            "username": "SK4K4S"
        },
        {
            "stack_question_id": "76085808",
            "stack_question_comment_id": "134185200",
            "comment_content": "How are you running the code? Did you open the HTML file in a web browser? When I load this on my machine it works perfectly,",
            "username": "Miguel Guthridge"
        }
    ]
}
{
    "stack_question_id": "76085802",
    "question_title": "how to make a ball bounce off a paddle [duplicate]",
    "question_content": "\r\n                I'm relatively new to python and pygame, and am trying to make a breakout clone. I made a moving paddle and a moving ball that bounces around the edges, but the code that makes the ball bounce off the ...\r\n            ",
    "question_url": "/questions/76085802/how-to-make-a-ball-bounce-off-a-paddle",
    "date_posted": "2023-04-23 15:44:27Z",
    "upvote": "-1",
    "view": "15",
    "tags": [
        "python",
        "pygame"
    ],
    "answers_count": "0",
    "answers": [],
    "user": {
        "stack_user_id": "21650475",
        "name": "Thomas M",
        "reputation_score": "1",
        "gold_badges": 0,
        "silver_badges": 0,
        "bronze_badges": "1"
    },
    "question_comments": [
        {
            "stack_question_id": "76085802",
            "stack_question_comment_id": "134184396",
            "comment_content": "what is ",
            "username": "Marcin Orlowski"
        }
    ]
}
{
    "stack_question_id": "76085850",
    "question_title": "Uploading a Text File to Azure Blob with Python - Local Variable in Byte Format Error",
    "question_content": "\r\n                I'm currently working on a project where I need to upload a local text file to an Azure Blob using Python. I wrote the following code to accomplish this:\ndef upload_blob(self, file_name, ...\r\n            ",
    "question_url": "/questions/76085850/uploading-a-text-file-to-azure-blob-with-python-local-variable-in-byte-format",
    "date_posted": "2023-04-23 15:55:48Z",
    "upvote": "0",
    "view": "14",
    "tags": [
        "python",
        "azure",
        "file-upload"
    ],
    "answers_count": "0",
    "answers": [],
    "user": {
        "stack_user_id": "3593301",
        "name": "Shadiqur",
        "reputation_score": "490",
        "gold_badges": "1",
        "silver_badges": "5",
        "bronze_badges": "18"
    },
    "question_comments": []
}
{
    "stack_question_id": "76085789",
    "question_title": "How to loop through the values of the dictionaries which are nested as values in a json file?",
    "question_content": "\r\n                I'm trying to loop through the values of \"Location\" key in the dictionaries of the following json file and find the number of entries for a specific location. How could I do that? My loop ...\r\n            ",
    "question_url": "/questions/76085789/how-to-loop-through-the-values-of-the-dictionaries-which-are-nested-as-values-in",
    "date_posted": "2023-04-23 15:42:16Z",
    "upvote": "1",
    "view": "14",
    "tags": [
        "python",
        "json",
        "api",
        "dictionary",
        "nested-loops"
    ],
    "answers_count": "1",
    "answers": [
        {
            "stack_answer_id": "76085825",
            "answer_content": "\r\n Remove the  [\"jobs\"]  from the for-loop. You have list of dictionaries so don't use string as an index: \n import requests\n\n\ndef count_jobs_by_location(location):\n    api_url = \"https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBM-DA0321EN-SkillsNetwork/labs/module%201/Accessing%20Data%20Using%20APIs/jobs.json\"\n    response = requests.get(api_url)\n    if response.ok:\n        data = response.json()\n        count = 0\n        for job in data: # <-- remove [\"jobs\"] here!\n            if job[\"Location\"].lower() == location.lower():\n                count += 1\n        return count\n\nprint(count_jobs_by_location(\"Los Angeles\"))\n \n Prints: \n 640\n \n    ",
            "date_posted": "2023-04-23 15:50:09Z",
            "upvote": "\r\n            0\r\n        ",
            "accepted": "YES",
            "user": {
                "stack_user_id": "10035985",
                "name": "Andrej Kesely",
                "reputation_score": "157k",
                "gold_badges": "14",
                "silver_badges": "48",
                "bronze_badges": "90"
            },
            "answer_comments": []
        }
    ],
    "user": {
        "stack_user_id": "20225383",
        "name": "Chris Chatz",
        "reputation_score": "11",
        "gold_badges": 0,
        "silver_badges": 0,
        "bronze_badges": "2"
    },
    "question_comments": []
}
{
    "stack_question_id": "76085793",
    "question_title": "I cannot run python runtests.py -v for testing numpy it giving me version issue",
    "question_content": "\r\n                I want to run  test for numpy library in my local machine but when I simple testing command\nlike  this command\npython runtests.py -v\r\nI am keep getting following error\n`\nBuilding, see build.log...\n...\r\n            ",
    "question_url": "/questions/76085793/i-cannot-run-python-runtests-py-v-for-testing-numpy-it-giving-me-version-issue",
    "date_posted": "2023-04-23 15:42:57Z",
    "upvote": "0",
    "view": "4",
    "tags": [
        "python",
        "numpy",
        "numpy-ndarray",
        "numpy-slicing",
        "numpy-ufunc"
    ],
    "answers_count": "0",
    "answers": [],
    "user": {
        "stack_user_id": "11083250",
        "name": "Ishaque3 Nizamani",
        "reputation_score": "41",
        "gold_badges": 0,
        "silver_badges": 0,
        "bronze_badges": "2"
    },
    "question_comments": []
}
{
    "stack_question_id": "76085700",
    "question_title": "Do list comprehension have side effect?",
    "question_content": "\r\n                I want to write a preorder recursion of a tree in python. I can use for statement, but if I use list comprehension, I hope to achieve the recursive effect through its side effects, why it doesn't?\n...\r\n            ",
    "question_url": "/questions/76085700/do-list-comprehension-have-side-effect",
    "date_posted": "2023-04-23 15:23:30Z",
    "upvote": "-1",
    "view": "40",
    "tags": [
        "python",
        "tree"
    ],
    "answers_count": "1",
    "answers": [
        {
            "stack_answer_id": "76085922",
            "answer_content": "\r\n Thankyou for everyone on the comment.\nHere i know \n (expression for item in Sequence )\n \n is a gernerator comperhension, which returns a generator, if i did't call it,(iterate over it), it will do nothing.\nbut list comprehension as below creats a list but also have side-effect: \n [expression for item in Sequence]\n \n to make the  ()  work, i can: \n def preorder(t):\n    ret = [label(t)]\n    a = (ret.extend(preorder(b)) for b in branches(t))\n    for _ in a:\n        continue\n    return ret\n \n This will give me the right answer as well as: \n def preorder(t):\n    ret = [label(t)]\n    [ret.extend(preorder(b)) for b in branches(t)]\n    return ret\n \n Nevertheless, it is not a good way to rely on the side-effect of a list comprehension, to see detail:\n Is it Pythonic to use list comprehensions for just side effects? \n    ",
            "date_posted": "2023-04-23 16:11:56Z",
            "upvote": "\r\n            0\r\n        ",
            "accepted": "YES",
            "user": {
                "stack_user_id": "21713631",
                "name": "Callum Ethan",
                "reputation_score": "1",
                "gold_badges": 0,
                "silver_badges": 0,
                "bronze_badges": "1"
            },
            "answer_comments": []
        }
    ],
    "user": {
        "stack_user_id": "21713631",
        "name": "Callum Ethan",
        "reputation_score": "1",
        "gold_badges": 0,
        "silver_badges": 0,
        "bronze_badges": "1"
    },
    "question_comments": [
        {
            "stack_question_id": "76085700",
            "stack_question_comment_id": "134184247",
            "comment_content": "What is ",
            "username": "slothrop"
        },
        {
            "stack_question_id": "76085700",
            "stack_question_comment_id": "134184281",
            "comment_content": "It looks like your first two snippets should be equivalent (assuming there is no indentation error in the first). How do you know that the second ",
            "username": "quamrana"
        },
        {
            "stack_question_id": "76085700",
            "stack_question_comment_id": "134184295",
            "comment_content": "Although it's considered a bad idea to use listcomps for their side effect (",
            "username": "slothrop"
        },
        {
            "stack_question_id": "76085700",
            "stack_question_comment_id": "134184358",
            "comment_content": "I get the same result with both versions.",
            "username": "quamrana"
        },
        {
            "stack_question_id": "76085700",
            "stack_question_comment_id": "134184375",
            "comment_content": "Strictly speaking, list comprehensions do not have a side effect; it's ",
            "username": "chepner"
        }
    ]
}
{
    "stack_question_id": "76085734",
    "question_title": "Regex not retuning the expected results",
    "question_content": "\r\n                I have a problem where I am using some regular expression patterns to identify key themes in my \"Feedback\" column.\nI am using the following code:\n# creating regex patterns\npattern1 = re....\r\n            ",
    "question_url": "/questions/76085734/regex-not-retuning-the-expected-results",
    "date_posted": "2023-04-23 15:31:34Z",
    "upvote": "1",
    "view": "32",
    "tags": [
        "python",
        "pandas"
    ],
    "answers_count": "2",
    "answers": [
        {
            "stack_answer_id": "76085969",
            "answer_content": "\r\n I would look at flushing out a list of dictionaries that hold information about each pattern. This list can be sorted by priority (as specified by us) so that the most important patterns are applied first: \n import re\n\n## -----------------------\n# creating regex patterns\n## -----------------------\npattern1 = re.compile(r'respond query|email|fast response|email|response time|responses email slow|long time|longer response|respond quickly email')\npattern2 = re.compile(r'visibility honesty|honesty|transparency timescale|transparency|transparent')\npatterns = sorted(\n    [\n        {\"name\": \"Communication\", \"priority\": 1.0, \"pattern\": pattern1},\n        {\"name\": \"Transparency\", \"priority\": 2.0, \"pattern\": pattern2},\n    ],\n    key=lambda p: p[\"priority\"],\n    reverse=True\n)\n## -----------------------\n\n## -----------------------\n#create a function to use the patterns as input in the next step\n## -----------------------\ndef match_pattern(text):\n    for pattern in patterns:\n        if pattern[\"pattern\"].search(text):\n            return pattern[\"name\"]\n    return ''\n## -----------------------\n\n## -----------------------\n#Applying the function to my column\n## -----------------------\ntext = \"Transparency is required in data but emails are not received on time\"\nprint(match_pattern(text))\n## -----------------------\n \n This gives a result of  \"Communication\" \n    ",
            "date_posted": "2023-04-23 16:44:11Z",
            "upvote": "\r\n            0\r\n        ",
            "accepted": "YES",
            "user": {
                "stack_user_id": "218663",
                "name": "JonSG",
                "reputation_score": "9,461",
                "gold_badges": "2",
                "silver_badges": "25",
                "bronze_badges": "36"
            },
            "answer_comments": [
                {
                    "stack_answer_id": "76085969",
                    "stack_answer_comment_id": "134184845",
                    "comment_content": "But my idea is to use these patterns and dynamically generate the Themes based on the matches I am receiving from my text rather than giving a priority order. I want the order of the words / combination of words in the feedback text to be used to return the requisite Theme based on pattern matching.. Is there a way to do that?",
                    "username": "Django0602"
                },
                {
                    "stack_answer_id": "76085969",
                    "stack_answer_comment_id": "134184897",
                    "comment_content": "Given these patterns what did you want to be returned?  Is pattern1 more important than pattern2? Are the items in each pattern prioritized in some way?",
                    "username": "JonSG"
                },
                {
                    "stack_answer_id": "76085969",
                    "stack_answer_comment_id": "134185018",
                    "comment_content": "Ideally no, the patterns are not prioritized in any way. Assume that these are standalone patterns and when a certain part of feedback text is encountered and the order is completely dependent on the feedback text, the patterns should generate a theme. If this makes sense",
                    "username": "Django0602"
                }
            ]
        },
        {
            "stack_answer_id": "76086196",
            "answer_content": "\r\n Assuming by priority you mean pattern was matched earlier, you'll need to evaluate every pattern and get the one, match for which started earlier. \n It can be done with something like this: \n import re \n# creating regex patterns\npattern1 = re.compile(r'respond query|email|fast response|email|response time|responses email slow|long time|longer response|respond quickly email', re.I)\npattern2 = re.compile(r'visibility honesty|honesty|transparency|transparent', re.I)\n\n# Assigning what should be the theme\npatterns = {\n    pattern1: 'Communication',\n    pattern2: 'Transparency',\n}\n\n#create a function to use the patterns as input in the next step\ndef match_pattern(text):\n    matches = {}\n    for pattern, result in patterns.items():\n        r = pattern.search(text)\n        if r:\n            matches[result] = r.start()\n    if len(matches) == 0:\n        return ''\n    return min(matches, key=matches.get)\n\n\nprint(match_pattern('Transparency is required in data but emails are not received on time'))\n# Transparency\n \n Also notice, that if you can reasonably be sure that your patterns are always lower case, than you should remove  re.I  from  compile , and apply search to  text.lower() . It should increase performance of your script. \n    ",
            "date_posted": "2023-04-23 17:10:13Z",
            "upvote": "\r\n            0\r\n        ",
            "accepted": "YES",
            "user": {
                "stack_user_id": "21363224",
                "name": "markalex",
                "reputation_score": "4,849",
                "gold_badges": "1",
                "silver_badges": "5",
                "bronze_badges": "25"
            },
            "answer_comments": []
        }
    ],
    "user": {
        "stack_user_id": "21363224",
        "name": "markalex",
        "reputation_score": "4,849",
        "gold_badges": "1",
        "silver_badges": "5",
        "bronze_badges": "25"
    },
    "question_comments": [
        {
            "stack_question_id": "76085734",
            "stack_question_comment_id": "134184542",
            "comment_content": "note that you have compiled the pattern twice. If you want to specify a priority then ",
            "username": "JonSG"
        },
        {
            "stack_question_id": "76085734",
            "stack_question_comment_id": "134184565",
            "comment_content": "So how should I resolve this then? Any ideas?",
            "username": "Django0602"
        },
        {
            "stack_question_id": "76085734",
            "stack_question_comment_id": "134184986",
            "comment_content": "Note, that your current attempt doesn't even match transparency, as regexes are case sensitive by default.",
            "username": "markalex"
        },
        {
            "stack_question_id": "76085734",
            "stack_question_comment_id": "134185332",
            "comment_content": "@Django0602, can you share a reproducible example of your column (",
            "username": "Timeless"
        }
    ]
}
{
    "stack_question_id": "76085714",
    "question_title": "How do I add a custom database to this thing i made using the OpenAI API",
    "question_content": "\r\n                i want to add some pdf files as data to ask my chatbot about, not sure how to do it though.\nthis is what i have so far.\nimport openai\n\nopenai.api_key = \"sk-...\r\n            ",
    "question_url": "/questions/76085714/how-do-i-add-a-custom-database-to-this-thing-i-made-using-the-openai-api",
    "date_posted": "2023-04-23 15:26:57Z",
    "upvote": "-2",
    "view": "8",
    "tags": [
        "python",
        "artificial-intelligence",
        "openai-api",
        "langchain",
        "llama-index"
    ],
    "answers_count": "0",
    "answers": [],
    "user": {
        "stack_user_id": "21638140",
        "name": "Jad",
        "reputation_score": "1",
        "gold_badges": 0,
        "silver_badges": 0,
        "bronze_badges": "1"
    },
    "question_comments": []
}
{
    "stack_question_id": "76085720",
    "question_title": "getting this error while doing pca analysis",
    "question_content": "\r\n                import keras\nimport tensorflow as tf\ndata = tf.keras.datasets.mnist.load_data(path=\"mnist.npz\")\nimport numpy as np\n\ndef pca(X):\n    # Normalize the data\n    X_mean = np.mean(X, axis=0)\n    ...\r\n            ",
    "question_url": "/questions/76085720/getting-this-error-while-doing-pca-analysis",
    "date_posted": "2023-04-23 15:28:16Z",
    "upvote": "0",
    "view": "10",
    "tags": [
        "python",
        "pca"
    ],
    "answers_count": "0",
    "answers": [],
    "user": {
        "stack_user_id": "20530450",
        "name": "Mirkan Emir Sancak",
        "reputation_score": "1",
        "gold_badges": 0,
        "silver_badges": 0,
        "bronze_badges": 0
    },
    "question_comments": []
}
{
    "stack_question_id": "76085631",
    "question_title": "I can not see python version in Mac terminal",
    "question_content": "\r\n                I have installed python version 3.11.3 in macOS Ventura 13.3.1 , Python IDLE is showing in launchpad but in terminal it is showing python not found\nI want to see my python version in terminal\r\n            ",
    "question_url": "/questions/76085631/i-can-not-see-python-version-in-mac-terminal",
    "date_posted": "2023-04-23 15:07:53Z",
    "upvote": "0",
    "view": "18",
    "tags": [
        "python",
        "terminal"
    ],
    "answers_count": "0",
    "answers": [],
    "user": {
        "stack_user_id": "21714801",
        "name": "dashyam",
        "reputation_score": "1",
        "gold_badges": 0,
        "silver_badges": 0,
        "bronze_badges": "1"
    },
    "question_comments": [
        {
            "stack_question_id": "76085631",
            "stack_question_comment_id": "134184066",
            "comment_content": "Are you referring to ",
            "username": "ranemirusG"
        },
        {
            "stack_question_id": "76085631",
            "stack_question_comment_id": "134184067",
            "comment_content": "What you see in launchpad may be a dangling reference to something that no longer exists. Is Ventura an upgrade on top of an older OS installation, or a clean install on a new/wiped machine?",
            "username": "chepner"
        },
        {
            "stack_question_id": "76085631",
            "stack_question_comment_id": "134184216",
            "comment_content": "Is Python inside your $PATH?",
            "username": "cconsta1"
        },
        {
            "stack_question_id": "76085631",
            "stack_question_comment_id": "134184757",
            "comment_content": "How did you install Python?",
            "username": "Chris"
        }
    ]
}
{
    "stack_question_id": "76085693",
    "question_title": "Parse Nested JSON in python",
    "question_content": "\r\n                Below is my JSON. I need to get the 'id' value which is nested inside.\n{\n  \"result\": [\n    {\n      \"total\": 142250,\n      \"_id\": \"BC\",\n      \"test\": [\n...\r\n            ",
    "question_url": "/questions/76085693/parse-nested-json-in-python",
    "date_posted": "2023-04-23 15:21:10Z",
    "upvote": "-1",
    "view": "20",
    "tags": [
        "python",
        "for-loop"
    ],
    "answers_count": "1",
    "answers": [
        {
            "stack_answer_id": "76085704",
            "answer_content": "\r\n Your  test  is a  list , not a  dictionary  as your code treats it. \n response = response.replace(\"'\", '\"')\nresponse = json.loads(response)\nfor doc in response['result']:\n    print(doc['_id'], doc['total'])\n    for test_doc in doc['test']:\n       print(test_doc['id'])\n \n    ",
            "date_posted": "2023-04-23 15:24:07Z",
            "upvote": "\r\n            1\r\n        ",
            "accepted": "YES",
            "user": {
                "stack_user_id": "1235698",
                "name": "Marcin Orlowski",
                "reputation_score": "71k",
                "gold_badges": "10",
                "silver_badges": "123",
                "bronze_badges": "141"
            },
            "answer_comments": []
        }
    ],
    "user": {
        "stack_user_id": "21305238",
        "name": "InSync",
        "reputation_score": "2,132",
        "gold_badges": "1",
        "silver_badges": "5",
        "bronze_badges": "23"
    },
    "question_comments": []
}
{
    "stack_question_id": "76085656",
    "question_title": "how do i impliment dijkstra's on a graph with 2 given edge weights with condition to use the other one?",
    "question_content": "\r\n                so i am stuck in a problem where i cannot figure out how to apply dijkstras algorithm to find the shortest distance between A and C when each edge have 2 weights and the second weight (on the right) ...\r\n            ",
    "question_url": "/questions/76085656/how-do-i-impliment-dijkstras-on-a-graph-with-2-given-edge-weights-with-conditio",
    "date_posted": "2023-04-23 15:14:59Z",
    "upvote": "0",
    "view": "22",
    "tags": [
        "python",
        "algorithm",
        "graph-theory",
        "shortest-path",
        "dijkstra"
    ],
    "answers_count": "1",
    "answers": [
        {
            "stack_answer_id": "76085820",
            "answer_content": "\r\n \n Run Dijkstra on the graph using only the first weights.  Path 1 \n Create a second graph \n To 2nd graph add the underlined vertices \n To 2nd graph add edges between underlined vertices using the 2nd weights \n Use Dijkstra to find cheapest path between unconnected underlined vertices in second graph, using 2nd weights.  Add edge with weight set to path weight. \n Run Dijkstra in the 2nd graph.  Path 2 \n Output cheapest of Path 1 and Path 2 \n \n    ",
            "date_posted": "2023-04-23 15:48:37Z",
            "upvote": "\r\n            0\r\n        ",
            "accepted": "YES",
            "user": {
                "stack_user_id": "16582",
                "name": "ravenspoint",
                "reputation_score": "18.5k",
                "gold_badges": "6",
                "silver_badges": "62",
                "bronze_badges": "100"
            },
            "answer_comments": [
                {
                    "stack_answer_id": "76085820",
                    "stack_answer_comment_id": "134184584",
                    "comment_content": "for the first graph should i not include vertex b and e?",
                    "username": "D Fa"
                },
                {
                    "stack_answer_id": "76085820",
                    "stack_answer_comment_id": "134184902",
                    "comment_content": "The first graph is identical to the input graph, except the edges have just one weight.",
                    "username": "ravenspoint"
                }
            ]
        }
    ],
    "user": {
        "stack_user_id": "16582",
        "name": "ravenspoint",
        "reputation_score": "18.5k",
        "gold_badges": "6",
        "silver_badges": "62",
        "bronze_badges": "100"
    },
    "question_comments": [
        {
            "stack_question_id": "76085656",
            "stack_question_comment_id": "134184416",
            "comment_content": "Don't use Dijkstra unless really needed. It is not best as it can traverse cells in opposite direction from your destination which is waste of effort.. ",
            "username": "Marcin Orlowski"
        },
        {
            "stack_question_id": "76085656",
            "stack_question_comment_id": "134184930",
            "comment_content": "@MarcinOrlowski  You are mistaken about Dijsktra.  What do you mean by traversing a cell?  The performance of A* is comaparatively poor and should only be used when complete knowledge of the graph is unavailable.",
            "username": "ravenspoint"
        },
        {
            "stack_question_id": "76085656",
            "stack_question_comment_id": "134184975",
            "comment_content": ": If I promise I will still visit an underlined node, can I use the second weight? Or should I have visited it before using that edge?",
            "username": "trincot"
        },
        {
            "stack_question_id": "76085656",
            "stack_question_comment_id": "134185331",
            "comment_content": "@ravensport: By \"cell\" I was refering to \"node\". And I meant Dijkstra do not use heuristic, which A* introduced, thus is not prioritizing nodes closer to the destination, which A* does",
            "username": "Marcin Orlowski"
        },
        {
            "stack_question_id": "76085656",
            "stack_question_comment_id": "134185482",
            "comment_content": "it needs to be solved using dijkstras specificaly. and we should visit the underlined node before accessing the othe path",
            "username": "D Fa"
        }
    ]
}
{
    "stack_question_id": "76085625",
    "question_title": "Insert error using SQL Alchemy to transfer data from SQL Server to MariaDB",
    "question_content": "\r\n                Using SQL Alchemy, I am trying to move data from a SQL Server table to a MariaDB table. The tables are almost the same, as you can see in this code:\nMariaDB table :\nCREATE TABLE IF NOT EXISTS ...\r\n            ",
    "question_url": "/questions/76085625/insert-error-using-sql-alchemy-to-transfer-data-from-sql-server-to-mariadb",
    "date_posted": "2023-04-23 15:07:32Z",
    "upvote": "1",
    "view": "34",
    "tags": [
        "python",
        "sql",
        "sql-server",
        "sqlalchemy",
        "mariadb"
    ],
    "answers_count": "1",
    "answers": [
        {
            "stack_answer_id": "76085877",
            "answer_content": "\r\n The problem is that the tuple can't contain values of different types. So the solution is to cast everything to string. Like this: \n     customer1 = {\n        'id': '3333',\n        'first_name': 'John',\n        'last_name': 'Doe',\n        'email': 'johndoe@example.com',\n        'phone_number': '555-1234',\n        'address': '123 Main St',\n        'city': 'Anytown',\n        'state': 'CA',\n        'zip_code': '12345',\n        'create_date': str(datetime(2023, 4, 23)),\n        'update_date': str(datetime(2023, 4, 23))\n    }\n\n    maria_conn.execute(customers_maria.insert(), [customer1])\n    maria_conn.commit()\n    maria_conn.close();\n \n The error message was not clear at all :( \n    ",
            "date_posted": "2023-04-23 16:00:13Z",
            "upvote": "\r\n            1\r\n        ",
            "accepted": "YES",
            "user": {
                "stack_user_id": "17936708",
                "name": "Oleg Ivasiv",
                "reputation_score": "71",
                "gold_badges": 0,
                "silver_badges": 0,
                "bronze_badges": "5"
            },
            "answer_comments": []
        }
    ],
    "user": {
        "stack_user_id": "1422451",
        "name": "Parfait",
        "reputation_score": "103k",
        "gold_badges": "17",
        "silver_badges": "95",
        "bronze_badges": "124"
    },
    "question_comments": [
        {
            "stack_question_id": "76085625",
            "stack_question_comment_id": "134184258",
            "comment_content": "Check the contents of ",
            "username": "Parfait"
        },
        {
            "stack_question_id": "76085625",
            "stack_question_comment_id": "134184290",
            "comment_content": "@Parfait, yes, I checked everything. The values I receive are absolutely OK. Also, I tried to insert a hardcoded tuple and I had the same error :(",
            "username": "Oleg Ivasiv"
        },
        {
            "stack_question_id": "76085625",
            "stack_question_comment_id": "134184370",
            "comment_content": "Not sure if your MariaDB ",
            "username": "Parfait"
        },
        {
            "stack_question_id": "76085625",
            "stack_question_comment_id": "134184374",
            "comment_content": "Aside, consider slight revision per this ",
            "username": "Parfait"
        },
        {
            "stack_question_id": "76085625",
            "stack_question_comment_id": "134184503",
            "comment_content": "@Parfait, thank you for your help :). I figured it out.",
            "username": "Oleg Ivasiv"
        }
    ]
}
{
    "stack_question_id": "76085632",
    "question_title": "How to link a cell's value from excel to an image with Python code?",
    "question_content": "\r\n                I have an Excel file with the following format:\r\nName\nRating\nContrast\r\npicture_1\n4\n5\r\npicture_2\n3\n6\r\nMy problem is that I want to link the rating '4' of the picture_1 with the actual picture (a .jpeg ...\r\n            ",
    "question_url": "/questions/76085632/how-to-link-a-cells-value-from-excel-to-an-image-with-python-code",
    "date_posted": "2023-04-23 15:08:15Z",
    "upvote": "1",
    "view": "16",
    "tags": [
        "python",
        "machine-learning",
        "label"
    ],
    "answers_count": "1",
    "answers": [
        {
            "stack_answer_id": "76085901",
            "answer_content": "\r\n In this code, we first use the pd.read_excel function to read the Excel file into a pandas dataframe. We then create a dictionary using the dict function and the zip function to map each picture name in the Name column to its corresponding rating in the Rating column. \n import pandas as pd\n\n# Read the Excel file into a pandas dataframe\ndf = pd.read_excel('filename.xlsx')\n\n# Create a dictionary that maps the picture name to its rating\nrating_dict = dict(zip(df['Name'], df['Rating']))\n \n Once you have created the dictionary, you can use it to lookup the rating for each picture and perform any further processing based on the rating. For example, you can use the os module to load the corresponding picture file for each rating: \n import os\n\n# Iterate over the pictures and load the corresponding file based on the rating\nfor picture in rating_dict:\n    rating = rating_dict[picture]\n    if rating == 4:\n        file_path = f'{picture}.jpeg'\n        if os.path.exists(file_path):\n            # Load the picture file and perform further processing\n            # ...\n \n Here we iterate over the pictures in the rating_dict dictionary and lookup the rating for each picture. If the rating is equal to 4, we construct the file path for the picture file by appending the .jpeg extension to the picture name. We then check if the file exists using the os.path.exists function and load the file if it does. \n    ",
            "date_posted": "2023-04-23 16:06:35Z",
            "upvote": "\r\n            0\r\n        ",
            "accepted": "YES",
            "user": {
                "stack_user_id": "20091055",
                "name": "Dallas",
                "reputation_score": "69",
                "gold_badges": 0,
                "silver_badges": 0,
                "bronze_badges": "3"
            },
            "answer_comments": []
        }
    ],
    "user": {
        "stack_user_id": "21714798",
        "name": "del led",
        "reputation_score": "11",
        "gold_badges": 0,
        "silver_badges": 0,
        "bronze_badges": "1"
    },
    "question_comments": [
        {
            "stack_question_id": "76085632",
            "stack_question_comment_id": "134184770",
            "comment_content": "Please clarify your specific problem or provide additional details to highlight exactly what you need. As it's currently written, it's hard to tell exactly what you're asking.",
            "username": "Community"
        }
    ]
}
{
    "stack_question_id": "76085684",
    "question_title": "Using matplotlib cmap function outside of matplotlib [duplicate]",
    "question_content": "\r\n                I'm trying to use the same mapping function as matplotlib cmap but outside of matplotlib. E.g.:\nGiven:\nplt.imshow(image, cmap=\"viridis\")\n\nManually replicate same result such that every value ...\r\n            ",
    "question_url": "/questions/76085684/using-matplotlib-cmap-function-outside-of-matplotlib",
    "date_posted": "2023-04-23 15:20:00Z",
    "upvote": "0",
    "view": "14",
    "tags": [
        "python",
        "matplotlib"
    ],
    "answers_count": "0",
    "answers": [
        {
            "stack_answer_id": "15140118",
            "answer_content": "\r\n It's as simple as  cm.hot(0.3) : \n import matplotlib.cm as cm\n    \nprint(cm.hot(0.3))\n \n (0.8240081481370484, 0.0, 0.0, 1.0)\n \n If you also want to have the normalizer, use \n import matplotlib as mpl\nimport matplotlib.cm as cm\n   \nnorm = mpl.colors.Normalize(vmin=-20, vmax=10)\ncmap = cm.hot\nx = 0.3\n\nm = cm.ScalarMappable(norm=norm, cmap=cmap)\nprint(m.to_rgba(x))\n \n (1.0, 0.8225486412996345, 0.0, 1.0)\n \n    ",
            "date_posted": "2021-10-25 22:54:26Z",
            "upvote": "\r\n            122\r\n        ",
            "accepted": "NO",
            "user": {
                "stack_user_id": "353337",
                "name": "Nico Schl\u00f6mer",
                "reputation_score": "52.1k",
                "gold_badges": "26",
                "silver_badges": "194",
                "bronze_badges": "241"
            },
            "answer_comments": [
                {
                    "stack_answer_id": "15140118",
                    "stack_answer_comment_id": "127957427",
                    "comment_content": "how do you omit the alpha value in cm.hot()?",
                    "username": "S. Feunmajer"
                }
            ]
        },
        {
            "stack_answer_id": "42650009",
            "answer_content": "\r\n You can get a color from a colormap by supplying an argument between 0 and 1, e.g.  cm.autumn(0.5) .  \n\n If there is a normalization instance in the game, use the return of the Normalization instead: \n\n import matplotlib.cm as cm\nfrom matplotlib.colors import Normalize\n\ncmap = cm.autumn\nnorm = Normalize(vmin=-20, vmax=10)\nprint cmap(norm(5))\n \n    ",
            "date_posted": "2017-03-07 13:47:37Z",
            "upvote": "\r\n            25\r\n        ",
            "accepted": "YES",
            "user": {
                "stack_user_id": "4124317",
                "name": "ImportanceOfBeingErnest",
                "reputation_score": "315k",
                "gold_badges": "53",
                "silver_badges": "646",
                "bronze_badges": "696"
            },
            "answer_comments": [
                {
                    "stack_answer_id": "42650009",
                    "stack_answer_comment_id": "104765715",
                    "comment_content": "This way of using the API certainly looks much cleaner.",
                    "username": "Mateen Ulhaq"
                }
            ]
        },
        {
            "stack_answer_id": "62799153",
            "answer_content": "\r\n Number value to colormap color \n import matplotlib.cm as cm\nimport matplotlib as matplotlib\n\ndef color_map_color(value, cmap_name='Wistia', vmin=0, vmax=1):\n    # norm = plt.Normalize(vmin, vmax)\n    norm = matplotlib.colors.Normalize(vmin=vmin, vmax=vmax)\n    cmap = cm.get_cmap(cmap_name)  # PiYG\n    rgb = cmap(norm(abs(value)))[:3]  # will return rgba, we take only first 3 so we get rgb\n    color = matplotlib.colors.rgb2hex(rgb)\n    return color\n \n    ",
            "date_posted": "2020-07-08 16:18:53Z",
            "upvote": "\r\n            4\r\n        ",
            "accepted": "YES",
            "user": {
                "stack_user_id": "13893145",
                "name": "khnh123",
                "reputation_score": "41",
                "gold_badges": 0,
                "silver_badges": 0,
                "bronze_badges": "1"
            },
            "answer_comments": [
                {
                    "stack_answer_id": "62799153",
                    "stack_answer_comment_id": "122903199",
                    "comment_content": "Thank you for this! After hours of searching, this is what solved my problem.",
                    "username": "inconveniently_nonexempt_bee"
                }
            ]
        }
    ],
    "user": {
        "stack_user_id": "1730674",
        "name": "askewchan",
        "reputation_score": "44.8k",
        "gold_badges": "17",
        "silver_badges": "116",
        "bronze_badges": "133"
    },
    "question_comments": []
}
{
    "stack_question_id": "76085642",
    "question_title": "Is there a vim plugin for python unresolved references?",
    "question_content": "\r\n                I just came from pycharm to vim and I'm trying to set up a productive environment. In pycharm if there are some references unresolved (undefined variables, unimported libraries, etc.), they are ...\r\n            ",
    "question_url": "/questions/76085642/is-there-a-vim-plugin-for-python-unresolved-references",
    "date_posted": "2023-04-23 15:11:03Z",
    "upvote": "-2",
    "view": "11",
    "tags": [
        "python",
        "vim",
        "vim-plugin"
    ],
    "answers_count": "0",
    "answers": [],
    "user": {
        "stack_user_id": "18685251",
        "name": "Aidas",
        "reputation_score": "100",
        "gold_badges": 0,
        "silver_badges": 0,
        "bronze_badges": "4"
    },
    "question_comments": [
        {
            "stack_question_id": "76085642",
            "stack_question_comment_id": "134184093",
            "comment_content": "May be it's obvious but have you tried here? ",
            "username": "ranemirusG"
        },
        {
            "stack_question_id": "76085642",
            "stack_question_comment_id": "134184182",
            "comment_content": "@ranemirusG Thanks for the suggestion. Just looked there, but couldn't find anything related.",
            "username": "Aidas"
        },
        {
            "stack_question_id": "76085642",
            "stack_question_comment_id": "134185401",
            "comment_content": "Keep using your IDE if you need an IDE. Vim is not one.",
            "username": "romainl"
        }
    ]
}
{
    "stack_question_id": "76085633",
    "question_title": "C# UI to Flask API sending and receiving multiple images simultaneously",
    "question_content": "\r\n                I am trying to make a C# UI(Using WPF) communicate with a Flask api trough HTTP. The C# UI grabs live image from webcam and sends it to the Flask API which processes the Image and sends it back to the ...\r\n            ",
    "question_url": "/questions/76085633/c-sharp-ui-to-flask-api-sending-and-receiving-multiple-images-simultaneously",
    "date_posted": "2023-04-23 15:08:19Z",
    "upvote": "0",
    "view": "12",
    "tags": [
        "python",
        "c#",
        "flask",
        "httpclient"
    ],
    "answers_count": "0",
    "answers": [],
    "user": {
        "stack_user_id": "21082741",
        "name": "Nicolantonio De Bari",
        "reputation_score": "85",
        "gold_badges": 0,
        "silver_badges": 0,
        "bronze_badges": "5"
    },
    "question_comments": []
}
{
    "stack_question_id": "76085647",
    "question_title": "In Python is it technically possible to access a functions local variables after it has been executed? [duplicate]",
    "question_content": "\r\n                I guess, the answer is \"no\", since someone else asked something similar a while ago, but a lot happens in 7 years..\nIn some quite non-pythonic experiment I'd like to write a decorator which ...\r\n            ",
    "question_url": "/questions/76085647/in-python-is-it-technically-possible-to-access-a-functions-local-variables-after",
    "date_posted": "2023-04-23 15:11:55Z",
    "upvote": "-1",
    "view": "32",
    "tags": [
        "python",
        "python-3.x",
        "python-decorators"
    ],
    "answers_count": "0",
    "answers": [
        {
            "stack_answer_id": "3052827",
            "answer_content": "\r\n def foo():\n    x = 'hello world'\n    return x  # return 'hello world' would do, too\n\nfoo()\nprint(x)   # NameError - x is not defined outside the function\n\ny = foo()\nprint(y)   # this works\n\nx = foo()\nprint(x)   # this also works, and it's a completely different x than that inside\n           # foo()\n\nz = bar(x) # of course, now you can use x as you want\n\nz = bar(foo()) # but you don't have to\n \n    ",
            "date_posted": "2022-10-17 01:04:27Z",
            "upvote": "\r\n            35\r\n        ",
            "accepted": "NO",
            "user": {
                "stack_user_id": "2904896",
                "name": "metatoaster",
                "reputation_score": "17k",
                "gold_badges": "5",
                "silver_badges": "57",
                "bronze_badges": "64"
            },
            "answer_comments": []
        },
        {
            "stack_answer_id": "73356335",
            "answer_content": "\r\n Effectively, there are two ways: directly and indirectly. \n The direct way is to  return  a value from the function, as you tried, and let the calling code use that value. This is  normally what you want . The natural, simple, direct, explicit way to get information back from a function is to  return  it. Broadly speaking, the  purpose of  a function is to compute a value, and  return  signifies \"this is the value we computed; we are done here\". \n Directly using  return \n The main trick here is that  return  returns a  value, not  a variable. So  return x   does not  enable the calling code to use  x  after calling the function, and  does not  modify any existing value that  x  had in the context of the call. (That's presumably why you got a  NameError .) \n After we use  return  in the function: \n def example():\n    x = 'hello world'\n    return x\n \n we need to write the calling code to use the return value: \n result = example()\nprint(result)\n \n The other key point here is that a call to a function is an  expression , so we can use it the same way that we use, say, the result of an addition. Just as we may say  result = 'hello ' + 'world' , we may say  result = foo() . After that,  result  is our own,  local  name for that string, and we can do whatever we want with it. \n We can use the same name,  x , if we want. Or we can use a different name. The calling code doesn't have to know anything about how the function is written, or what names it uses for things. 1 \n We can use the value directly to call another function: for example,  print(foo()) . 2  We can  return  the value directly: simply  return 'hello world' , without assigning to  x . (Again: we are returning  a value, not a variable .) \n The function can only  return  once each time it is called.  return  terminates the function - again, we just determined the result of the calculation, so there is no reason to calculate any further. If we want to return multiple pieces of information, therefore, we will need to come up with a single  object  (in Python, \"value\" and \"object\" are effectively synonyms; this doesn't work out so well for some other languages.) \n We can  make a tuple right on the return line ; or we can use a dictionary, a  namedtuple  (Python 2.6+), a  types.simpleNamespace  (Python 3.3+), a  dataclass  (Python 3.7+), or some other class (perhaps even one we write ourselves) to associate names with the values that are being returned; or we can  accumulate values from a loop in a list ; etc. etc.  The possibilities are endless. . \n On the other hand, the function  return s whether you like it or not (unless an exception is raised). If it reaches the end, it will implicitly  return  the special value  None . You  may or may not want to do it explicitly instead . \n \n Indirect methods \n Other than  return ing the result back to the caller directly, we can communicate it by modifying some existing object that the caller knows about. There are many ways to do that, but they're all variations on that same theme. \n If you want the code to communicate information back this way, please just let it return  None  -  don't  also use the return value for something meaningful. That's  how the built-in functionality works . \n In order to modify that object, the  called  function also has to know about it, of course. That means, having a  name  for the object that can be looked up  in a current  scope . So, let's go through those in order: \n Local scope: Modifying a passed-in argument \n If  one of our parameters is mutable, we can just mutate it, and rely on the caller to examine the change. This is  usually  not a great idea, because it can be hard to reason about the code. It looks like: \n def called(mutable):\n    mutable.append('world')\n\ndef caller():\n    my_value = ['hello'] # a list with just that string\n    called(my_value)\n    # now it contains both strings\n \n If the value is an instance of our own class, we could also assign to an attribute: \n class Test:\n    def __init__(self, value):\n        self.value = value\n\ndef called(mutable):\n    mutable.value = 'world'\n\ndef caller():\n    test = Test('hello')\n    called(test)\n    # now test.value has changed\n \n Assigning to an attribute  does not work  for built-in types, including  object ; and it might not work for some classes that explicitly prevent you from doing it. \n Local scope: Modifying  self , in a method \n We already have an example of this above: setting  self.value  in the  Test.__init__  code. This is a special case of modifying a passed-in argument; but it's part of how classes work in Python, and something we're expected to do. Normally, when we do this, the calling won't actually check for changes to  self  - it will just use the modified object in the next step of the logic. That's what makes it appropriate to write code this way: we're still presenting an  interface , so the caller doesn't have to worry about the details. \n class Example:\n    def __init__(self):\n        self._words = ['hello']\n    def add_word(self):\n        self._words.append('world')\n    def display(self):\n        print(*self.words)\n\nx = Example()\nx.add_word()\nx.display()\n \n In the example, calling  add_word  gave information back to the top-level code - but instead of looking for it, we just go ahead and call  display . 3 \n See also:  Passing variables between methods in Python? \n Enclosing scope \n This is a rare special case when using nested functions. There isn't a lot to say here - it works the same way as with the global scope, just using  the  nonlocal  keyword  rather than  global . 4 \n Global scope: Modifying a global \n Generally speaking,  it is a bad idea to change anything in the global scope after setting it up in the first place . It makes code harder to reason about, because anything that  uses  that global (aside from whatever was responsible for the change) now has a \"hidden\" source of input. \n If you still want to do it, the syntax is straightforward: \n words = ['hello']\ndef add_global_word():\n    words.append('world')\n\nadd_global_word() # `words` is changed\n \n Global scope: Assigning to a new or existing global \n This is  actually a special case  of modifying a global. I don't mean that assignment is a kind of modification (it isn't). I mean that when you assign a global name, Python automatically updates a dict that represents the global namespace. You can get that dict with  globals() , and you can modify that dict and it will actually impact what global variables exist. (I.e., the return from  globals()  is the dictionary itself, not a copy.) 5 \n But please don't . That's even worse of an idea than the previous one. If you really need to get the result from your function by assigning to a global variable,  use the  global  keyword  to tell Python that the name should be looked up in the global scope: \n words = ['hello']\n\ndef replace_global_words():\n    global words\n    words = ['hello', 'world']\n\nreplace_global_words() # `words` is a new list with both words\n \n Global scope: Assigning to or modifying an attribute of the function itself \n This is a rare special case, but now that you've seen the other examples, the theory should be clear. In Python, functions are mutable (i.e. you can set attributes on them); and if we define a function at top level, it's in the global namespace. So this is really just modifying a global: \n def set_own_words():\n    set_own_words.words = ['hello', 'world']\n\nset_own_words()\nprint(*set_own_words.words)\n \n We shouldn't really use this to send information to the caller. It has all the usual problems with globals, and it's even harder to understand. But it can be useful to set a function's attributes from within the function, in order for the function to remember something in between calls. (It's similar to how methods remember things in between calls by modifying  self .) The  functools  standard library does this, for example in the  cache  implementation. \n Builtin scope \n This doesn't work. The builtin namespace doesn't contain any mutable objects, and you can't assign new builtin names (they'll go into the global namespace instead). \n \n Some approaches that don't work in Python \n Just calculating something before the function ends \n In some other programming languages, there is some kind of hidden variable that automatically picks up the result of the last calculation, every time something is calculated; and if you reach the end of a function without  return ing anything, it gets returned. That doesn't work in Python. If you reach the end without  return ing anything, your function returns  None . \n Assigning to the function's name \n In some other programming languages, you are allowed (or expected) to assign to a variable with the same name as the function; and at the end of the function, that value is returned. That still doesn't work in Python. If you reach the end without  return ing anything, your function still returns  None . \n def broken():\n    broken = 1\n\nbroken()\nprint(broken + 1) # causes a `TypeError`\n \n It might  seem like  you can at least use the value that way, if you use the  global  keyword: \n def subtly_broken():\n    global subtly_broken\n    subtly_broken = 1\n\nsubtly_broken()\nprint(subtly_broken + 1) # 2\n \n But this, of course, is just a special case of assigning to a global. And there's a big problem with it - the same name can't refer to two things at once. By doing this, the function  replaced its own name . So  it will fail next time : \n def subtly_broken():\n    global subtly_broken\n    subtly_broken = 1\n\nsubtly_broken()\nsubtly_broken() # causes a `TypeError`\n \n Assigning to a parameter \n Sometimes people expect to be able to assign to one of the function's parameters, and have it affect a variable that was used for the corresponding argument. However, this does not work: \n def broken(words):\n    words = ['hello', 'world']\n\ndata = ['hello']\nbroken(data) # `data` does not change\n \n Just like how Python returns  values, not variables , it also  passes  values, not variables.  words  is a local name; by definition the calling code doesn't know anything about that namespace. \n One of the working methods that we saw is to  modify  the passed-in list. That works because if the  list itself  changes, then it changes - it doesn't matter what name is used for it, or what part of the code uses that name. However,  assigning  a new list to  words   does not  cause the existing list to change. It just makes  words  start being a name for a different list. \n For more information, see  How do I pass a variable by reference? . \n \n 1  At least, not for getting the value back. If you want to use keyword arguments, you need to know what the keyword names are. But generally, the point of functions is that they're an  abstraction ; you only need to know about their  interface , and you don't need to think about what they're doing internally. \n 2  In 2.x,  print  is a statement rather than a function, so this doesn't make an example of calling another function directly. However,  print foo()  still works with 2.x's print statement, and so does  print(foo())  (in this case, the extra parentheses are just ordinary grouping parentheses). Aside from that, 2.7 (the last 2.x version) has been  unsupported since the beginning of 2020  - which was nearly a 5 year extension of the normal schedule. But then, this question was originally asked in 2010. \n 3 Again: if the purpose of a method is to update the object,  don't  also  return  a value. Some people like to return  self  so that you can \"chain\" method calls; but in Python this is considered poor style. If you want that kind of \"fluent\" interface, then instead of writing methods that update  self , write methods that create a new, modified instance of the class. \n 4  Except, of course, that if we're modifying a value rather than assigning, we don't need  either  keyword. \n 5  There's also a  locals()  that gives you a dict of local variables. However, this  cannot  be used to make new local variables - the behaviour is undefined in 2.x, and in 3.x the dict is created on the fly and assigning to it has no effect. Some of Python's optimizations depend on the local variables for a function being known ahead of time. \n    ",
            "date_posted": "2022-10-23 03:47:55Z",
            "upvote": "\r\n            6\r\n        ",
            "accepted": "YES",
            "user": {
                "stack_user_id": "523612",
                "name": "Karl Knechtel",
                "reputation_score": "61k",
                "gold_badges": "11",
                "silver_badges": "97",
                "bronze_badges": "144"
            },
            "answer_comments": []
        },
        {
            "stack_answer_id": "3052813",
            "answer_content": "\r\n >>> def foo():\n    return 'hello world'\n\n>>> x = foo()\n>>> x\n'hello world'\n \n    ",
            "date_posted": "2010-06-16 11:29:49Z",
            "upvote": "\r\n            4\r\n        ",
            "accepted": "YES",
            "user": {
                "stack_user_id": "12855",
                "name": "SilentGhost",
                "reputation_score": "303k",
                "gold_badges": "66",
                "silver_badges": "304",
                "bronze_badges": "292"
            },
            "answer_comments": []
        },
        {
            "stack_answer_id": "3052997",
            "answer_content": "\r\n You can use  global  statement and then achieve what you want without returning value from \nthe function. For example you can do something like below: \n\n def foo():\n    global x \n    x = \"hello world\"\n\nfoo()\nprint x\n \n\n The above code will print \"hello world\". \n\n But please be warned that usage of \"global\" is not a good idea at all and it is better to avoid usage that is shown in my example.  \n\n Also check this related discussion on about usage of  global  statement in Python. \n    ",
            "date_posted": "2017-05-23 10:31:19Z",
            "upvote": "\r\n            3\r\n        ",
            "accepted": "YES",
            "user": {
                "stack_user_id": "-1",
                "name": "Community",
                "reputation_score": "1",
                "gold_badges": "7",
                "silver_badges": "1",
                "bronze_badges": "45"
            },
            "answer_comments": [
                {
                    "stack_answer_id": "3052997",
                    "stack_answer_comment_id": "3125228",
                    "comment_content": "Technically, this is a solution to Seafoid's question, but pythonically, it's the worst-case-scenario (as you already pointed out).",
                    "username": "Tim Pietzcker"
                }
            ]
        }
    ],
    "user": {
        "stack_user_id": "523612",
        "name": "Karl Knechtel",
        "reputation_score": "61k",
        "gold_badges": "11",
        "silver_badges": "97",
        "bronze_badges": "144"
    },
    "question_comments": [
        {
            "stack_question_id": "76085647",
            "stack_question_comment_id": "3125140",
            "comment_content": "I really recommend you read the python tutorial here: ",
            "username": "Bj\u00f6rn Pollex"
        }
    ]
}
